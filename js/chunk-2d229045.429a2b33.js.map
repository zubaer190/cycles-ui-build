{"version":3,"sources":["webpack:///./src/views/maintanance/born-uncomplete-list.vue","webpack:///./src/views/maintanance/born-uncomplete-list.vue?da74"],"names":["class","style","value","completeList","selection","selectedList","dataKey","showGridlines","responsiveLayout","loading","scrollable","scrollHeight","header","cycleYear","cycleYearRequired","sourceFilter","options","sourceFilterOpts","optionLabel","optionValue","cycleCancelled","cycleCancelledOption","label","filter","download","footer","rows","totalRecords","rowsPerPageOptions","onPage","$event","selectionMode","headerStyle","field","body","data","ohip","cycleDate","split","setup","uploaded","page","perPage","getUncompleteList","total","event","cyclePayload","map","item","cycleId","patientId","payload","cycle","resp","status","window","open","csv","markAsUploadHandler","__exports__","render"],"mappings":"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","file":"js/chunk-2d229045.429a2b33.js","sourcesContent":["<template>\n    <p-data-table\n        :value=\"completeList\"\n        v-model:selection=\"selectedList\"\n        selection\n        dataKey=\"cycleId\"\n        class=\"p-datatable-sm\"\n        showGridlines\n        responsiveLayout=\"scroll\"\n        :loading=\"loading\"\n        :scrollable=\"true\"\n        scrollHeight=\"calc(100vh - 130px)\"\n    >\n        <template #header>\n            <div class=\"table-header\" style=\"display: flex;\">\n                <label class=\"p-mr-2 p-mt-2\">Cycle Year</label>\n                <p-input-text\n                    v-model=\"cycleYear\"\n                    class=\"p-mr-2\"\n                    :class=\"{ 'p-invalid': cycleYearRequired }\"\n                />\n\n                <label class=\"p-mr-2 p-mt-2\">Filter</label>\n\n                <p-multi-select\n                    v-model=\"sourceFilter\"\n                    :options=\"sourceFilterOpts\"\n                    optionLabel=\"label\"\n                    optionValue=\"value\"\n                    class=\"p-mr-2\"\n                    style=\"width: 200px;\"\n                />\n\n                <label class=\"p-mr-2 p-mt-2\">Cycle Cancelled</label>\n                <p-dropdown\n                    v-model=\"cycleCancelled\"\n                    :options=\"cycleCancelledOption\"\n                    optionLabel=\"label\"\n                    optionValue=\"value\"\n                    style=\"width: 80px;\"\n                    class=\"p-mr-2\"\n                />\n\n                <p-button\n                    label=\"Filter\"\n                    class=\"p-mr-2 p-button-sm\"\n                    @click=\"filter\"\n                />\n\n                <p-button\n                    label=\"Download\"\n                    class=\"p-mr-2 p-button-sm p-button-warning\"\n                    @click=\"download\"\n                />\n            </div>\n        </template>\n\n        <p-column\n            selectionMode=\"multiple\"\n            headerStyle=\"width: 3em\"\n            style=\"width: 3rem; max-width: 3rem;\"\n        />\n        <p-column field=\"patientName\" header=\"Patient name\" />\n        <p-column\n            field=\"patientId\"\n            header=\"Chart ID\"\n            style=\"max-width: 12rem\"\n        />\n        <p-column\n            field=\"dateCompleted\"\n            header=\"Date Completed\"\n            style=\"max-width: 12rem\"\n        />\n        <p-column\n            field=\"cycleNo\"\n            header=\"Cycle Number\"\n            style=\"max-width: 10rem\"\n        />\n        <p-column field=\"cycleId\" header=\"Cycle id\" style=\"max-width: 7rem\" />\n        <p-column\n            field=\"cycleName\"\n            header=\"Cycle Type\"\n            style=\"max-width: 8rem\"\n        />\n        <p-column\n            field=\"cycleNoType\"\n            header=\"Cycle no type\"\n            style=\"max-width: 8rem\"\n        />\n        <p-column field=\"ohip\" header=\"Funded\" style=\"max-width: 7rem\">\n            <template #body=\"{ data }\">\n                {{ data.ohip == 1 ? \"Yes\" : \"No\" }}\n            </template>\n        </p-column>\n        <p-column\n            field=\"cycleDate\"\n            header=\"Cycle Date\"\n            style=\"max-width: 120px\"\n        >\n            <template #body=\"{ data }\">\n                {{ data.cycleDate.split(\" \")[0] }}\n            </template>\n        </p-column>\n\n        <p-column field=\"source\" header=\"Source\" />\n\n        <p-column></p-column>\n\n        <template #footer>\n            <p-paginator\n                :rows=\"20\"\n                :totalRecords=\"totalRecords\"\n                :rowsPerPageOptions=\"[20, 50, 100]\"\n                @page=\"onPage($event)\"\n            />\n        </template>\n    </p-data-table>\n</template>\n\n<script>\nimport { ORIGIN } from \"@/config\";\nimport {\n    getBornUncompleteList,\n    getBronCsvMulti,\n    markAsUpload\n} from \"@/service/art-cycle\";\nimport { ref, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n    setup() {\n        const completeList = ref([]);\n        const selectedList = ref([]);\n        const loading = ref(false);\n        const totalRecords = ref(0);\n        const uploaded = ref(false);\n        const cycleYear = ref();\n        const page = ref(1);\n        const perPage = ref(20);\n        const sourceFilter = ref([]);\n        const sourceFilterOpts = ref([\n            { value: \"cycle-monitoring\", label: \"Cycle monitoring\" },\n            { value: \"opu\", label: \"Opu\" },\n            { value: \"pregnancy\", label: \"Pregnancy\" },\n            { value: \"fertilization\", label: \"Fertilization\" },\n            { value: \"embryo-transfer\", label: \"Embryo transfer\" }\n        ]);\n        const cycleYearRequired = ref(false);\n\n        const cycleCancelled = ref(null);\n        const cycleCancelledOption = ref([\n            { label: \"Yes\", value: \"yes\" },\n            { label: \"No\", value: \"no\" },\n            { label: \"All\", value: \"all\" }\n        ]);\n\n        const getUncompleteList = async () => {\n            if (cycleYear.value == null || cycleYear.value == \"\") {\n                cycleYearRequired.value = true;\n                return;\n            }\n            cycleYearRequired.value = false;\n            loading.value = true;\n            const { data, total } = await getBornUncompleteList(\n                page.value,\n                perPage.value,\n                cycleYear.value,\n                sourceFilter.value,\n                cycleCancelled.value\n            );\n            completeList.value = data;\n            totalRecords.value = total;\n            loading.value = false;\n            selectedList.value = [];\n        };\n\n        const onPage = (event) => {\n            page.value = event.page + 1;\n            perPage.value = event.rows;\n            getUncompleteList();\n        };\n\n        const cyclePayload = () => {\n            return selectedList.value.map((item) => ({\n                cycleId: item.cycleId,\n                patientId: item.patientId\n            }));\n        };\n\n        const store = useStore();\n        const download = async () => {\n            const payload = {\n                cycle: cyclePayload()\n            };\n\n            const resp = await getBronCsvMulti(payload);\n            if (resp.status == \"failed\") return;\n\n            window.open(`${ORIGIN}/${resp.csv}`);\n            selectedList.value = [];\n        };\n\n        const markAsUploadHandler = async () => {\n            const payload = {\n                cycle: cyclePayload(),\n                status: 1\n            };\n            await markAsUpload(payload);\n            getUncompleteList();\n        };\n\n        return {\n            completeList,\n            selectedList,\n            loading,\n            uploaded,\n            cycleYear,\n            cycleYearRequired,\n            totalRecords,\n            onPage,\n            download,\n            markAsUploadHandler,\n            filter: () => {\n                getUncompleteList();\n            },\n            sourceFilter,\n            sourceFilterOpts,\n            cycleCancelled,\n            cycleCancelledOption\n        };\n    }\n};\n</script>\n","import { render } from \"./born-uncomplete-list.vue?vue&type=template&id=cdd26ec6\"\nimport script from \"./born-uncomplete-list.vue?vue&type=script&lang=js\"\nexport * from \"./born-uncomplete-list.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/saif/Projects/vue-cycle-ui/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}