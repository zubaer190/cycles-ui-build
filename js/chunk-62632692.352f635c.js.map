{"version":3,"sources":["webpack:///./src/composable/users.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./src/composable/born.js","webpack:///./src/composable/validator.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js"],"names":["useUserForm","type","store","useStore","buttonLabel","computed","FORM_TYPE","CREATE","EDIT","form","reactive","name","email","username","phone","password","passwordConfirm","role","active","security","station","providerNo","providerName","rules","required","requiredIf","passwordDidnotMatch","v$","useVuelidate","submitted","ref","userRoleOptions","label","value","stationOptions","groupOptions","state","users","groups","usePermissionCheck","route","useRoute","permission","idx","user","permissions","findIndex","item","appKey","path","hasUpdatePermission","updatePermission","hasCreatePermission","hasDeletePermission","deletePermission","hasBornCSVPermission","readPermission","$","$trim","trim","forcedStringTrimMethod","target","proto","forced","this","spermTooLowCountValidator","complications","helpers","withParams","length","includes","req","typeOfPregnancyValidator","embryoTransfer","fetalSacsUSValidator","param","typeOfPregnancy","parseInt","fetalheartsUSValidator","chorionicityValidator","fetalheartsUS","useComplicationFormInit","toast","useToast","confirm","useConfirm","spermTooLowCount","treatmentOutcome","fetalSacsUS","chorionicity","electiveFetalReduction","loading","born","toRefs","fillForm","data","rule","validator","withMessage","dependentOn","_save","join","getters","dispatch","then","add","severity","summary","detail","life","catch","err","finally","save","$invalid","complicationOptions","options","treatmentOutcomeOptions","typeOfPregnancyOptions","chorionicityOptions","electiveFetalReductionOptions","newbornDateBirthValidator","pregnancyBirthOutcome","pregnancyLossDateValidator","babiesbornValidator","usePregnancyOutcomeForm","newbornDateBirth","pregnancyLossDate","oxytocinBeforeBirth","babiesborn","gestationalWeeks","gestationalDays","Date","validDate","console","log","format","DATE_FORMAT_STRING","pregnancyBirthOutcomeOptions","isNumberOocytesCryoedIsGreaterThan0","oocyteCryoPreserved","oocyteCollectionDateValidator","semenVolumeValidator","spermOrigin","spermSource","cyccleType","intersection","freshSpermOrigins","filter","spermMotilityValidator","cycleType","CycleType","EGG_FREEZING","spermDonorIDValidator","spermDonorStatusValidator","oocyteOriginValidator","FET","retrievedOrThawedValidator","oocyteCryoPreservedValidator","donorProviderSatusValidator","oocyteOrigin","OOCYTE_ORIGIN","FRESH_DONOR_OOCYTES","FROZEN_DONOR_OOCYTES","useOocyteCollectionInit","oocyteCollectionFrom","oocyteCollectionDate","oocyteThawDate","collectionDateUnknown","oocyteFreezeID1Thawed","oocyteFreezeID2Thawed","retrievedOrThawed","oocyteFreezeID","donorProviderIDCode","donorProviderSource","oocyteFreezeDate","donorProviderstatus","oocyteCryoMethod","ageSpermProvider","spermDonorID","spermDonorStatus","spermMotility","spermDonorBank","semenVolume","spermCount","spermCollection","otherPatient","otherPrimaryCycleId","fromOutside","oocyteCollections","filteredPatient","patientFilter","event","Service","searchDemographic","term","query","sex","toLowerCase","resp","otherPrimaryCycles","getOtherPrimaryCycles","getPrimaryCyclesService","demographicNo","artCycle","selectedCycle","cycleDate","map","cycleId","onOocyteAssingedToChageHandler","patientId","patient","id","getFreshOocyte","status","fillOocyteFormDefault","freshOocyte","emptyDonor","onOtherCycleIdChangeHandler","emptyOocyteCollectionFrom","TIME_0","ppayload","primaryCycleId","otherPatientId","updatePrimaryCycle","oocytesCryopreserved","oocyteOriginOptions","donorProviderStatusOptions","oocyteCryoMethodOptions","spermOriginOptions","spermOriginStatusOptions","spermSourceOptions","requiredIfprovincialFundingIsYes","provincialFundingForThisCycle","requiredIfReasonsForTreatmentCycleIsMaleFactor","reasonsForTreatmentCycle","provincialFundingValidator","reasonsForTreatmentCycleValidtor","useObstetricalHistoryFormInit","priorBirths","priorPregnancies","priorFreshCyclesStarted","priorETsOwnOocytes","priorETsDonorOocytes","typeOfFunding","otherSpecify","originOfSimulatedCycle","primaryCycle","reasonsForMaleFactor","pgtAPlanned","priorPregnanciesOptions","priorBirthsOptions","priorFreshCyclesStartedOptions","priorETsOwnOocytesOptions","priorETsDonorOocytesOptions","typeOfFundingOptions","reasonsForMaleFactorOptions","reasonsForTreatmentCycleOptions","noOfDaysGonadotropinsValidator","medicationForCOS","FSH_VALIDATORS_MEDICATION_FOR_COS","totalDoseFSHValidator","totalDoseLHValidator","parseFloat","afcOocyteValidtor","reasonForTreatmentCycle","amhLevelOocyteValidtor","mediAdminisPriorCosValidator","cycle","totalDoseRekovelleMcgValidator","FSH_REKOVELLE_VALIDATORS_MEDICATION_FOR_COS","progesterOneLevelValidator","reasonCancelledValidator","cycleCancelled","reasonCancelledDescValidator","ofFolliclesGt15mmValidator","ofFolliclesLt15mmValidator","medicationForCOSValidator","useOvariannFormInit","ageOfOocyteAge","hightOfOocyteHight","weightOfOocyte","bmiOfOocyte","fshDayOocyte","afcOocyte","ngPMOOocyte","typeOfStimulationProtocol","TYPE_OF_STIMULATION_PROTOCOL_DEFAULT","otherTypeOfStiProtocolDes","otherMedicationCOS","adjuvantMedication","ADJUVANT_MEDICATION_DEFAULTS","otherAdjuvantMediDescription","triggerMedication","TRIGGER_MEDICATION_DEFAULTS","otheTriMedDesc","noOfDaysGonadotropins","totalDoseFSH","totalDoseLH","ofFolliclesLs15mm","ofFolliclesGt15mm","estradiolLevel","progesterOneLevel","endometrialThicknessFreshCycle","cycleCancelledBeforeRetrieval","reasonCancelled","otherReasonCanDesc","bornConsent","cervicalRipeningInduc","afcDate","amhLevelDate","ovarianHyperStimulationSyndrome","amhLevelOocyte","cycleStopped","totalDoseRekovelleMcg","mediAdminisPriorCos","MEDI_ADMINIS_PRIOR_COS_DEFUALT","otherMediPriorCosDesc","minValue","maxValue","age","cycleStoppped","typeOfStimulationProtocolOptions","triggerMedicationOptions","medicationForCOSOptions","medicationAdministraionPriorToCosOptions","medicationAdministraionPriorToCos","reasonCancelledOptions","adjuvantMedicationOptions","bornConsentOptions","oxytocinBeforeBirthOpts","cervicalRipeningInducOpts","ovarianHyperStimulationSyndromeOpts","useBornMarkAsComplete","markAsComplete","source","payload","$axios","post","embryoTransferValidator","cancel","isEbryoTrasferNo","isEbryoTrasferYes","preparationUterineLiningValidator","embryosTransferredValidator","utilizableEmbryos","embryosCryopreserved","utilizableAfterThaw","_utilizableEmbryos","_utilizableAfterThaw","_embryosCryopreserved","calc","SOURCE_TRANSFERRED_EMBRYOS_NOT_FET","sourceTransferredEmbryosValidationMessage","sourceTransferredEmbryosValidator","transferInseminationMethodValidator","noOfEmbryosTransferred","sourceTransferredEmbryos","cycleStartDate","freshSourceTransferredEmbryosIds","elem","CYCLE_START_DATE_JAN_19","preImplGeneticTestingValidator","sitePGTembryoValidator","charTransferredEmbryoValidator","preImplementationGeneticSergery","numberThawsValidator","intersections","TRANSFERRED_EMBRYO_SOURCE_FROZENS","endometrialThicknessValidtor","useBornEmbryoTransferInit","reasonsNoET","preparationUterineLining","endometrialThickness","transferDate","dateETAdjusted","dayET","ultrasoundGuidedET","assistedZonaHatching","embryosTransferred","electiveTransfeESET","transferInseminationMethod","preImplGeneticTesting","charTransferredEmbryo","numberThaws","sitePGTembryo","gestationalCarrierSurrogate","gestationalCarrierSurrogateChart","heightRecipient","weightRecipient","recipientBMI","endometrialReceptivityTest","howManyTimesGestationalCarrier","ageOfGestationalCarrier","numberPriorLiveBirthsForGC","undefined","getDefaultEndometrialThickness","items","cycleMonitoring","lines","etUs","thickness","PREPARATION_UTERINE_LINING_DEFAULT","fertilizationEmbryoThawDate","reasonsNoETOptions","preparationUterineLiningOptions","assistedZonaHatchingOptions","sourceTransferredEmbryosOptions","transferInseminationMethodOptions","charTransferredEmbryoOptions","numberThawsOptions","sitePGTembryoOptions","inseminationMethodValidator","noOfOocytesRetrieved","oocytesNotUsedValidator","oocytesRetrieved","inseminatedInjected","reasonsForNoUseValidator","oocytesNotUsed","embryoStageFreezingValidator","normalFertilization2PNValidator","noOocytesInseminatedInjected","ofMIIValidator","utilizableEmbryosValidator","embryosCryopreservedValidator","embryosThawed","reasonEmbryoCryopreservationValidator","embryoFreshCryoMethodValidator","embryoFreezeDate1Validator","useBornFreshEmbryoInit","inseminationMethod","reasonsForNoUse","embryoStageFreezing","embryoFreezeID1","embryoFreezeID2","embryoFreezeID3","embryoFreezeID4","normalFertilization2PN","embryoFreezeDate1","embryoFreezeDate2","embryoFreezeDate3","embryoFreezeDate4","ofMII","reasonEmbryoCryopreservation","embryoFreshCryoMethod","isParentSimulated","emitter","emit","simulated_cycle","fillFormDefault","getDeafultDataByPrimaryCycle","getFreshEbmryo","freshEmbryos","simulatedCycle","inseminationMethodOptions","reasonsForNoUseOptions","embryoStageFreezingOptions","reasonEmbryoCryopreservationOptions","embryoFreshCryoMethodOptions","cycleIds","cyclesSummary","isFETCycleValidator","useBronFrozenEmbyoInit","embryoFreezeID1Thawed","embryoFreezeID2Thawed","embryoFreezeID3Thawed","embryoFreezeID4Thawed","embryoStageThawing","embryoFrozenCryoMethod","embryoThawDate","donatedEmbryoFromAnotherCouple","embryoIncubationType","aIToolUsedInEmbryo","aIToolType","otherAITool","ohssAdverseEvents","ohssUnrelatedEvents","otherAdverseEvents","ohssOtherAdverseEvents","commit","embryoStageThawingOptions","embryoFrozenCryoMethodOptions","aIToolUsedInEmbryoOpts","embryoIncubationTypeOpts","aIToolTypeOpts","ohssAdverseEventsOpts","otherAdverseEventsOpts","ohssUnrelatedEventsOpts","congenitalAnomaliesValidator","noOfBabiesBorn","useBornExtraFormInit","patientNotes","bornConsentFlag","pgtAIsPlanned","patientHistoryNotes","stimulationNotes","spermCollectionNotes","embryologyNotes","endoRecTestdPerformed","recTestBiopsyResult","transferNotes","pregnancyOutcomeNotes","estimatedDateOfBirth","gestationalAge","complicationsOfPregnancy","maternalHealthConditions","diabetesAndPregnancy","hypertensionDisorder","typeOfLabour","augmentation","methodsOfInduction","typeOfDelivery","allIndicationsOfLabour","cervicalRipening","allIndicationsCaesarean","labourBirthComplications","maternalOutcome","birthWeight","congenitalAnomalies","neonatalDeath","apgar1","apgar5","apgar10","neonatalBirthComplications","admissionToNicu","notesOnBirthOutcome","liveBornFetus","sexFetus","medicationForCOSContainFSHOrLhOrFshPlusLH","getBornExtra","$validate","patient_notes","born_consent_flag","pgt_a_is_planned","patient_history_notes","medi_adminis_prior_cos","total_dose_rekovelle_mcg","stimulation_notes","sperm_collection_notes","embryology_notes","endo_rec_testd_performed","rec_test_biopsy_result","transfer_notes","pregnancy_outcome_notes","estimated_date_of_birth","gestational_age","complications_of_pregnancy","maternal_health_conditions","diabetes_and_pregnancy","hypertension_disorder","type_of_labour","methods_of_induction","type_of_delivery","all_indications_of_labour","cervical_ripening","all_indications_caesarean","labour_birth_complications","maternal_outcome","birth_weight","congenital_anomalies","neonatal_death","apgar_1","apgar_5","apgar_10","neonatal_birth_complications","admission_to_nicu","notes_on_birth_outcome","live_born_fetus","sex_fetus","preExistingMentalHealthCondition","useBornFieldOptions","complicationsOfPregnancyOptions","metarnalHealthConditionOptions","diabetesAndPregnancyOptions","hypertensionDisorderOptions","typeOfLabourOptions","augmentationOptions","methodsOfInductionOptions","typeOfDeliveryOptions","cervicalRipeningOptions","apgarOptions","neonatalBirthComplicationsOptions","newbornComplications","indicationLabourOptions","indicationCaesareanOptions","labourBirthComplicationsOptions","maternalOutcomeOptions","medicationAdministraionPriorCOS","require","DATE_REGEX","match","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","ES3_STRINGS","Object","STRICT_METHOD","separator","call","fails","whitespaces","non","module","exports","METHOD_NAME"],"mappings":"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","file":"js/chunk-62632692.352f635c.js","sourcesContent":["import { computed, reactive, ref } from \"vue\";\r\nimport { email, required, requiredIf, sameAs } from \"@vuelidate/validators\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { FORM_TYPE, USER_ROLE } from \"@/config\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute } from \"vue-router\";\r\n\r\nexport function useUserForm(type) {\r\n    const store = useStore();\r\n    const buttonLabel = computed(() => {\r\n        if (type === FORM_TYPE.CREATE) {\r\n            return \"Save\";\r\n        }\r\n        if (type === FORM_TYPE.EDIT) {\r\n            return \"Save\";\r\n        }\r\n    });\r\n\r\n    const form = reactive({\r\n        name: null,\r\n        email: null,\r\n        username: null,\r\n        phone: null,\r\n        password: null,\r\n        passwordConfirm: null,\r\n        role: null,\r\n        active: true,\r\n        security: [],\r\n        station: null,\r\n        providerNo: null,\r\n        providerName: null\r\n    });\r\n\r\n    const rules = {\r\n        name: { required },\r\n        email: { required, email },\r\n        username: { required },\r\n        password: { required: requiredIf(() => type === FORM_TYPE.CREATE) },\r\n        passwordConfirm: {\r\n            required: requiredIf(() => type === FORM_TYPE.CREATE)\r\n        },\r\n        security: { required }\r\n    };\r\n\r\n    const passwordDidnotMatch = computed(\r\n        () => form.password !== form.passwordConfirm\r\n    );\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n    const submitted = ref(false);\r\n\r\n    const userRoleOptions = [\r\n        { label: \"Yes\", value: \"2\" },\r\n        { label: \"No\", value: \"1\" }\r\n    ];\r\n\r\n    const stationOptions = [\r\n        { label: \"Embryology\", value: \"embryology\" },\r\n        { label: \"Andrology\", value: \"andrology\" },\r\n        { label: \"Phlebotomy\", value: \"Phlebotomy\" },\r\n        { label: \"Reception\", value: \"reception\" },\r\n        { label: \"Ultrasound\", value: \"ultrasound\" },\r\n        { label: \"Admin\", value: \"admin\" },\r\n        { label: \"Doctor\", value: \"doctor\" },\r\n        { label: \"Nursing\", value: \"nursing\" }\r\n    ];\r\n\r\n    const groupOptions = computed(() => store.state.users.groups);\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        submitted,\r\n        buttonLabel,\r\n        userRoleOptions,\r\n        stationOptions,\r\n        passwordDidnotMatch,\r\n        groupOptions,\r\n    };\r\n}\r\n\r\nexport function usePermissionCheck() {\r\n    const store = useStore();\r\n    const route = useRoute();\r\n\r\n    const permission = computed(() => {\r\n        const idx = store.state.user.permissions.findIndex(\r\n            (item) => `/${item.appKey}` === route.path\r\n        );\r\n        return store.state.user.permissions[idx];\r\n    });\r\n\r\n    const hasUpdatePermission = computed(\r\n        () => permission.value.updatePermission\r\n    );\r\n\r\n    const hasCreatePermission = computed(\r\n        () => permission.value.updatePermission\r\n    );\r\n\r\n    const hasDeletePermission = computed(\r\n        () => permission.value.deletePermission\r\n    );\r\n\r\n    const hasBornCSVPermission = computed(() => {\r\n        const idx = store.state.user.permissions.findIndex(\r\n            (item) => item.appKey === \"born-csv\"\r\n        );\r\n\r\n        if (idx > 0) {\r\n            return store.state.user.permissions[idx].readPermission;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return {\r\n        hasUpdatePermission,\r\n        hasCreatePermission,\r\n        hasDeletePermission,\r\n        hasBornCSVPermission\r\n    };\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","import { CycleType, DATE_FORMAT_STRING } from \"@/config\";\r\nimport format from \"date-fns/format\";\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { computed, inject, reactive, ref, toRef, toRefs } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { required, helpers, minValue, maxValue } from \"@vuelidate/validators\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport Service from \"@/service/art-cycle.js\";\r\nimport {\r\n    getPrimaryCycles as getPrimaryCyclesService,\r\n    updatePrimaryCycle\r\n} from \"@/service/opu\";\r\nimport {\r\n    ADJUVANT_MEDICATION_DEFAULTS,\r\n    CYCLE_START_DATE_JAN_19,\r\n    FSH_REKOVELLE_VALIDATORS_MEDICATION_FOR_COS,\r\n    FSH_VALIDATORS_MEDICATION_FOR_COS,\r\n    MEDI_ADMINIS_PRIOR_COS_DEFUALT,\r\n    OOCYTE_ORIGIN,\r\n    PREPARATION_UTERINE_LINING_DEFAULT,\r\n    RADIO_NO,\r\n    RADIO_YES,\r\n    TIME_0,\r\n    TRANSFERRED_EMBRYO_SOURCE_FROZENS,\r\n    TRIGGER_MEDICATION_DEFAULTS,\r\n    TYPE_OF_STIMULATION_PROTOCOL_DEFAULT\r\n} from \"@/constants\";\r\nimport { getFreshEbmryo, getFreshOocyte } from \"@/service/born\";\r\nimport { emitter } from \"@/event-bus\";\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { validDate } from \"@/composable/validator\";\r\n\r\nconst spermTooLowCountValidator = (complications) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (complications.value.length == 0) {\r\n            return true;\r\n        }\r\n\r\n        if (complications.value.includes(\"None\")) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst typeOfPregnancyValidator = (embryoTransfer) =>\r\n    helpers.withParams({ type: \"embryoTransfer\" }, (value) => {\r\n        if (embryoTransfer.value == \"no\") {\r\n            return value === \"Not Pregnant\";\r\n        }\r\n\r\n        if (embryoTransfer.value == \"yes\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst fetalSacsUSValidator = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            param.typeOfPregnancy == null ||\r\n            param.typeOfPregnancy == \"Biochemical\" ||\r\n            param.typeOfPregnancy == \"Not Pregnant\" ||\r\n            param.typeOfPregnancy == \"Unknown\"\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            param.typeOfPregnancy == \"Clinical Intrauterine\" ||\r\n            param.typeOfPregnancy == \"Heterotopic\" ||\r\n            param.typeOfPregnancy == \"Molar Pregnancy\"\r\n        ) {\r\n            return parseInt(value) > 0;\r\n        }\r\n\r\n        if (param.typeOfPregnancy == \"Ectopic\") {\r\n            return parseInt(value) >= 0;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst fetalheartsUSValidator = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            param.typeOfPregnancy == \"Clinical Intrauterine\" ||\r\n            param.typeOfPregnancy == \"Heterotopic\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst chorionicityValidator = (typeOfPregnancy, fetalheartsUS) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            (typeOfPregnancy.value == \"Clinical Intrauterine\" ||\r\n                typeOfPregnancy.value == \"Heterotopic\") &&\r\n            parseInt(fetalheartsUS.value) >= 2\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst treatmentOutcomeValidator = (embryoTransfer, cycleCancelled) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (embryoTransfer.value == \"no\" || cycleCancelled.value == \"yes\") {\r\n            return value == \"Cycle not completed to transfer\" || value == null;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nexport function useComplicationFormInit() {\r\n    const toast = useToast();\r\n    const store = useStore();\r\n    const confirm = useConfirm();\r\n\r\n    const form = reactive({\r\n        complications: [],\r\n        spermTooLowCount: null,\r\n        treatmentOutcome: null,\r\n        typeOfPregnancy: null,\r\n        fetalSacsUS: null,\r\n        fetalheartsUS: null,\r\n        chorionicity: null,\r\n        electiveFetalReduction: null\r\n    });\r\n    const loading = ref(false);\r\n    const complications = computed(() => store.state.born.complications);\r\n\r\n    const { typeOfPregnancy, fetalheartsUS } = toRefs(form);\r\n\r\n    const fillForm = (data) => {\r\n        form.complications = data.complications ? data.complications : [];\r\n        form.spermTooLowCount = data.spermTooLowCount;\r\n        form.fetalSacsUS = data.fetalSacsUS;\r\n        form.fetalheartsUS = data.fetalheartsUS;\r\n        form.chorionicity = data.chorionicity;\r\n        form.electiveFetalReduction = data.electiveFetalReduction;\r\n        if (data.treatmentOutcome != null) {\r\n            form.treatmentOutcome = data.treatmentOutcome;\r\n        }\r\n        if (data.typeOfPregnancy != null) {\r\n            form.typeOfPregnancy = data.typeOfPregnancy;\r\n        }\r\n    };\r\n\r\n    const rule = {\r\n        complications: {\r\n            required\r\n        },\r\n        spermTooLowCount: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                spermTooLowCountValidator(computed(() => form.complications))\r\n            )\r\n        },\r\n        typeOfPregnancy: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required if embryo transfer is yes & must be Not Pregnent if embryo transfer is no\",\r\n                typeOfPregnancyValidator(\r\n                    computed(() => store.state.born.dependentOn.embryoTransfer)\r\n                )\r\n            )\r\n        },\r\n        fetalSacsUS: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                fetalSacsUSValidator(form)\r\n            )\r\n        },\r\n        fetalheartsUS: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                fetalheartsUSValidator(form)\r\n            )\r\n        },\r\n        chorionicity: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                chorionicityValidator(typeOfPregnancy, fetalheartsUS)\r\n            )\r\n        },\r\n        electiveFetalReduction: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                chorionicityValidator(typeOfPregnancy, fetalheartsUS)\r\n            )\r\n        },\r\n        // treatmentOutcome: {\r\n        //     validator: helpers.withMessage(\r\n        //         \"Value Must be Cycle not completed to transfer or null\",\r\n        //         treatmentOutcomeValidator(\r\n        //             computed(() => store.state.born.dependentOn.embryoTransfer),\r\n        //             computed(() => store.state.born.dependentOn.cycleCancelled)\r\n        //         )\r\n        //     )\r\n        // }\r\n    };\r\n\r\n    const v$ = useVuelidate(rule, form);\r\n\r\n    const _save = () => {\r\n        loading.value = true;\r\n        const data = {\r\n            ...form,\r\n            complications: form.complications.join(\",\"),\r\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"]\r\n        };\r\n\r\n        store\r\n            .dispatch(\"born/updateComplication\", data)\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .catch((err) => {})\r\n            .finally(() => (loading.value = false));\r\n    };\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const fetalSacsUSWarning = ref();\r\n\r\n    const complicationOptions = computed(\r\n        () => store.state.options.complications\r\n    );\r\n    const treatmentOutcomeOptions = computed(\r\n        () => store.state.options.treatmentOutcome\r\n    );\r\n    const typeOfPregnancyOptions = computed(\r\n        () => store.state.options.typeOfPregnancy\r\n    );\r\n    const chorionicityOptions = computed(\r\n        () => store.state.options.chorionicity\r\n    );\r\n    const electiveFetalReductionOptions = computed(\r\n        () => store.state.options.electiveFetalReduction\r\n    );\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        save,\r\n        v$,\r\n        complications,\r\n        fillForm,\r\n        loading,\r\n        confirm,\r\n        complicationOptions,\r\n        treatmentOutcomeOptions,\r\n        typeOfPregnancyOptions,\r\n        chorionicityOptions,\r\n        electiveFetalReductionOptions\r\n    };\r\n}\r\n\r\nconst newbornDateBirthValidator = (form) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            form.pregnancyBirthOutcome == \"1050880\" ||\r\n            form.pregnancyBirthOutcome == \"1050920\" ||\r\n            form.pregnancyBirthOutcome == \"1050930\" ||\r\n            form.pregnancyBirthOutcome == \"1050940\" ||\r\n            form.pregnancyBirthOutcome == \"1050950\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst pregnancyLossDateValidator = (form) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            form.pregnancyBirthOutcome == \"1050890\" ||\r\n            form.pregnancyBirthOutcome == \"1050900\" ||\r\n            form.pregnancyBirthOutcome == \"1050910\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst babiesbornValidator = (form) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            form.pregnancyBirthOutcome == \"1050880\" ||\r\n            form.pregnancyBirthOutcome == \"1050920\" ||\r\n            form.pregnancyBirthOutcome == \"1050930\" ||\r\n            form.pregnancyBirthOutcome == \"1050940\" ||\r\n            form.pregnancyBirthOutcome == \"1050950\"\r\n        ) {\r\n            return parseInt(value) > 0;\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function usePregnancyOutcomeForm() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const form = reactive({\r\n        pregnancyBirthOutcome: null,\r\n        newbornDateBirth: null,\r\n        pregnancyLossDate: null,\r\n        oxytocinBeforeBirth: null,\r\n        babiesborn: null,\r\n        gestationalWeeks: null,\r\n        gestationalDays: null\r\n    });\r\n    const loading = ref(false);\r\n\r\n    const fillForm = (data) => {\r\n        form.pregnancyBirthOutcome = data.pregnancyBirthOutcome;\r\n        form.newbornDateBirth = data.newbornDateBirth ? new Date(data.newbornDateBirth) : null;\r\n        form.pregnancyLossDate = data.pregnancyLossDate ? new Date(data.pregnancyLossDate) : null;\r\n        form.oxytocinBeforeBirth = data.oxytocinBeforeBirth;\r\n        form.babiesborn = data.babiesborn;\r\n        form.gestationalWeeks = data.gestationalWeeks;\r\n        form.gestationalDays = data.gestationalDays;\r\n    };\r\n\r\n    const rules = {\r\n        pregnancyLossDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                pregnancyLossDateValidator(form)\r\n            ),\r\n            validDate\r\n        },\r\n        newbornDateBirth: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                newbornDateBirthValidator(form)\r\n            ),\r\n            validDate\r\n        },\r\n        babiesborn: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                babiesbornValidator(form)\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const _save = () => {\r\n        loading.value = true;\r\n\r\n        console.log(form.newbornDateBirth);\r\n        const data = {\r\n            ...form,\r\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\r\n            newbornDateBirth: form.newbornDateBirth // && form.newbornDateBirth != ''\r\n                ? format(new Date(form.newbornDateBirth), DATE_FORMAT_STRING)\r\n                : null,\r\n            pregnancyLossDate: form.pregnancyLossDate // && form.pregnancyLossDate != ''\r\n                ? format(new Date(form.pregnancyLossDate), DATE_FORMAT_STRING)\r\n                : null\r\n        };\r\n\r\n        store\r\n            .dispatch(\"born/updatePregnancyOutcome\", data)\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .catch((err) => {})\r\n            .finally(() => (loading.value = false));\r\n    };\r\n\r\n    const confirm = useConfirm();\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const pregnancyBirthOutcomeOptions = computed(\r\n        () => store.state.options.pregnancyBirthOutcome\r\n    );\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        pregnancyBirthOutcomeOptions,\r\n        loading,\r\n        fillForm,\r\n        save\r\n    };\r\n}\r\n\r\nconst isNumberOocytesCryoedIsGreaterThan0 = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (parseInt(param.oocyteCryoPreserved) > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst spermOriginValidator = (oocytesInseminatedInjected, cyccleType) =>\r\n    helpers.withParams({ type: \"inserminatedInjected\" }, (value) => {\r\n        if (\r\n            cyccleType.value == CycleType.EGG_FREEZING ||\r\n            cyccleType.value == CycleType.FET\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (parseInt(oocytesInseminatedInjected.value) > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst spermSourceValidator = (oocytesInseminatedInjected, cyccleType) =>\r\n    helpers.withParams({ type: \"inserminatedInjected\" }, (value) => {\r\n        if (\r\n            cyccleType.value == CycleType.EGG_FREEZING ||\r\n            cyccleType.value == CycleType.FET\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (parseInt(oocytesInseminatedInjected.value) > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst ageSpermProviderValidator = (oocytesInseminatedInjected, cycleType) =>\r\n    helpers.withParams({ type: \"inserminatedInjected\" }, (value) => {\r\n        if (cycleType.value == CycleType.EGG_FREEZING) {\r\n            return true;\r\n        }\r\n\r\n        if (parseInt(oocytesInseminatedInjected.value) > 0) {\r\n            return helpers.req(value) && value >= 15 && value <= 80;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst isIVForFETCycle = (param) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        return true; // temp for now\r\n        if (param == \"IVF\" || param == \"FET\") {\r\n            return value != null;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst oocyteCollectionDateValidator = (param) =>\r\n    helpers.withParams({ type: \"date\" }, (value) => {\r\n        return true; // temp for now\r\n        if (param == \"IVF\" || param == \"FET\") {\r\n            return value != null;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst isOocyteRetrivedGreaterThan0 = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        // return true; // temp for now\r\n        if (parseInt(param.retrievedOrThawed) > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst spermCountValidator = (spermTooLowCount) =>\r\n    helpers.withParams({ type: \"spermTooLowCond\" }, (value) => {\r\n        if (spermTooLowCount.value == \"N\") {\r\n            return value >= 1 && value <= 999;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst semenVolumeValidator = (spermOrigin, spermSource, cyccleType) =>\r\n    helpers.withParams({ type: \"semenValume\" }, (value) => {\r\n        if (cyccleType.value == \"Egg Freezing\") return true;\r\n\r\n        let intersection = [];\r\n        let freshSpermOrigins = [\"SPM005\", \"SPM007\", \"SPM004\"];\r\n        intersection = spermOrigin.value.filter((item) =>\r\n            freshSpermOrigins.includes(item)\r\n        );\r\n\r\n        if (spermSource.value == \"SSRC001\" && intersection.length > 0) {\r\n            return helpers.req(value) && value >= 0.1 && value <= 15;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst spermMotilityValidator = (\r\n    spermOrigin,\r\n    spermSource,\r\n    spermTooLowCount,\r\n    cycleType\r\n) =>\r\n    helpers.withParams({ type: \"semenValume\" }, (value) => {\r\n        if (cycleType.value == CycleType.EGG_FREEZING) return true;\r\n\r\n        let intersection = [];\r\n        let freshSpermOrigins = [\"SPM005\", \"SPM007\", \"SPM004\"];\r\n        intersection = spermOrigin.value.filter((item) =>\r\n            freshSpermOrigins.includes(item)\r\n        );\r\n\r\n        if (\r\n            spermSource.value == \"SSRC001\" &&\r\n            intersection.length > 0 &&\r\n            spermTooLowCount.value != \"Y\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst spermDonorIDValidator = (spermOrigin, cycleType) =>\r\n    helpers.withParams({ type: \"semenValume\" }, (value) => {\r\n        if (cycleType.value == CycleType.EGG_FREEZING) return true;\r\n\r\n        let intersection = [];\r\n        let freshSpermOrigins = [\"SPM007\", \"SPM003\"];\r\n        intersection = spermOrigin.value.filter((item) =>\r\n            freshSpermOrigins.includes(item)\r\n        );\r\n\r\n        if (intersection.length > 0) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst spermDonorStatusValidator = (spermOrigin, cycleType) =>\r\n    helpers.withParams({ type: \"semenValume\" }, (value) => {\r\n        if (cycleType.value == CycleType.EGG_FREEZING) return true;\r\n\r\n        let intersection = [];\r\n        let freshSpermOrigins = [\"SPM007\", \"SPM003\"];\r\n        intersection = spermOrigin.value.filter((item) =>\r\n            freshSpermOrigins.includes(item)\r\n        );\r\n\r\n        if (intersection.length > 0) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst oocyteOriginValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cycleType.value == CycleType.FET) {\r\n            return true;\r\n        }\r\n        return helpers.req(value);\r\n    });\r\n\r\nconst retrievedOrThawedValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cycleType.value == CycleType.FET) {\r\n            return true;\r\n        }\r\n        return helpers.req(value);\r\n    });\r\n\r\nconst oocyteCryoPreservedValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cycleType.value == CycleType.FET) {\r\n            return true;\r\n        }\r\n        return helpers.req(value);\r\n    });\r\n\r\nconst donorProviderSatusValidator = (oocyteOrigin) =>\r\n    helpers.withParams({ type: \"oocyteOrigin\" }, (value) => {\r\n        if (\r\n            oocyteOrigin.value.includes(OOCYTE_ORIGIN.FRESH_DONOR_OOCYTES) ||\r\n            oocyteOrigin.value.includes(OOCYTE_ORIGIN.FROZEN_DONOR_OOCYTES)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useOocyteCollectionInit() {\r\n    const toast = useToast();\r\n    const store = useStore();\r\n    const form = reactive({\r\n        oocyteCollectionFrom: null,\r\n        oocyteCollectionDate: null,\r\n        oocyteThawDate: null,\r\n        collectionDateUnknown: null,\r\n        oocyteFreezeID1Thawed: null,\r\n        oocyteFreezeID2Thawed: null,\r\n        retrievedOrThawed: null,\r\n        oocyteCryoPreserved: null,\r\n        oocyteFreezeID: null,\r\n        donorProviderIDCode: null,\r\n        donorProviderSource: null,\r\n        oocyteFreezeDate: null,\r\n        oocyteOrigin: null,\r\n        donorProviderstatus: null,\r\n        oocyteCryoMethod: null,\r\n        spermOrigin: null,\r\n        ageSpermProvider: null,\r\n        spermDonorID: null,\r\n        spermDonorStatus: null,\r\n        spermMotility: null,\r\n        spermTooLowCount: null,\r\n        spermDonorBank: null,\r\n        spermSource: null,\r\n        semenVolume: null,\r\n        spermCount: null,\r\n        spermCollection: null,\r\n        otherPatient: null,\r\n        otherPrimaryCycleId: null,\r\n        fromOutside: false\r\n    });\r\n    const oocyteCollections = computed(\r\n        () => store.state.born.oocyteCollections\r\n    );\r\n\r\n    const filteredPatient = ref();\r\n    const patientFilter = (event) => {\r\n        Service.searchDemographic({\r\n            term: event.query.trim(),\r\n            sex: \"F\".toLowerCase()\r\n        }).then((resp) => {\r\n            filteredPatient.value = resp.data;\r\n        });\r\n    };\r\n\r\n    const otherPrimaryCycles = ref([]);\r\n\r\n    const getOtherPrimaryCycles = async () => {\r\n        const data = await getPrimaryCyclesService(\r\n            form.otherPatient.demographicNo,\r\n            store.state.artCycle.selectedCycle.cycleDate\r\n        );\r\n        if (data.length > 0) {\r\n            otherPrimaryCycles.value = data.map((item) => ({\r\n                ...item,\r\n                label: `${item.cycleId} (${item.cycleDate})`\r\n            }));\r\n        }\r\n    };\r\n\r\n\r\n    const onOocyteAssingedToChageHandler = async (event) => {\r\n        let patientId = store.state.artCycle.patient.id;\r\n        let cycleId = event.value;\r\n\r\n        const resp = await getFreshOocyte(patientId, cycleId);\r\n        if (resp.status == \"success\") {\r\n            fillOocyteFormDefault(resp.freshOocyte);\r\n        } \r\n\r\n        // form.isParentSimulated = resp.simulatedCycle;\r\n        emptyDonor();\r\n    };\r\n\r\n    const onOtherCycleIdChangeHandler = async (event) => {\r\n        let patientId = null;\r\n\r\n        if (form.otherPatient != null) {\r\n            patientId = form.otherPatient.demographicNo;\r\n        } else {\r\n            return;\r\n        }\r\n\r\n        let cycleId = event.value;\r\n\r\n        const resp = await getFreshOocyte(patientId, cycleId);\r\n        if (resp.status == \"success\") {\r\n            fillOocyteFormDefault(resp.freshOocyte);\r\n        } \r\n\r\n        // form.isParentSimulated = resp.simulatedCycle;\r\n        emptyOocyteCollectionFrom();\r\n    };\r\n\r\n\r\n    const emptyOocyteCollectionFrom = () => {\r\n        form.oocyteCollectionFrom = null;\r\n    };\r\n\r\n    const emptyDonor = (event) => {\r\n        // getDefaultFreshEbmryo(event.value);\r\n        form.otherPatient = null;\r\n        form.otherPrimaryCycleId = null;\r\n    };\r\n\r\n    \r\n\r\n    const fillOocyteFormDefault = (data) => {    \r\n        if (form.oocyteCollectionDate == null)\r\n            form.oocyteCollectionDate = data.oocyteCollectionDate\r\n                ? new Date(data.oocyteCollectionDate + TIME_0)\r\n                : null;\r\n        if (form.oocyteThawDate == null)\r\n            form.oocyteThawDate = data.oocyteThawDate\r\n                ? new Date(data.oocyteThawDate + TIME_0)\r\n                : null;           \r\n        if (form.oocyteFreezeID1Thawed == null)\r\n            form.oocyteFreezeID1Thawed = data.oocyteFreezeID1Thawed;\r\n        if (form.oocyteFreezeID2Thawed == null)\r\n            form.oocyteFreezeID2Thawed = data.oocyteFreezeID2Thawed;\r\n        if (form.retrievedOrThawed == null)\r\n            form.retrievedOrThawed = data.retrievedOrThawed;\r\n        if (form.oocyteCryoPreserved == null)\r\n            form.oocyteCryoPreserved = data.oocyteCryoPreserved;\r\n        if (form.oocyteFreezeID == null)\r\n            form.oocyteFreezeID = data.oocyteFreezeID;\r\n        if (form.donorProviderIDCode == null)\r\n            form.donorProviderIDCode = data.donorProviderIDCode;\r\n        if (form.donorProviderSource == null)\r\n            form.donorProviderSource = data.donorProviderSource;\r\n        if (form.oocyteFreezeDate == null)\r\n            form.oocyteFreezeDate = data.oocyteFreezeDate\r\n                ? new Date(data.oocyteFreezeDate + TIME_0)\r\n                : null; \r\n        if (form.oocyteOrigin.length == 0)\r\n            form.oocyteOrigin = data.oocyteOrigin;\r\n        if (form.donorProviderstatus.length == 0)\r\n            form.donorProviderstatus = data.donorProviderstatus;\r\n        if (form.oocyteCryoMethod == null)\r\n            form.oocyteCryoMethod = data.oocyteCryoMethod;\r\n        if (form.spermOrigin && form.spermOrigin.length == 0)\r\n            form.spermOrigin = data.spermOrigin;\r\n        if (form.ageSpermProvider == null)\r\n            form.ageSpermProvider = data.ageSpermProvider;\r\n        if (form.spermDonorID == null)\r\n            form.spermDonorID = data.spermDonorID;\r\n        if (form.spermDonorStatus == null)\r\n            form.spermDonorStatus = data.spermDonorStatus; \r\n        if (form.spermMotility == null)\r\n            form.spermMotility = data.spermMotility;\r\n        if (form.spermTooLowCount == null)\r\n            form.spermTooLowCount = data.spermTooLowCount;\r\n        if (form.spermDonorBank == null)\r\n            form.spermDonorBank = data.spermDonorBank; \r\n        if (form.spermSource == null)\r\n            form.spermSource = data.spermSource;\r\n        if (form.semenVolume == null)\r\n            form.semenVolume = data.semenVolume; \r\n        if (form.spermCount == null)\r\n            form.spermCount = data.spermCount;\r\n    };\r\n\r\n    const loading = ref(false);\r\n    const rules = {\r\n        oocyteCollectionDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                oocyteCollectionDateValidator(\r\n                    store.state.artCycle.selectedCycle.cycleType\r\n                )\r\n            ),\r\n            validDate\r\n        },\r\n        oocyteThawDate: { validDate },\r\n        oocyteCryoPreserved: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                oocyteCryoPreservedValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        oocyteCryoMethod: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isNumberOocytesCryoedIsGreaterThan0(form)\r\n            )\r\n        },\r\n        // spermOrigin: {\r\n        //     validator: helpers.withMessage(\r\n        //         \"Value Required\",\r\n        //         spermOriginValidator(\r\n        //             computed(\r\n        //                 () =>\r\n        //                     store.state.born.dependentOn\r\n        //                         .oocytesInseminatedInjected\r\n        //             ),\r\n        //             computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n        //         )\r\n        //     )\r\n        // },\r\n        // spermSource: {\r\n        //     validator: helpers.withMessage(\r\n        //         \"Value Required\",\r\n        //         spermSourceValidator(\r\n        //             computed(\r\n        //                 () =>\r\n        //                     store.state.born.dependentOn\r\n        //                         .oocytesInseminatedInjected\r\n        //             ),\r\n        //             computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n        //         )\r\n        //     )\r\n        // },\r\n        // ageSpermProvider: {\r\n        //     validator: helpers.withMessage(\r\n        //         \"Value Required\",\r\n        //         ageSpermProviderValidator(\r\n        //             computed(\r\n        //                 () =>\r\n        //                     store.state.born.dependentOn\r\n        //                         .oocytesInseminatedInjected\r\n        //             ),\r\n        //             computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n        //         )\r\n        //     )\r\n        // },\r\n        oocyteFreezeDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isNumberOocytesCryoedIsGreaterThan0(form)\r\n            ),\r\n            validDate\r\n        },\r\n        spermCount: {\r\n            validator: helpers.withMessage(\r\n                `Applicable if SpermOrigin = 'Fresh donor sperm',\r\n                'Fresh partner sperm' or 'Fresh own sperm'\r\n                and SpermSource = 'Semen'.`,\r\n                spermMotilityValidator(\r\n                    computed(() => form.spermOrigin),\r\n                    computed(() => form.spermSource),\r\n                    computed(() => form.spermTooLowCount),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        oocyteOrigin: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                oocyteOriginValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        retrievedOrThawed: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                retrievedOrThawedValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        semenVolume: {\r\n            validator: helpers.withMessage(\r\n                `Applicable if SpermOrigin = 'Fresh donor sperm',\r\n                'Fresh partner sperm' or 'Fresh own sperm'\r\n                and SpermSource = 'Semen'.\r\n                Range: 0.1 - 15 mL.`,\r\n                semenVolumeValidator(\r\n                    computed(() => form.spermOrigin),\r\n                    computed(() => form.spermSource),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        donorProviderstatus: {\r\n            validator: helpers.withMessage(\r\n                \"Value required\",\r\n                donorProviderSatusValidator(computed(() => form.oocyteOrigin))\r\n            )\r\n        },\r\n        spermDonorID: {\r\n            validator: helpers.withMessage(\r\n                \"Value required\",\r\n                spermDonorIDValidator(\r\n                    computed(() => form.spermOrigin),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        spermDonorStatus: {\r\n            validator: helpers.withMessage(\r\n                \"Value required\",\r\n                spermDonorStatusValidator(\r\n                    computed(() => form.spermOrigin),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        spermMotility: {\r\n            validator: helpers.withMessage(\r\n                `Applicable if SpermOrigin = 'Fresh donor sperm',\r\n                'Fresh partner sperm' or 'Fresh own sperm'\r\n                and SpermSource = 'Semen'.`,\r\n                spermMotilityValidator(\r\n                    computed(() => form.spermOrigin),\r\n                    computed(() => form.spermSource),\r\n                    computed(() => form.spermTooLowCount),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        }\r\n    };\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const _save = () => {\r\n        loading.value = true;\r\n        const data = {\r\n            ...form,\r\n            oocyteCollectionDate: form.oocyteCollectionDate\r\n                ? format(\r\n                      new Date(form.oocyteCollectionDate),\r\n                      DATE_FORMAT_STRING\r\n                  )\r\n                : null,\r\n            oocyteThawDate: form.oocyteThawDate\r\n                ? format(new Date(form.oocyteThawDate), DATE_FORMAT_STRING)\r\n                : null,\r\n            oocyteFreezeDate: form.oocyteFreezeDate\r\n                ? format(new Date(form.oocyteFreezeDate), DATE_FORMAT_STRING)\r\n                : null,\r\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"]\r\n        };\r\n\r\n\r\n        let ppayload = {\r\n            patientId: store.state.artCycle.patient.id,\r\n            cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n            primaryCycleId: form.oocyteCollectionFrom,\r\n            otherPatientId: form.otherPatient\r\n                        ? form.otherPatient.demographicNo\r\n                        : null,\r\n            otherPrimaryCycleId: form.otherPrimaryCycleId,\r\n            fromOutside: form.fromOutside ? 1 : 0\r\n        };\r\n\r\n\r\n        store\r\n        .dispatch(\"born/updateOocyteCollection\", data)\r\n        .then(() => {\r\n            toast.add({\r\n                severity: \"success\",\r\n                summary: \"\",\r\n                detail: \"Save Successful\",\r\n                life: 3000\r\n            });\r\n            // fillForm(store.state.born.oocyteCollections);\r\n        })\r\n        .finally(() => (loading.value = false));\r\n        \r\n        if(form.oocyteCollectionFrom || (form.otherPatient && form.otherPrimaryCycleId)) {\r\n            updatePrimaryCycle(ppayload).then((resp) => {\r\n                if (resp.status == \"success\") {\r\n                    console.log(\"success\");\r\n                }\r\n            });\r\n        }\r\n    };\r\n    const confirm = useConfirm();\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        form.oocyteCollectionDate = data.oocyteCollectionDate\r\n            ? new Date(data.oocyteCollectionDate + TIME_0)\r\n            : null;\r\n        form.oocyteThawDate = data.oocyteThawDate\r\n            ? new Date(data.oocyteThawDate + TIME_0)\r\n            : null;\r\n        form.collectionDateUnknown = data.collectionDateUnknown;\r\n        form.oocyteFreezeID1Thawed = data.oocyteFreezeID1Thawed;\r\n        form.oocyteFreezeID2Thawed = data.oocyteFreezeID2Thawed;\r\n        form.retrievedOrThawed = data.retrievedOrThawed;\r\n        form.oocyteFreezeID = data.oocyteFreezeID;\r\n        form.donorProviderIDCode = data.donorProviderIDCode;\r\n        form.donorProviderSource = data.donorProviderSource;\r\n        form.oocyteFreezeDate = data.oocyteFreezeDate\r\n            ? new Date(data.oocyteFreezeDate + TIME_0)\r\n            : null;\r\n        form.oocyteOrigin = data.oocyteOrigin;\r\n        form.donorProviderstatus = data.donorProviderstatus;\r\n        form.oocyteCryoMethod = data.oocyteCryoMethod;\r\n        form.oocyteCryoPreserved = data.oocytesCryopreserved;\r\n\r\n        if (store.state.artCycle.selectedCycle.cycleType != \"Egg Freezing\") {\r\n            form.spermOrigin = data.spermOrigin;\r\n            form.ageSpermProvider = data.ageSpermProvider;\r\n            form.spermDonorID = data.spermDonorID;\r\n            form.spermDonorStatus = data.spermDonorStatus;\r\n            form.spermMotility = data.spermMotility;\r\n            form.spermTooLowCount = data.spermTooLowCount;\r\n            form.spermDonorBank = data.spermDonorBank;\r\n            form.spermSource = data.spermSource;\r\n            form.semenVolume = data.semenVolume;\r\n            form.spermCount = data.spermCount;\r\n        }\r\n    };\r\n\r\n    const oocyteOriginOptions = computed(\r\n        () => store.state.options.oocyteOrigin\r\n    );\r\n    const donorProviderStatusOptions = computed(\r\n        () => store.state.options.donorProviderstatus\r\n    );\r\n    const oocyteCryoMethodOptions = computed(\r\n        () => store.state.options.oocyteCryoMethod\r\n    );\r\n    const spermOriginOptions = computed(() => store.state.options.spermOrigin);\r\n    const spermOriginStatusOptions = computed(\r\n        () => store.state.options.spermDonorStatus\r\n    );\r\n    const spermSourceOptions = computed(() => store.state.options.spermSource);\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        loading,\r\n        v$,\r\n        save,\r\n        fillForm,\r\n        oocyteCollections,\r\n        oocyteOriginOptions,\r\n        donorProviderStatusOptions,\r\n        oocyteCryoMethodOptions,\r\n        spermOriginOptions,\r\n        spermOriginStatusOptions,\r\n        spermSourceOptions,\r\n        onOocyteAssingedToChageHandler,\r\n        onOtherCycleIdChangeHandler,\r\n        filteredPatient,\r\n        patientFilter,\r\n        getOtherPrimaryCycles,\r\n        otherPrimaryCycles\r\n    };\r\n}\r\n\r\nconst mustBe0IfPriorPregnancies0 = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (parseInt(param.priorPregnancies) != 0) return true;\r\n        else {\r\n            return value == 0;\r\n        }\r\n    });\r\n\r\nconst requiredIfprovincialFundingIsYes = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (param.provincialFundingForThisCycle == \"yes\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst requiredIfReasonsForTreatmentCycleIsMaleFactor = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (param.reasonsForTreatmentCycle.includes(\"TCR004\")) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst provincialFundingValidator = (cycleDate) =>\r\n    helpers.withParams({ type: \"cycleDate\" }, (value) => {\r\n        if (new Date(cycleDate.value) > new Date(\"2019-01-01\")) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst reasonsForTreatmentCycleValidtor = (value) => {\r\n    return value.length > 0;\r\n};\r\n\r\nexport function useObstetricalHistoryFormInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const loading = ref(false);\r\n\r\n    const form = reactive({\r\n        priorBirths: null,\r\n        priorPregnancies: null,\r\n        priorFreshCyclesStarted: 0,\r\n        priorETsOwnOocytes: 0,\r\n        priorETsDonorOocytes: 0,\r\n        provincialFundingForThisCycle: null,\r\n        typeOfFunding: null,\r\n        otherSpecify: null,\r\n        originOfSimulatedCycle: null,\r\n        primaryCycle: null,\r\n        reasonsForTreatmentCycle: [],\r\n        reasonsForMaleFactor: [],\r\n        pgtAPlanned: null\r\n    });\r\n\r\n    const rules = {\r\n        priorBirths: {\r\n            required\r\n        },\r\n        typeOfFunding: {\r\n            validator: requiredIfprovincialFundingIsYes(form)\r\n        },\r\n        priorPregnancies: { required },\r\n        reasonsForMaleFactor: {\r\n            validator: helpers.withMessage(\r\n                \"Required when Reason for treatment cycle is male\",\r\n                requiredIfReasonsForTreatmentCycleIsMaleFactor(form)\r\n            )\r\n        },\r\n        provincialFundingForThisCycle: {\r\n            validator: provincialFundingValidator(\r\n                computed(() => store.state.artCycle.selectedCycle.cycleDate)\r\n            )\r\n        },\r\n        reasonsForTreatmentCycle: {\r\n            validator: helpers.withMessage(\r\n                \"At least one value is requred\",\r\n                reasonsForTreatmentCycleValidtor\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const confirm = useConfirm();\r\n\r\n    const _save = () => {\r\n        loading.value = false;\r\n        store\r\n            .dispatch(\"born/updateObstetricalHistory\", {\r\n                ...form,\r\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"]\r\n            })\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .finally(() => {\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        form.priorBirths = data.priorBirths ? parseInt(data.priorBirths) : null;\r\n        form.priorPregnancies = data.priorPregnancies;\r\n        form.priorFreshCyclesStarted = data.priorFreshCyclesStarted\r\n            ? data.priorFreshCyclesStarted\r\n            : 0;\r\n        form.priorETsOwnOocytes = data.priorETsOwnOocytes\r\n            ? data.priorETsOwnOocytes\r\n            : 0;\r\n        form.priorETsDonorOocytes = data.priorETsDonorOocytes\r\n            ? data.priorETsDonorOocytes\r\n            : 0;\r\n        form.provincialFundingForThisCycle = data.provincialFundingForThisCycle;\r\n        form.typeOfFunding = data.typeOfFunding;\r\n        form.otherSpecify = data.otherSpecify;\r\n        form.originOfSimulatedCycle = data.originOfSimulatedCycle;\r\n        form.primaryCycle = data.primaryCycle;\r\n        form.reasonsForTreatmentCycle = data.reasonsForTreatmentCycle\r\n            ? data.reasonsForTreatmentCycle\r\n            : [];\r\n        form.reasonsForMaleFactor = data.reasonsForMaleFactor\r\n            ? data.reasonsForMaleFactor\r\n            : [];\r\n        form.pgtAPlanned = data.pgtAPlanned ? data.pgtAPlanned : \"N\";\r\n    };\r\n\r\n    const priorPregnanciesOptions = computed(\r\n        () => store.state.options.pregnancyBirthOutcome\r\n    );\r\n    const priorBirthsOptions = ref([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\r\n    const priorFreshCyclesStartedOptions = computed(\r\n        () => store.state.options.priorFreshCyclesStarted\r\n    );\r\n    const priorETsOwnOocytesOptions = computed(\r\n        () => store.state.options.priorETsOwnOocytes\r\n    );\r\n    const priorETsDonorOocytesOptions = computed(\r\n        () => store.state.options.priorETsDonorOocytes\r\n    );\r\n    const typeOfFundingOptions = computed(\r\n        () => store.state.options.typeOfFunding\r\n    );\r\n    const reasonsForMaleFactorOptions = computed(\r\n        () => store.state.options.reasonsForMaleFactor\r\n    );\r\n    const reasonsForTreatmentCycleOptions = computed(\r\n        () => store.state.options.reasonsForTreatmentCycle\r\n    );\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        save,\r\n        loading,\r\n        fillForm,\r\n        priorPregnanciesOptions,\r\n        priorBirthsOptions,\r\n        priorFreshCyclesStartedOptions,\r\n        priorETsOwnOocytesOptions,\r\n        priorETsDonorOocytesOptions,\r\n        typeOfFundingOptions,\r\n        reasonsForMaleFactorOptions,\r\n        reasonsForTreatmentCycleOptions\r\n    };\r\n}\r\n\r\nconst requiredIfMedicationForCOSContains = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            param.medicationForCOS.includes(4) ||\r\n            param.medicationForCOS.includes(5) ||\r\n            param.medicationForCOS.includes(6)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst noOfDaysGonadotropinsValidator = (medicationForCOS) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        // const medicationForCosKeys = [\"COSM016\", \"COSM017\", \"COSM018\"];\r\n        let intersection = [];\r\n        intersection = FSH_VALIDATORS_MEDICATION_FOR_COS.filter((item) =>\r\n            medicationForCOS.value.includes(item)\r\n        );\r\n        if (intersection.length > 0) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst totalDoseFSHValidator = (medicationForCOS) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        // const medicationForCosKeys = [\"COSM016\", \"COSM017\", \"COSM018\"];\r\n        let intersection = [];\r\n        intersection = FSH_VALIDATORS_MEDICATION_FOR_COS.filter((item) =>\r\n            medicationForCOS.value.includes(item)\r\n        );\r\n        if (intersection.length > 0) {\r\n            return (\r\n                helpers.req(value) &&\r\n                parseInt(value) >= 50 &&\r\n                parseInt(value) <= 30000\r\n            );\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst totalDoseLHValidator = (medicationForCOS) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        if (medicationForCOS.value.includes(4)) {\r\n            return (\r\n                helpers.req(value) &&\r\n                parseFloat(value) >= 200 &&\r\n                parseFloat(value) <= 400\r\n            );\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst afcOocyteValidtor = (reasonForTreatmentCycle) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        if (reasonForTreatmentCycle.value.includes(\"TCR003\")) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst amhLevelOocyteValidtor = (reasonForTreatmentCycle) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        if (reasonForTreatmentCycle.value.includes(\"TCR003\")) {\r\n            return helpers.req(value) && value > 0 && value <= 50;\r\n        }\r\n\r\n        if (value != null) {\r\n            return value > 0 && value <= 50;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst mediAdminisPriorCosValidator = (cycle) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            cycle.value.cycleType == \"FET\" ||\r\n            cycle.value.cycleType == \"FOIVF\"\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (new Date(cycle.value.cycleDate) > new Date(\"2022-01-01\")) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst totalDoseRekovelleMcgValidator = (medicationForCOS) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        // const medicationForCosKeys = [\"COSM016\"];\r\n        let intersection = [];\r\n        intersection = FSH_REKOVELLE_VALIDATORS_MEDICATION_FOR_COS.filter(\r\n            (item) => medicationForCOS.value.includes(item)\r\n        );\r\n        if (intersection.length > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst progesterOneLevelValidator = (value) => {\r\n    if (value == null) return true;\r\n    else {\r\n        return value > 0 && value <= 31.4;\r\n    }\r\n};\r\n\r\nconst reasonCancelledValidator = (cycleCancelled) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        if (cycleCancelled.value == \"no\") {\r\n            return value.length == 0;\r\n        } else {\r\n            return value.length > 0;\r\n        }\r\n    });\r\n\r\nconst reasonCancelledDescValidator = (cycleCancelled) =>\r\n    helpers.withParams({ type: \"medicationForCOS\" }, (value) => {\r\n        return true;\r\n        if (cycleCancelled.value == \"no\") {\r\n            return value == \"\" || value == null;\r\n        } else {\r\n            return helpers.req(value);\r\n        }\r\n    });\r\n\r\nconst ofFolliclesGt15mmValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cycleType.value == \"FET\") return true;\r\n        return helpers.req(value) && value > 0 && value <= 25;\r\n    });\r\n\r\nconst ofFolliclesLt15mmValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cycleType.value == \"FET\") return true;\r\n        return helpers.req(value);\r\n    });\r\n\r\nconst medicationForCOSValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cycleType.value == \"FET\") return true;\r\n        return helpers.req(value);\r\n    });\r\n\r\n// const ofFolliclesGt15mmValidator = (cycleType) =>\r\n//     helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n//         console.log(value);\r\n//         return helpers.req(value) && value > 0 && value <= 25;\r\n//     });\r\n\r\nexport function useOvariannFormInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const loading = ref(false);\r\n\r\n    const form = reactive({\r\n        ageOfOocyteAge: null,\r\n        hightOfOocyteHight: null,\r\n        weightOfOocyte: null,\r\n        bmiOfOocyte: null,\r\n        fshDayOocyte: null,\r\n        afcOocyte: null,\r\n        ngPMOOocyte: null,\r\n        typeOfStimulationProtocol: TYPE_OF_STIMULATION_PROTOCOL_DEFAULT,\r\n        otherTypeOfStiProtocolDes: null,\r\n        medicationForCOS: null,\r\n        otherMedicationCOS: null,\r\n        adjuvantMedication: ADJUVANT_MEDICATION_DEFAULTS,\r\n        otherAdjuvantMediDescription: null,\r\n        triggerMedication: TRIGGER_MEDICATION_DEFAULTS,\r\n        otheTriMedDesc: null,\r\n        noOfDaysGonadotropins: null,\r\n        totalDoseFSH: null,\r\n        totalDoseLH: null,\r\n        ofFolliclesLs15mm: null,\r\n        ofFolliclesGt15mm: null,\r\n        estradiolLevel: null,\r\n        progesterOneLevel: null,\r\n        endometrialThicknessFreshCycle: null,\r\n        cycleCancelledBeforeRetrieval: \"no\",\r\n        reasonCancelled: null,\r\n        otherReasonCanDesc: null,\r\n        bornConsent: null,\r\n        cervicalRipeningInduc: [],\r\n        oxytocinBeforeBirth: null,\r\n        afcDate: null,\r\n        amhLevelDate: null,\r\n        ovarianHyperStimulationSyndrome: null,\r\n        amhLevelOocyte: null,\r\n        cycleStopped: \"N\",\r\n        totalDoseRekovelleMcg: null,\r\n        mediAdminisPriorCos: MEDI_ADMINIS_PRIOR_COS_DEFUALT,\r\n        otherMediPriorCosDesc: null\r\n    });\r\n\r\n    const rules = {\r\n        ageOfOocyteAge: {\r\n            validator: helpers.withMessage(\"Value Required\", required)\r\n        },\r\n        hightOfOocyteHight: {\r\n            validator: helpers.withMessage(\"Value Required\", required),\r\n            minValue: helpers.withMessage(\r\n                \"Value must be between 90 and 240\",\r\n                minValue(90)\r\n            ),\r\n            maxValue: helpers.withMessage(\r\n                \"Value must be between 90 and 240\",\r\n                maxValue(240)\r\n            )\r\n        },\r\n        weightOfOocyte: {\r\n            validator: helpers.withMessage(\"Value Required\", required),\r\n            minValue: helpers.withMessage(\r\n                \"Value must be between 25 and 227\",\r\n                minValue(25)\r\n            ),\r\n            maxValue: helpers.withMessage(\r\n                \"Value must be between 25 and 227\",\r\n                maxValue(227)\r\n            )\r\n        },\r\n        bmiOfOocyte: {\r\n            minValue: helpers.withMessage(\r\n                \"Value must be between 10 and 70\",\r\n                minValue(10)\r\n            ),\r\n            maxValue: helpers.withMessage(\r\n                \"Value must be between 10 and 70\",\r\n                maxValue(70)\r\n            )\r\n        },\r\n        noOfDaysGonadotropins: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                noOfDaysGonadotropinsValidator(\r\n                    computed(() => form.medicationForCOS)\r\n                )\r\n            )\r\n        },\r\n        totalDoseFSH: {\r\n            validator: helpers.withMessage(\r\n                \"Value Must be between 50 and 30000\",\r\n                totalDoseFSHValidator(computed(() => form.medicationForCOS))\r\n            )\r\n        },\r\n        medicationForCOS: {\r\n            validator: helpers.withMessage(\r\n                \"Value required\",\r\n                medicationForCOSValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        totalDoseLH: {\r\n            validator: helpers.withMessage(\r\n                \"Value Must be between 200 and 400\",\r\n                totalDoseLHValidator(computed(() => form.medicationForCOS))\r\n            )\r\n        },\r\n        afcOocyte: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                afcOocyteValidtor(\r\n                    computed(\r\n                        () =>\r\n                            store.state.born.dependentOn.reasonForTreatmentCycle\r\n                    )\r\n                )\r\n            )\r\n        },\r\n        amhLevelOocyte: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required & must be between 0 to 50\",\r\n                amhLevelOocyteValidtor(\r\n                    computed(\r\n                        () =>\r\n                            store.state.born.dependentOn.reasonForTreatmentCycle\r\n                    )\r\n                )\r\n            )\r\n        },\r\n        mediAdminisPriorCos: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                mediAdminisPriorCosValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle)\r\n                )\r\n            )\r\n        },\r\n        totalDoseRekovelleMcg: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                totalDoseRekovelleMcgValidator(\r\n                    computed(() => form.medicationForCOS)\r\n                )\r\n            )\r\n        },\r\n        progesterOneLevel: {\r\n            validator: helpers.withMessage(\r\n                \"Value must be in range of 0 to 31.4 & value has to be multiplied by 3.18\",\r\n                progesterOneLevelValidator\r\n            )\r\n        },\r\n        estradiolLevel: {\r\n            minValue: helpers.withMessage(\r\n                \"Value must be between 0 and 40000\",\r\n                minValue(0)\r\n            ),\r\n            maxValue: helpers.withMessage(\r\n                \"Value must be between 0 and 40000\",\r\n                maxValue(40000)\r\n            )\r\n        },\r\n        reasonCancelled: {\r\n            validator: helpers.withMessage(\r\n                \"Value must be empty if cycle cancelled is no\",\r\n                reasonCancelledValidator(\r\n                    computed(() => form.cycleCancelledBeforeRetrieval)\r\n                )\r\n            )\r\n        },\r\n        otherReasonCanDesc: {\r\n            validator: helpers.withMessage(\r\n                \"Value must be empty if cycle cancelled is no\",\r\n                reasonCancelledDescValidator(\r\n                    computed(() => form.cycleCancelledBeforeRetrieval)\r\n                )\r\n            )\r\n        },\r\n        ofFolliclesGt15mm: {\r\n            validator: helpers.withMessage(\r\n                \"Value required & must between 0 ot 25\",\r\n                ofFolliclesGt15mmValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        ofFolliclesLs15mm: {\r\n            validator: helpers.withMessage(\r\n                \"Value required\",\r\n                ofFolliclesLt15mmValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n    const confirm = useConfirm();\r\n    const _save = () => {\r\n        loading.value = false;\r\n        store\r\n            .dispatch(\"born/updateOvarian\", {\r\n                ...form,\r\n                adjuvantMedication: form.adjuvantMedication.join(\",\"),\r\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\r\n                afcDate: form.afcDate\r\n                    ? format(new Date(form.afcDate), DATE_FORMAT_STRING)\r\n                    : null,\r\n                amhLevelDate: form.amhLevelDate\r\n                    ? format(new Date(form.amhLevelDate), DATE_FORMAT_STRING)\r\n                    : null,\r\n            })\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .finally(() => {\r\n                loading.value = false;\r\n            });\r\n    };\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        form.ageOfOocyteAge = data.ageOfOocyteAge\r\n            ? data.ageOfOocyteAge\r\n            : store.state.artCycle.patient.age;\r\n        form.adjuvantMedication =\r\n            data.adjuvantMedication.length > 0\r\n                ? data.adjuvantMedication\r\n                : ADJUVANT_MEDICATION_DEFAULTS;\r\n        form.hightOfOocyteHight = data.hightOfOocyteHight;\r\n        form.weightOfOocyte = data.weightOfOocyte;\r\n        form.bmiOfOocyte = data.bmiOfOocyte;\r\n        form.fshDayOocyte = data.fshDayOocyte;\r\n        form.afcOocyte = data.afcOocyte;\r\n        form.ngPMOOocyte = data.ngPMOOocyte;\r\n        form.typeOfStimulationProtocol = data.typeOfStimulationProtocol\r\n            ? data.typeOfStimulationProtocol\r\n            : TYPE_OF_STIMULATION_PROTOCOL_DEFAULT;\r\n        form.otherTypeOfStiProtocolDes = data.otherTypeOfStiProtocolDes;\r\n        form.medicationForCOS = data.medicationForCOS;\r\n        form.otherMedicationCOS = data.otherMedicationCOS;\r\n        form.otherAdjuvantMediDescription = data.otherAdjuvantMediDescription;\r\n        form.triggerMedication = data.triggerMedication\r\n            ? data.triggerMedication\r\n            : TRIGGER_MEDICATION_DEFAULTS;\r\n        form.otheTriMedDesc = data.otheTriMedDesc;\r\n        form.noOfDaysGonadotropins = data.noOfDaysGonadotropins;\r\n        form.totalDoseFSH = data.totalDoseFSH;\r\n        form.ofFolliclesLs15mm = data.ofFolliclesLs15mm;\r\n        form.ofFolliclesGt15mm = data.ofFolliclesGt15mm;\r\n        form.cycleCancelledBeforeRetrieval =\r\n            data.cycleCancelledBeforeRetrieval == \"yes\" ? \"yes\" : \"no\";\r\n        form.reasonCancelled = data.reasonCancelled;\r\n        form.otherReasonCanDesc = data.otherReasonCanDesc;\r\n        form.bornConsent = data.bornConsent;\r\n        form.cervicalRipeningInduc = data.cervicalRipeningInduc\r\n            ? data.cervicalRipeningInduc\r\n            : [];\r\n        form.oxytocinBeforeBirth = data.oxytocinBeforeBirth;\r\n        form.afcDate = data.afcDate\r\n            ? new Date(data.afcDate + \" 00:00:00\")\r\n            : null;\r\n        form.amhLevelDate = data.amhLevelDate\r\n            ? new Date(data.amhLevelDate + \" 00:00:00\")\r\n            : null;\r\n        form.ovarianHyperStimulationSyndrome = data.ovarianHyperStimulationSyndrome;\r\n        form.amhLevelOocyte = data.amhLevelOocyte;\r\n        form.cycleStopped = data.cycleStoppped == \"Y\" ? \"Y\" : \"N\";\r\n        form.mediAdminisPriorCos =\r\n            data.mediAdminisPriorCos.length != 0\r\n                ? data.mediAdminisPriorCos\r\n                : MEDI_ADMINIS_PRIOR_COS_DEFUALT;\r\n        form.totalDoseRekovelleMcg = data.totalDoseRekovelleMcg;\r\n        form.otherMediPriorCosDesc = data.otherMediPriorCosDesc;\r\n\r\n        if (data.endometrialThicknessFreshCycle) {\r\n            form.endometrialThicknessFreshCycle =\r\n                data.endometrialThicknessFreshCycle;\r\n        }\r\n\r\n        if (data.estradiolLevel) {\r\n            form.estradiolLevel = data.estradiolLevel;\r\n        }\r\n\r\n        if (data.progesterOneLevel) {\r\n            form.progesterOneLevel = data.progesterOneLevel;\r\n        }\r\n\r\n        if (data.totalDoseLH) {\r\n            form.totalDoseLH = data.totalDoseLH;\r\n        }\r\n    };\r\n\r\n    const typeOfStimulationProtocolOptions = computed(\r\n        () => store.state.options.typeOfStimulationProtocol\r\n    );\r\n    const triggerMedicationOptions = computed(\r\n        () => store.state.options.triggerMedication\r\n    );\r\n    const medicationForCOSOptions = computed(\r\n        () => store.state.options.medicationForCOS\r\n    );\r\n    const medicationAdministraionPriorToCosOptions = computed(\r\n        () => store.state.options.medicationAdministraionPriorToCos\r\n    );\r\n    const reasonCancelledOptions = computed(\r\n        () => store.state.options.reasonCancelled\r\n    );\r\n    const adjuvantMedicationOptions = computed(\r\n        () => store.state.options.adjuvantMedication\r\n    );\r\n\r\n    const bornConsentOptions = ref([\r\n        { label: \"Yes\", value: \"y\" },\r\n        { label: \"No\", value: \"n\" }\r\n    ]);\r\n    const oxytocinBeforeBirthOpts = ref([\r\n        { label: \"Yes\", value: \"y\" },\r\n        { label: \"No\", value: \"n\" }\r\n    ]);\r\n    const cervicalRipeningInducOpts = ref([\r\n        { label: \"None\", value: \"NONE\" },\r\n        { label: \"Laminaria tents\", value: \"CRIM001\" },\r\n        { label: \"Mechanical (Foley catheter)\", value: \"CRIM002\" },\r\n        { label: \"Misoprostol (PGE1)\", value: \"CRIM004\" },\r\n        { label: \"Prostaglandin (PGE2)(e.g.: Cervidil/Prepidil/Prostin gel)\", value: \"CRIM003\" },\r\n        { label: \"Other\", value: \"OTHER\" },\r\n        { label: \"Unknown\", value: \"UN\" }\r\n    ]);    \r\n    const ovarianHyperStimulationSyndromeOpts = ref([\r\n        { label: \"Yes\", value: \"y\" },\r\n        { label: \"No\", value: \"n\" },\r\n        { label: \"Unknown\", value: \"un\" }\r\n    ]);\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        loading,\r\n        save,\r\n        fillForm,\r\n        typeOfStimulationProtocolOptions,\r\n        triggerMedicationOptions,\r\n        medicationForCOSOptions,\r\n        medicationAdministraionPriorToCosOptions,\r\n        reasonCancelledOptions,\r\n        adjuvantMedicationOptions,\r\n        bornConsentOptions,\r\n        oxytocinBeforeBirthOpts,\r\n        cervicalRipeningInducOpts,\r\n        ovarianHyperStimulationSyndromeOpts\r\n    };\r\n}\r\n\r\nexport function useBornEmbryologyInit() {\r\n    const store = useStore();\r\n    const form = inject(\"form\");\r\n\r\n    const isIVFCycle = store.getters[\"artCycle/isIVFCycle\"];\r\n    const isFETCycle = store.getters[\"artCycle/isFETCycle\"];\r\n\r\n    const inseminationMethodOptions = computed(\r\n        () => store.state.options.inseminationMethod\r\n    );\r\n    const reasonsForNoUseOptions = computed(\r\n        () => store.state.options.reasonsForNoUse\r\n    );\r\n    const embryoStageFreezingOptions = computed(\r\n        () => store.state.options.embryoStageFreezing\r\n    );\r\n    const reasonEmbryoCryopreservationOptions = computed(\r\n        () => store.state.options.reasonEmbryoCryopreservation\r\n    );\r\n    const embryoFreshCryoMethodOptions = computed(\r\n        () => store.state.options.embryoFreshCryoMethod\r\n    );\r\n    const embryoStageThawingOptions = computed(\r\n        () => store.state.options.embryoStageThawing\r\n    );\r\n    const embryoTransferOptions = computed(\r\n        () => store.state.options.reasonsNoET\r\n    );\r\n\r\n    return {\r\n        form,\r\n        isIVFCycle,\r\n        isFETCycle,\r\n        inseminationMethodOptions,\r\n        reasonsForNoUseOptions,\r\n        embryoStageFreezingOptions,\r\n        reasonEmbryoCryopreservationOptions,\r\n        embryoFreshCryoMethodOptions,\r\n        embryoStageThawingOptions,\r\n        embryoTransferOptions\r\n    };\r\n}\r\n\r\nexport function useBornMarkAsComplete() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n\r\n    const markAsComplete = async (source) => {\r\n        const payload = {\r\n            patientId: store.state.artCycle.patient.id,\r\n            cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n            source\r\n        };\r\n\r\n        try {\r\n            const { data } = await $axios.post(\r\n                \"born/mark-as-complete\",\r\n                payload\r\n            );\r\n\r\n            toast.add({\r\n                severity: \"success\",\r\n                summary: \"Sucess\",\r\n                detail: \"Mark as completed\",\r\n                life: 3000\r\n            });\r\n        } catch (err) {\r\n            toast.add({\r\n                severity: \"warn\",\r\n                summary: \"Error\",\r\n                detail: \"An Error occured\",\r\n                life: 3000\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        markAsComplete\r\n    };\r\n}\r\n\r\nconst embryoTransferValidator = (cycle) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            cycle.value.cancel == false ||\r\n            cycle.value.cyccleType == \"FET\" ||\r\n            cycle.value.cyccleType == \"FOIVF\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\nconst isEbryoTrasferNo = (embryoTransfer) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (embryoTransfer.value == \"no\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst isEbryoTrasferYes = (embryoTransfer) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (embryoTransfer.value == \"yes\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst preparationUterineLiningValidator = (cycleType) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (cycleType.value == \"FET\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\nconst transferDateValidator = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        return true;\r\n    });\r\n\r\nconst dateETAdjustedValidator = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        return true;\r\n    });\r\n\r\nconst assistedZonaHatchingValidator = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        return true;\r\n    });\r\n\r\nconst embryosTransferredValidator = (\r\n    embryoTransfer,\r\n    utilizableEmbryos,\r\n    embryosCryopreserved,\r\n    utilizableAfterThaw\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        let _utilizableEmbryos =\r\n            utilizableEmbryos.value != null\r\n                ? parseInt(utilizableEmbryos.value)\r\n                : 0;\r\n        let _utilizableAfterThaw =\r\n            utilizableAfterThaw.value != null\r\n                ? parseInt(utilizableAfterThaw.value)\r\n                : 0;\r\n        let _embryosCryopreserved =\r\n            embryosCryopreserved.value != null\r\n                ? parseInt(embryosCryopreserved.value)\r\n                : 0;\r\n\r\n        let calc =\r\n            _utilizableEmbryos + _utilizableAfterThaw - _embryosCryopreserved;\r\n\r\n        if (embryoTransfer.value == \"yes\") {\r\n            return helpers.req(value) && parseInt(value) <= calc;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst SOURCE_TRANSFERRED_EMBRYOS_NOT_FET = [\r\n    \"TES001\",\r\n    \"TES002\",\r\n    \"TES010\",\r\n    \"TES011\",\r\n    \"TES004\"\r\n];\r\n\r\nconst sourceTransferredEmbryosValidationMessage = (cycleType) => {\r\n    if (cycleType == \"FET\") {\r\n        return `Value requied & value cannot be from one from those -\r\n            1-Fresh embryos from own oocytes-partner sperm\r\n            2-Fresh embryos from own oocytes-donor sperm\r\n            3-Fresh embryos from partner oocytes-donor sperm\r\n            4-Fresh embryos from donor oocytes-own sperm\r\n            5-Fresh embryos from donor oocytes-partner sperm\r\n        `;\r\n    }\r\n    return \"Valur required\";\r\n};\r\n\r\nconst sourceTransferredEmbryosValidator = (embryoTransfer, cyccleType) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (cyccleType.value == \"FET\") {\r\n            let intersection = value.filter((item) =>\r\n                SOURCE_TRANSFERRED_EMBRYOS_NOT_FET.includes(item)\r\n            );\r\n            if (intersection.length > 0) return false;\r\n        }\r\n        if (embryoTransfer.value == \"yes\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst transferInseminationMethodValidator = (\r\n    noOfEmbryosTransferred,\r\n    sourceTransferredEmbryos,\r\n    cycleStartDate\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        const freshSourceTransferredEmbryosIds = [1, 2, 3, 4, 5, 6];\r\n        const intersection = freshSourceTransferredEmbryosIds.filter((elem) =>\r\n            [...sourceTransferredEmbryos.value].includes(elem)\r\n        );\r\n\r\n        if (\r\n            noOfEmbryosTransferred.value == 1 &&\r\n            intersection.length != 0 &&\r\n            new Date(cycleStartDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst cycelStartDateGreateThanJan1st2019 = (cycleDate) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (new Date(cycleDate.value) > new Date(CYCLE_START_DATE_JAN_19)) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst preImplGeneticTestingValidator = (\r\n    embryoTransfer,\r\n    cycleDate,\r\n    pgtAPlanned\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            embryoTransfer.value == \"yes\" &&\r\n            new Date(cycleDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        if (pgtAPlanned.value == \"Y\") {\r\n            return value == \"yes\";\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst sitePGTembryoValidator = (embryoTransfer, cycleDate) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            embryoTransfer.value == \"yes\" &&\r\n            new Date(cycleDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst charTransferredEmbryoValidator = (\r\n    noOfEmbryosTransferred,\r\n    preImplementationGeneticSergery,\r\n    cycleDate\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            preImplementationGeneticSergery.value == \"yes\" &&\r\n            new Date(cycleDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        // if (\r\n        //     preImplementationGeneticSergery.value == \"yes\" &&\r\n        //     parseInt(noOfEmbryosTransferred.value) == 1 &&\r\n        //     new Date(cycleDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n        // ) {\r\n        //     return helpers.req(value);\r\n        // }\r\n        return true;\r\n    });\r\n\r\nconst preImplGeneticTestingYes = (preImplGeneticTesting) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (preImplGeneticTesting.value == \"yes\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst gestationalCarrierSurrogateValidator = (param) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        return true;\r\n    });\r\n\r\nconst numberThawsValidator = (sourceTransferredEmbryos, cycleDate) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        // && new Date(cycleDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n\r\n        let intersections = [];\r\n        intersections = sourceTransferredEmbryos.value.filter((item) => {\r\n            return TRANSFERRED_EMBRYO_SOURCE_FROZENS.includes(item);\r\n        });\r\n\r\n        if (intersections.length > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst endometrialThicknessValidtor = (cyccleType) =>\r\n    helpers.withParams({ type: \"cyccleType\" }, (value) => {\r\n        if (cyccleType.value == \"FET\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useBornEmbryoTransferInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const form = reactive({\r\n        embryoTransfer: null,\r\n        reasonsNoET: null,\r\n        preparationUterineLining: null,\r\n        endometrialThickness: null,\r\n        transferDate: null,\r\n        dateETAdjusted: null,\r\n        dayET: null,\r\n        ultrasoundGuidedET: null,\r\n        assistedZonaHatching: null,\r\n        embryosTransferred: null,\r\n        electiveTransfeESET: null,\r\n        sourceTransferredEmbryos: [],\r\n        transferInseminationMethod: null,\r\n        preImplGeneticTesting: null,\r\n        charTransferredEmbryo: null,\r\n        numberThaws: null,\r\n        sitePGTembryo: null,\r\n        gestationalCarrierSurrogate: null,\r\n        gestationalCarrierSurrogateChart: null,\r\n        heightRecipient: null,\r\n        weightRecipient: null,\r\n        recipientBMI: null,\r\n        endometrialReceptivityTest: null,\r\n        howManyTimesGestationalCarrier: null,\r\n        ageOfGestationalCarrier: null,\r\n        numberPriorLiveBirthsForGC: null\r\n    });\r\n\r\n    const rules = {\r\n        embryoTransfer: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                embryoTransferValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle)\r\n                )\r\n            )\r\n        },\r\n        reasonsNoET: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isEbryoTrasferNo(computed(() => form.embryoTransfer))\r\n            )\r\n        },\r\n        preparationUterineLining: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                preparationUterineLiningValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        transferDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isEbryoTrasferYes(computed(() => form.embryoTransfer))\r\n            ),\r\n            validDate\r\n        },\r\n        dateETAdjusted: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isEbryoTrasferYes(computed(() => form.embryoTransfer))\r\n            )\r\n        },\r\n        assistedZonaHatching: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isEbryoTrasferYes(computed(() => form.embryoTransfer))\r\n            )\r\n        },\r\n        embryosTransferred: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required and value cannot be greated than (utilizableEmbryos + utilizableAfterThaw - embryosCryopreserved) \",\r\n                embryosTransferredValidator(\r\n                    computed(() => form.embryoTransfer),\r\n                    computed(\r\n                        () => store.state.born.dependentOn.utilizableEmbryos\r\n                    ),\r\n                    computed(\r\n                        () => store.state.born.dependentOn.embryosCryopreserved\r\n                    ),\r\n                    computed(\r\n                        () => store.state.born.dependentOn.utilizableAfterThaw\r\n                    )\r\n                )\r\n            )\r\n        },\r\n        sourceTransferredEmbryos: {\r\n            validator: helpers.withMessage(\r\n                sourceTransferredEmbryosValidationMessage(\r\n                    store.state.artCycle.selectedCycle != undefined ? store.state.artCycle.selectedCycle.cycleType : null\r\n                ),\r\n                sourceTransferredEmbryosValidator(\r\n                    computed(() => form.embryoTransfer),\r\n                    computed(() => store.state.artCycle.selectedCycle != undefined ? store.state.artCycle.selectedCycle.cycleType : null)\r\n                )\r\n            )\r\n        },\r\n        transferInseminationMethod: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                transferInseminationMethodValidator(\r\n                    computed(() => form.embryosTransferred),\r\n                    computed(() => form.sourceTransferredEmbryos),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleDate)\r\n                )\r\n            )\r\n        },\r\n        preImplGeneticTesting: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required & must be YES if PGT A Planned is YES\",\r\n                preImplGeneticTestingValidator(\r\n                    computed(() => form.embryoTransfer),\r\n                    computed(\r\n                        () => store.state.artCycle.selectedCycle.cycleDate\r\n                    ),\r\n                    computed(() => store.state.born.dependentOn.pgtAPlanned)\r\n                )\r\n            )\r\n        },\r\n        charTransferredEmbryo: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                charTransferredEmbryoValidator(\r\n                    computed(() => form.embryosTransferred),\r\n                    computed(() => form.preImplGeneticTesting),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleDate)\r\n                )\r\n            )\r\n        },\r\n        sitePGTembryo: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                sitePGTembryoValidator(\r\n                    computed(() => form.preImplGeneticTesting),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleDate)\r\n                )\r\n            )\r\n        },\r\n        gestationalCarrierSurrogate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isEbryoTrasferYes(computed(() => form.embryoTransfer))\r\n            )\r\n        },\r\n        numberThaws: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                numberThawsValidator(\r\n                    computed(() => form.sourceTransferredEmbryos),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleDate)\r\n                )\r\n            )\r\n        },\r\n        endometrialThickness: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                endometrialThicknessValidtor(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const getDefaultEndometrialThickness = () => {\r\n        let items = store.state.cycleMonitoring.lines.filter(\r\n            (item) => item.etUs != null\r\n        );\r\n\r\n        if (items.length == 0 \r\n            || items[0].cycleId !== store.state.artCycle.selectedCycle.cycleId) return null;\r\n\r\n        let thickness = items[items.length - 1].etUs\r\n            ? parseFloat(items[items.length - 1].etUs)\r\n            : null;\r\n\r\n        return thickness;\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        form.embryoTransfer = data.embryoTransfer;\r\n        form.reasonsNoET = data.reasonsNoET;\r\n        form.preparationUterineLining = data.preparationUterineLining;\r\n        form.endometrialThickness = data.endometrialThickness\r\n            ? data.endometrialThickness\r\n            : getDefaultEndometrialThickness();\r\n        form.transferDate = data.transferDate\r\n            ? new Date(data.transferDate + \" 00:00:00\")\r\n            : null;\r\n        form.dateETAdjusted = data.dateETAdjusted ? data.dateETAdjusted : \"no\";\r\n        form.dayET = data.dayET;\r\n        form.ultrasoundGuidedET = data.ultrasoundGuidedET;\r\n        form.assistedZonaHatching = data.assistedZonaHatching;\r\n        form.embryosTransferred = data.embryosTransferred;\r\n        form.electiveTransfeESET = data.electiveTransfeESET;\r\n        form.sourceTransferredEmbryos = data.sourceTransferredEmbryos\r\n            ? data.sourceTransferredEmbryos\r\n            : [];\r\n        form.transferInseminationMethod = data.transferInseminationMethod;\r\n\r\n        form.charTransferredEmbryo = data.charTransferredEmbryo;\r\n        form.numberThaws = data.numberThaws;\r\n        form.sitePGTembryo = data.sitePGTembryo;\r\n        form.gestationalCarrierSurrogate = data.gestationalCarrierSurrogate\r\n            ? data.gestationalCarrierSurrogate\r\n            : \"no\";\r\n        form.gestationalCarrierSurrogateChart =\r\n            data.gestationalCarrierSurrogateChart;\r\n        form.heightRecipient = data.heightRecipient;\r\n        form.weightRecipient = data.weightRecipient;\r\n        form.recipientBMI = data.recipientBMI;\r\n        form.howManyTimesGestationalCarrier = data.howManyTimesGestationalCarrier;\r\n        form.ageOfGestationalCarrier = data.ageOfGestationalCarrier;\r\n        form.numberPriorLiveBirthsForGC = data.numberPriorLiveBirthsForGC;\r\n        form.endometrialReceptivityTest = data.endometrialReceptivityTest\r\n            ? data.endometrialReceptivityTest\r\n            : \"N\";\r\n\r\n        if (store.state.born.dependentOn.pgtAPlanned == \"Y\") {\r\n            form.preImplGeneticTesting = \"yes\";\r\n        } else {\r\n            form.preImplGeneticTesting = data.preImplGeneticTesting\r\n                ? data.preImplGeneticTesting\r\n                : \"no\";\r\n        }\r\n\r\n        if (\r\n            data.embryoTransfer == null &&\r\n            store.state.artCycle.selectedCycle.cycleType == \"FET\"\r\n        ) {\r\n            form.embryoTransfer = \"yes\";\r\n        }\r\n\r\n        if (data.preparationUterineLining == null) {\r\n            form.preparationUterineLining = PREPARATION_UTERINE_LINING_DEFAULT;\r\n        }\r\n\r\n        if (data.assistedZonaHatching == null) {\r\n            form.assistedZonaHatching = \"Y\";\r\n        }\r\n\r\n        if (store.state.born.fertilizationEmbryoThawDate) {\r\n            form.transferDate = new Date(\r\n                store.state.born.fertilizationEmbryoThawDate\r\n            );\r\n        }\r\n    };\r\n\r\n    const _save = () => {\r\n        store\r\n            .dispatch(\"born/updateEmbryoTransfer\", {\r\n                ...form,\r\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\r\n                transferDate: form.transferDate\r\n                    ? format(new Date(form.transferDate), DATE_FORMAT_STRING)\r\n                    : null\r\n            })\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            });\r\n    };\r\n\r\n    const confirm = useConfirm();\r\n\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const reasonsNoETOptions = computed(() => store.state.options.reasonsNoET);\r\n    const preparationUterineLiningOptions = computed(\r\n        () => store.state.options.preparationUterineLining\r\n    );\r\n    const assistedZonaHatchingOptions = computed(\r\n        () => store.state.options.assistedZonaHatching\r\n    );\r\n    const sourceTransferredEmbryosOptions = computed(\r\n        () => store.state.options.sourceTransferredEmbryos\r\n    );\r\n    const transferInseminationMethodOptions = computed(\r\n        () => store.state.options.transferInseminationMethod\r\n    );\r\n    const charTransferredEmbryoOptions = computed(\r\n        () => store.state.options.charTransferredEmbryo\r\n    );\r\n    const numberThawsOptions = computed(() => store.state.options.numberThaws);\r\n    const sitePGTembryoOptions = computed(\r\n        () => store.state.options.sitePGTembryo\r\n    );\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        fillForm,\r\n        save,\r\n        reasonsNoETOptions,\r\n        preparationUterineLiningOptions,\r\n        assistedZonaHatchingOptions,\r\n        sourceTransferredEmbryosOptions,\r\n        transferInseminationMethodOptions,\r\n        charTransferredEmbryoOptions,\r\n        numberThawsOptions,\r\n        sitePGTembryoOptions,\r\n        getDefaultEndometrialThickness\r\n    };\r\n}\r\n\r\nconst inseminationMethodValidator = (noOfOocytesRetrieved) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (noOfOocytesRetrieved.value > 0) {\r\n            return parseInt(value) > 0;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst oocytesNotUsedValidator = (\r\n    oocytesRetrieved,\r\n    inseminatedInjected,\r\n    oocytesCryopreserved,\r\n    cycleType\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (cycleType.value == \"FET\") {\r\n            return true;\r\n        } else {\r\n            return (\r\n                helpers.req(value) &&\r\n                parseInt(value) ==\r\n                    oocytesRetrieved.value -\r\n                        inseminatedInjected.value -\r\n                        oocytesCryopreserved.value\r\n            );\r\n        }\r\n    });\r\n\r\nconst reasonsForNoUseValidator = (oocytesNotUsed) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (oocytesNotUsed.value > 0) {\r\n            return value.length > 0;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst embryoStageFreezingValidator = (embryosCryopreserved) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (embryosCryopreserved.value > 0) {\r\n            return value.length > 0;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst inseminatedInjectedValidator = (noOfOocytesRetrieved) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        return true; // temp for now\r\n        if (noOfOocytesRetrieved.value > 0) {\r\n            return (\r\n                value.length > 0 &&\r\n                parseInt(value) <= noOfOocytesRetrieved.value\r\n            );\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst normalFertilization2PNValidator = (noOocytesInseminatedInjected) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (noOocytesInseminatedInjected.value > 0) {\r\n            return (\r\n                helpers.req(value) &&\r\n                parseInt(value) <= noOocytesInseminatedInjected.value\r\n            );\r\n        }\r\n        return true;\r\n    });\r\nconst ofMIIValidator = (noOocytesInseminatedInjected) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (noOocytesInseminatedInjected.value > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\nconst utilizableEmbryosValidator = (noOocytesInseminatedInjected) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (noOocytesInseminatedInjected.value > 0) {\r\n            return (\r\n                helpers.req(value) &&\r\n                parseInt(value) <= noOocytesInseminatedInjected.value\r\n            );\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst embryosCryopreservedValidator = (\r\n    noOocytesInseminatedInjected,\r\n    embryosThawed\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (noOocytesInseminatedInjected.value > 0) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return value <= embryosThawed.value;\r\n    });\r\n\r\nconst reasonEmbryoCryopreservationValidator = (\r\n    embryosCryopreserved,\r\n    cycleStartDate\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (\r\n            embryosCryopreserved.value > 0 &&\r\n            new Date(cycleStartDate.value) > new Date(CYCLE_START_DATE_JAN_19)\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst embryoFreshCryoMethodValidator = (embryosCryopreserved) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (embryosCryopreserved.value > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst embryoFreezeDate1Validator = (embryosCryopreserved) =>\r\n    helpers.withParams({ type: \"embryosCryopreserved\" }, (value) => {\r\n        if (embryosCryopreserved.value > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useBornFreshEmbryoInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const loading = ref(false);\r\n    const form = reactive({\r\n        inseminationMethod: [],\r\n        oocytesNotUsed: null,\r\n        reasonsForNoUse: [],\r\n        embryoStageFreezing: [],\r\n        inseminatedInjected: null,\r\n        embryoFreezeID1: null,\r\n        embryoFreezeID2: null,\r\n        embryoFreezeID3: null,\r\n        embryoFreezeID4: null,\r\n        normalFertilization2PN: null,\r\n        embryoFreezeDate1: null,\r\n        embryoFreezeDate2: null,\r\n        embryoFreezeDate3: null,\r\n        embryoFreezeDate4: null,\r\n        ofMII: null,\r\n        utilizableEmbryos: null,\r\n        embryosCryopreserved: null,\r\n        reasonEmbryoCryopreservation: null,\r\n        embryoFreshCryoMethod: null,\r\n        isParentSimulated: false,\r\n    });\r\n\r\n    const rules = {\r\n        inseminationMethod: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                inseminationMethodValidator(\r\n                    computed(\r\n                        () => store.state.born.dependentOn.oocytesRetrieved\r\n                    )\r\n                )\r\n            )\r\n        },\r\n        oocytesNotUsed: {\r\n            validator: helpers.withMessage(\r\n                \"Value must be equal to oocytesRetrieved - inseminatedInjected - oocytesCryopreserved\",\r\n                oocytesNotUsedValidator(\r\n                    computed(\r\n                        () => store.state.born.dependentOn.oocytesRetrieved\r\n                    ),\r\n                    computed(() => form.inseminatedInjected),\r\n                    computed(\r\n                        () => store.state.born.dependentOn.oocytesCryopreserved\r\n                    ),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        reasonsForNoUse: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                reasonsForNoUseValidator(computed(() => form.oocytesNotUsed))\r\n            )\r\n        },\r\n        embryoStageFreezing: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                embryoStageFreezingValidator(\r\n                    computed(() => form.embryosCryopreserved)\r\n                )\r\n            )\r\n        },\r\n        inseminatedInjected: {\r\n            validator: helpers.withMessage(\"Value Required\", required)\r\n        },\r\n        normalFertilization2PN: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required and must be less or equal to oocytes inseminated/injected\",\r\n                normalFertilization2PNValidator(\r\n                    computed(() => form.inseminatedInjected)\r\n                )\r\n            )\r\n        },\r\n        ofMII: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                ofMIIValidator(computed(() => form.inseminatedInjected))\r\n            )\r\n        },\r\n        utilizableEmbryos: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                utilizableEmbryosValidator(\r\n                    computed(() => form.inseminatedInjected)\r\n                )\r\n            )\r\n        },\r\n        embryosCryopreserved: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required & value must be less than # embryos Thawed\",\r\n                embryosCryopreservedValidator(\r\n                    computed(() => form.inseminatedInjected),\r\n                    computed(() => store.state.born.dependentOn.embryosThawed)\r\n                )\r\n            )\r\n        },\r\n        reasonEmbryoCryopreservation: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                reasonEmbryoCryopreservationValidator(\r\n                    computed(() => form.embryosCryopreserved),\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleDate)\r\n                )\r\n            )\r\n        },\r\n        embryoFreshCryoMethod: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                embryoFreshCryoMethodValidator(\r\n                    computed(() => form.embryosCryopreserved)\r\n                )\r\n            )\r\n        },\r\n        embryoFreezeDate1: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                embryoFreezeDate1Validator(\r\n                    computed(() => form.embryosCryopreserved)\r\n                )\r\n            ),\r\n            validDate\r\n        },\r\n        embryoFreezeDate2: { validDate },\r\n        embryoFreezeDate3: { validDate },\r\n        embryoFreezeDate4: { validDate }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const _save = () => {\r\n        let payload = {\r\n            ...form,\r\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\r\n            embryoFreezeDate1: form.embryoFreezeDate1\r\n                ? format(form.embryoFreezeDate1, DATE_FORMAT_STRING)\r\n                : null,\r\n            embryoFreezeDate2: form.embryoFreezeDate2\r\n                ? format(form.embryoFreezeDate2, DATE_FORMAT_STRING)\r\n                : null,\r\n            embryoFreezeDate3: form.embryoFreezeDate3\r\n                ? format(form.embryoFreezeDate3, DATE_FORMAT_STRING)\r\n                : null,\r\n            embryoFreezeDate4: form.embryoFreezeDate4\r\n                ? format(form.embryoFreezeDate4, DATE_FORMAT_STRING)\r\n                : null\r\n        };\r\n\r\n        // return;\r\n\r\n        store.dispatch(\"born/updateFreshEmbryo\", payload).then(() => {\r\n            toast.add({\r\n                severity: \"success\",\r\n                summary: \"\",\r\n                detail: \"Save Successful\",\r\n                life: 3000\r\n            });\r\n        });\r\n    };\r\n\r\n    const confirm = useConfirm();\r\n\r\n    const save = () => {\r\n        if (!form.isParentSimulated && v$.value.$invalid) {\r\n            return;\r\n        }\r\n        emitter.emit(\"fresh-embryo:on-save\");\r\n        _save();\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        form.inseminationMethod = data.inseminationMethod;\r\n        form.oocytesNotUsed = data.oocytesNotUsed;\r\n        form.reasonsForNoUse = data.reasonsForNoUse;\r\n        form.embryoStageFreezing = data.embryoStageFreezing;\r\n        form.inseminatedInjected = data.inseminatedInjected;\r\n        form.embryoFreezeID1 = data.embryoFreezeID1;\r\n        form.embryoFreezeID2 = data.embryoFreezeID2;\r\n        form.embryoFreezeID3 = data.embryoFreezeID3;\r\n        form.embryoFreezeID4 = data.embryoFreezeID4;\r\n        form.normalFertilization2PN = data.normalFertilization2PN;\r\n        form.embryoFreezeDate1 = data.embryoFreezeDate1\r\n            ? new Date(data.embryoFreezeDate1 + TIME_0)\r\n            : null;\r\n        form.embryoFreezeDate2 = data.embryoFreezeDate2\r\n            ? new Date(data.embryoFreezeDate2 + TIME_0)\r\n            : null;\r\n        form.embryoFreezeDate3 = data.embryoFreezeDate3\r\n            ? new Date(data.embryoFreezeDate3 + TIME_0)\r\n            : null;\r\n        form.embryoFreezeDate4 = data.embryoFreezeDate4\r\n            ? new Date(data.embryoFreezeDate4 + TIME_0)\r\n            : null;\r\n        form.ofMII = data.ofMII;\r\n        form.utilizableEmbryos = data.utilizableEmbryos;\r\n        form.embryosCryopreserved = data.embryosCryopreserved;\r\n        form.reasonEmbryoCryopreservation = data.reasonEmbryoCryopreservation;\r\n        form.embryoFreshCryoMethod = data.embryoFreshCryoMethod;\r\n\r\n        form.isParentSimulated = data.simulated_cycle;\r\n    };\r\n\r\n    const fillFormDefault = (data) => {\r\n        if (form.inseminationMethod.length == 0)\r\n            form.inseminationMethod = data.inseminationMethod;\r\n        if (form.oocytesNotUsed == null)\r\n            form.oocytesNotUsed = data.oocytesNotUsed;\r\n        if (form.reasonsForNoUse.length == 0)\r\n            form.reasonsForNoUse = data.reasonsForNoUse;\r\n        if (form.embryoStageFreezing.length == 0)\r\n            form.embryoStageFreezing = data.embryoStageFreezing;\r\n        if (form.inseminatedInjected == null)\r\n            form.inseminatedInjected = data.inseminatedInjected;\r\n        if (form.embryoFreezeID1 == null)\r\n            form.embryoFreezeID1 = data.embryoFreezeID1;\r\n        if (form.embryoFreezeID2 == null)\r\n            form.embryoFreezeID2 = data.embryoFreezeID2;\r\n        if (form.embryoFreezeID3 == null)\r\n            form.embryoFreezeID3 = data.embryoFreezeID3;\r\n        if (form.embryoFreezeID4 == null)\r\n            form.embryoFreezeID4 = data.embryoFreezeID4;\r\n        if (form.normalFertilization2PN == null)\r\n            form.normalFertilization2PN = data.normalFertilization2PN;\r\n        if (form.embryoFreezeDate1 == null)\r\n            form.embryoFreezeDate1 = data.embryoFreezeDate1\r\n                ? new Date(data.embryoFreezeDate1 + TIME_0)\r\n                : null;\r\n        if (form.embryoFreezeDate2 == null)\r\n            form.embryoFreezeDate2 = data.embryoFreezeDate2\r\n                ? new Date(data.embryoFreezeDate2 + TIME_0)\r\n                : null;\r\n        if (form.embryoFreezeDate3 == null)\r\n            form.embryoFreezeDate3 = data.embryoFreezeDate3\r\n                ? new Date(data.embryoFreezeDate3 + TIME_0)\r\n                : null;\r\n        if (form.embryoFreezeDate4 == null)\r\n            form.embryoFreezeDate4 = data.embryoFreezeDate4\r\n                ? new Date(data.embryoFreezeDate4 + TIME_0)\r\n                : null;\r\n        if (form.ofMII == null) form.ofMII = data.ofMII;\r\n        if (form.utilizableEmbryos == null)\r\n            form.utilizableEmbryos = data.utilizableEmbryos;\r\n        if (form.embryosCryopreserved == null)\r\n            form.embryosCryopreserved = data.embryosCryopreserved;\r\n        if (form.reasonEmbryoCryopreservation == null)\r\n            form.reasonEmbryoCryopreservation =\r\n                data.reasonEmbryoCryopreservation;\r\n        if (form.embryoFreshCryoMethod == null)\r\n            form.embryoFreshCryoMethod = data.embryoFreshCryoMethod;\r\n\r\n        form.isParentSimulated = data.simulated_cycle;\r\n    };\r\n\r\n    const getDeafultDataByPrimaryCycle = async ({ patientId, cycleId }) => {\r\n        const resp = await getFreshEbmryo(patientId, cycleId);\r\n        if (resp.status == \"success\") {\r\n            fillFormDefault(resp.freshEmbryos); \r\n        } \r\n\r\n        form.isParentSimulated = resp.simulatedCycle;\r\n    };\r\n\r\n    const inseminationMethodOptions = computed(\r\n        () => store.state.options.inseminationMethod\r\n    );\r\n    const reasonsForNoUseOptions = computed(\r\n        () => store.state.options.reasonsForNoUse\r\n    );\r\n    const embryoStageFreezingOptions = computed(\r\n        () => store.state.options.embryoStageFreezing\r\n    );\r\n    const reasonEmbryoCryopreservationOptions = computed(\r\n        () => store.state.options.reasonEmbryoCryopreservation\r\n    );\r\n    const embryoFreshCryoMethodOptions = computed(\r\n        () => store.state.options.embryoFreshCryoMethod\r\n    );\r\n\r\n    const cycleIds = computed(() => store.state.artCycle.cyclesSummary);\r\n\r\n    return {\r\n        store,\r\n        loading,\r\n        form,\r\n        v$,\r\n        fillForm,\r\n        save,\r\n        inseminationMethodOptions,\r\n        reasonsForNoUseOptions,\r\n        embryoStageFreezingOptions,\r\n        reasonEmbryoCryopreservationOptions,\r\n        embryoFreshCryoMethodOptions,\r\n        cycleIds,\r\n        getDeafultDataByPrimaryCycle\r\n    };\r\n}\r\n\r\nconst isFETCycleValidator = (cyccleType) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (cyccleType.value == \"FET\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useBronFrozenEmbyoInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const loading = ref(false);\r\n    const form = reactive({\r\n        oocyteCollectionDate: null,\r\n        embryoFreezeID1Thawed: null,\r\n        embryoFreezeID2Thawed: null,\r\n        embryoFreezeID3Thawed: null,\r\n        embryoFreezeID4Thawed: null,\r\n        embryosThawed: null,\r\n        utilizableAfterThaw: null,\r\n        embryoStageThawing: null,\r\n        embryoFrozenCryoMethod: null,\r\n        embryoThawDate: null,\r\n        donatedEmbryoFromAnotherCouple: null,\r\n        embryoIncubationType: [],\r\n        aIToolUsedInEmbryo: null,\r\n        aIToolType: [],\r\n        otherAITool: null,\r\n        ohssAdverseEvents: [],\r\n        ohssUnrelatedEvents: null,\r\n        otherAdverseEvents: [],\r\n        ohssOtherAdverseEvents: null\r\n    });\r\n\r\n    const rules = {\r\n        utilizableAfterThaw: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isFETCycleValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        embryoStageThawing: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isFETCycleValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        embryoFrozenCryoMethod: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isFETCycleValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        },\r\n        embryoThawDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isFETCycleValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            ),\r\n            validDate\r\n        },\r\n        donatedEmbryoFromAnotherCouple: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                isFETCycleValidator(\r\n                    computed(() => store.state.artCycle.selectedCycle.cycleType)\r\n                )\r\n            )\r\n        }\r\n    };\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const confirm = useConfirm();\r\n\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    const _save = () => {\r\n        loading.value = true;\r\n        store\r\n            .dispatch(\"born/updateFrozenEmbryo\", {\r\n                ...form,\r\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\r\n                oocyteCollectionDate: form.oocyteCollectionDate\r\n                    ? format(form.oocyteCollectionDate, DATE_FORMAT_STRING)\r\n                    : null,\r\n                embryoThawDate: form.embryoThawDate\r\n                    ? format(form.embryoThawDate, DATE_FORMAT_STRING)\r\n                    : null\r\n            })\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .finally(() => {\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        let embryoThawDate = data.embryoThawDate\r\n            ? new Date(data.embryoThawDate + TIME_0)\r\n            : null;\r\n\r\n        form.oocyteCollectionDate = data.oocyteCollectionDate\r\n            ? new Date(data.oocyteCollectionDate + TIME_0)\r\n            : null;\r\n        form.embryoFreezeID1Thawed = data.embryoFreezeID1Thawed;\r\n        form.embryoFreezeID2Thawed = data.embryoFreezeID2Thawed;\r\n        form.embryoFreezeID3Thawed = data.embryoFreezeID3Thawed;\r\n        form.embryoFreezeID4Thawed = data.embryoFreezeID4Thawed;\r\n        form.embryosThawed = data.embryosThawed;\r\n        form.utilizableAfterThaw = data.utilizableAfterThaw;\r\n        form.embryoStageThawing = data.embryoStageThawing;\r\n        form.embryoFrozenCryoMethod = data.embryoFrozenCryoMethod;\r\n        form.embryoThawDate = embryoThawDate;\r\n        form.embryoIncubationType = data.embryoIncubationType\r\n            ? data.embryoIncubationType\r\n            : [];\r\n        form.aIToolUsedInEmbryo = data.aIToolUsedInEmbryo;\r\n        form.aIToolType = data.aIToolType\r\n            ? data.aIToolType\r\n            : [];\r\n        form.otherAITool = data.otherAITool;\r\n        form.ohssAdverseEvents = data.ohssAdverseEvents\r\n            ? data.ohssAdverseEvents\r\n            : [];\r\n        form.ohssUnrelatedEvents = data.ohssUnrelatedEvents;\r\n        form.otherAdverseEvents = data.otherAdverseEvents\r\n            ? data.otherAdverseEvents\r\n            : [];\r\n        form.ohssOtherAdverseEvents = data.ohssOtherAdverseEvents;\r\n        form.donatedEmbryoFromAnotherCouple =\r\n            data.donatedEmbryoFromAnotherCouple;\r\n\r\n        if (data.embryoStageThawing.length == 0) {\r\n            form.embryoStageThawing = [4];\r\n        }\r\n\r\n        if (\r\n            store.state.artCycle.selectedCycle.cycleType == \"FET\" &&\r\n            data.embryoFrozenCryoMethod == null\r\n        ) {\r\n            form.embryoFrozenCryoMethod = \"ECRY002\";\r\n        }\r\n\r\n        store.commit(\"born/SET_FERTILIZATION_EMBRYO_THAW_DATE\", embryoThawDate);\r\n    };\r\n\r\n    const embryoStageThawingOptions = computed(\r\n        () => store.state.options.embryoStageThawing\r\n    );\r\n    const embryoFrozenCryoMethodOptions = computed(\r\n        () => store.state.options.embryoFrozenCryoMethod\r\n    );\r\n\r\n    const aIToolUsedInEmbryoOpts = ref([\r\n        { label: \"Yes\", value: \"y\" },\r\n        { label: \"No\", value: \"n\" },\r\n        { label: \"Unknown\", value: \"un\" }\r\n    ]);\r\n    const embryoIncubationTypeOpts = ref([\r\n        { label: \"Benchtop incubator (MINC+, MIRI Benchtop, G210, G185, Planer BT37 etc.)\", value: \"EIT001\" },\r\n        { label: \"Box incubator (Heracell, Panasonic, Sanyo etc.)\", value: \"EIT002\" },\r\n        { label: \"Time-lapse incubator (Embryoscope, Geri, MIRI TL etc.)\", value: \"EIT003\" },\r\n        { label: \"Other\", value: \"OTHER\" },\r\n        { label: \"Unknown\", value: \"UN\" }\r\n    ]);\r\n    const aIToolTypeOpts = ref([\r\n        { label: \"AIVF (EMA)\", value: \"ATT001\" },\r\n        { label: \"Embryionics\", value: \"ATT002\" },\r\n        { label: \"Fairtility (CHLOE)\", value: \"ATT003\" },\r\n        { label: \"IVF2.0\", value: \"ATT004\" },\r\n        { label: \"Life Whisperer\", value: \"ATT005\" },\r\n        { label: \"Time-lapse (TL) Integrated (IDAscore, KIDscore etc.)\", value: \"ATT006\" },\r\n        { label: \"Other\", value: \"OTHER\" },\r\n        { label: \"Unknown\", value: \"UN\" }\r\n    ]);\r\n    const ohssAdverseEventsOpts = ref([\r\n        { label: \"None\", value: \"NONE\" },\r\n        { label: \"Anticoagulation\", value: \"OHSS001\" },\r\n        { label: \"Bloodwork and ultrasound in the first week after ovum pick-up (OPU)\", value: \"OHSS002\" },\r\n        { label: \"Cabergoline after ovum pick-up (OPU)\", value: \"OHSS003\" },\r\n        { label: \"Cabergoline at trigger\", value: \"OHSS004\" },\r\n        { label: \"Hospitalization\", value: \"OHSS005\" },\r\n        { label: \"ICU admission\", value: \"OHSS006\" },\r\n        { label: \"Inpatient paracentesis/culdocentesis\", value: \"OHSS007\" },\r\n        { label: \"IV hydration\", value: \"OHSS008\" },\r\n        { label: \"Outpatient paracentesis/culdocentesis\", value: \"OHSS009\" },\r\n        { label: \"Pleural drainage/thoracentesis\", value: \"OHSS010\" },\r\n        { label: \"Other\", value: \"OTHER\" },\r\n        { label: \"Unknown\", value: \"UN\" }\r\n    ]);\r\n    const otherAdverseEventsOpts = ref([\r\n        { label: \"Adverse reaction to anesthesia\", value: \"OAE001\" },\r\n        { label: \"Bladder/bowel injury\", value: \"OAE002\" },\r\n        { label: \"Hemorrhage requiring Blood transfusion\", value: \"OAE003\" },\r\n        { label: \"Hemorrhage requiring Hospitalization\", value: \"OAE004\" },\r\n        { label: \"Hemorrhage requiring Surgery\", value: \"OAE005\" },\r\n        { label: \"Infection requiring\\Inpatient antibiotics\", value: \"OAE006\" },\r\n        { label: \"Infection requiring\\Outpatient Antibiotics\", value: \"OAE007\" },\r\n        { label: \"Infection requiring\\Surgical drainage of an abscess\", value: \"OAE008\" },\r\n        { label: \"IVF medication side effect requiring change in intended treatment\", value: \"OAE009\" },\r\n        { label: \"Ovarian rupture\", value: \"OAE010\" },\r\n        { label: \"Ovarian torsion\", value: \"OAE011\" },\r\n        { label: \"Patient death\", value: \"OAE012\" },\r\n        { label: \"Thromboembolism\", value: \"OAE013\" },\r\n        { label: \"Other\", value: \"OTHER\" },\r\n        { label: \"Unknown\", value: \"UN\" }\r\n    ]);\r\n    const ohssUnrelatedEventsOpts = ref([\r\n        { label: \"Yes - oocyte provider\", value: \"AEUN001\" },\r\n        { label: \"Yes - embryo recipient\", value: \"AEUN002\" },\r\n        { label: \"Yes - both oocyte provider and embryo recipient\", value: \"AEUN003\" },\r\n        { label: \"Unknown\", value: \"UN\" },\r\n        { label: \"No\", value: \"N\" },\r\n    ]);\r\n\r\n    return {\r\n        store,\r\n        loading,\r\n        form,\r\n        v$,\r\n        save,\r\n        fillForm,\r\n        embryoStageThawingOptions,\r\n        embryoFrozenCryoMethodOptions,\r\n        aIToolUsedInEmbryoOpts,\r\n        embryoIncubationTypeOpts,\r\n        aIToolTypeOpts,\r\n        ohssAdverseEventsOpts,\r\n        otherAdverseEventsOpts,\r\n        ohssUnrelatedEventsOpts\r\n    };\r\n}\r\n\r\nconst requiredIfCycleGreaterthan22JanAndEmbryoTransferIsYes = (\r\n    cycleDate,\r\n    embryoTransfer\r\n) =>\r\n    helpers.withParams({ type: \"form\" }, (value) => {\r\n        if (embryoTransfer != null && embryoTransfer.embryoTransfer != \"yes\") {\r\n            return true;\r\n        }\r\n\r\n        if (new Date(cycleDate) > new Date(\"2022-01-01\")) {\r\n            return value.length > 0;\r\n        }\r\n        return true;\r\n    });\r\n\r\nconst congenitalAnomaliesValidator = (noOfBabiesBorn) =>\r\n    helpers.withParams({ type: \"noOfBabiesBorn\" }, (value) => {\r\n        if (parseInt(noOfBabiesBorn.value) > 0) {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useBornExtraFormInit() {\r\n    const store = useStore();\r\n\r\n    const form = reactive({\r\n        patientNotes: null,\r\n        bornConsentFlag: null,\r\n        pgtAIsPlanned: null,\r\n        patientHistoryNotes: null,\r\n        mediAdminisPriorCos: [],\r\n        otherMediPriorCosDesc: null,\r\n        totalDoseRekovelleMcg: null,\r\n        stimulationNotes: null,\r\n        spermCollectionNotes: null,\r\n        embryologyNotes: null,\r\n        endoRecTestdPerformed: null,\r\n        recTestBiopsyResult: null,\r\n        transferNotes: null,\r\n        pregnancyOutcomeNotes: null,\r\n        estimatedDateOfBirth: null,\r\n        gestationalAge: null,\r\n        complicationsOfPregnancy: [],\r\n        maternalHealthConditions: [],\r\n        diabetesAndPregnancy: null,\r\n        hypertensionDisorder: null,\r\n        typeOfLabour: null,\r\n        augmentation: [],\r\n        methodsOfInduction: [],\r\n        typeOfDelivery: null,\r\n        allIndicationsOfLabour: null,\r\n        cervicalRipening: [],\r\n        allIndicationsCaesarean: null,\r\n        labourBirthComplications: [],\r\n        maternalOutcome: null,\r\n        birthWeight: null,\r\n        congenitalAnomalies: null,\r\n        neonatalDeath: null,\r\n        apgar1: null,\r\n        apgar5: null,\r\n        apgar10: null,\r\n        neonatalBirthComplications: null,\r\n        admissionToNicu: null,\r\n        notesOnBirthOutcome: null,\r\n        liveBornFetus: null,\r\n        sexFetus: null\r\n    });\r\n\r\n    const medicationForCOSContainFSHOrLhOrFshPlusLH = ref(false);\r\n    const medicationForCOS = ref();\r\n\r\n    const rules = {\r\n        congenitalAnomalies: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                congenitalAnomaliesValidator(\r\n                    computed(() => store.state.born.dependentOn.noOfBabiesBorn)\r\n                )\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const getBornExtra = () => {\r\n        store\r\n            .dispatch(\"born/getBornExtra\", {\r\n                patientId: store.state.artCycle.patient.id,\r\n                cycleId: store.state.artCycle.selectedCycle.cycleId\r\n            })\r\n            .then((data) => {\r\n                fillForm(data);\r\n            })\r\n            .catch(() => {})\r\n            .finally(() => {\r\n                v$.value.$validate();\r\n            });\r\n    };\r\n\r\n    const fillForm = (data) => {\r\n        form.patientNotes = data.patient_notes;\r\n        form.bornConsentFlag = data.born_consent_flag;\r\n        form.pgtAIsPlanned = data.pgt_a_is_planned;\r\n        form.patientHistoryNotes = data.patient_history_notes;\r\n        form.mediAdminisPriorCos = data.medi_adminis_prior_cos;\r\n        form.totalDoseRekovelleMcg = data.total_dose_rekovelle_mcg;\r\n        form.stimulationNotes = data.stimulation_notes;\r\n        form.spermCollectionNotes = data.sperm_collection_notes;\r\n        form.embryologyNotes = data.embryology_notes;\r\n        form.endoRecTestdPerformed = data.endo_rec_testd_performed;\r\n        form.recTestBiopsyResult = data.rec_test_biopsy_result;\r\n        form.transferNotes = data.transfer_notes;\r\n        form.pregnancyOutcomeNotes = data.pregnancy_outcome_notes;\r\n        form.estimatedDateOfBirth = data.estimated_date_of_birth\r\n            ? new Date(data.estimated_date_of_birth)\r\n            : null;\r\n        form.gestationalAge = data.gestational_age;\r\n        form.complicationsOfPregnancy = data.complications_of_pregnancy;\r\n        form.maternalHealthConditions = data.maternal_health_conditions;\r\n        form.diabetesAndPregnancy = data.diabetes_and_pregnancy;\r\n        form.hypertensionDisorder = data.hypertension_disorder;\r\n        form.typeOfLabour = data.type_of_labour;\r\n        form.augmentation = data.augmentation;\r\n        form.methodsOfInduction = data.methods_of_induction;\r\n        form.typeOfDelivery = data.type_of_delivery;\r\n        form.allIndicationsOfLabour = data.all_indications_of_labour;\r\n        form.cervicalRipening = data.cervical_ripening;\r\n        form.allIndicationsCaesarean = data.all_indications_caesarean;\r\n        form.labourBirthComplications = data.labour_birth_complications;\r\n        form.maternalOutcome = data.maternal_outcome;\r\n        form.birthWeight = data.birth_weight;\r\n        form.congenitalAnomalies = data.congenital_anomalies;\r\n        form.neonatalDeath = data.neonatal_death;\r\n        form.apgar1 = data.apgar_1;\r\n        form.apgar5 = data.apgar_5;\r\n        form.apgar10 = data.apgar_10;\r\n        form.neonatalBirthComplications = data.neonatal_birth_complications;\r\n        form.admissionToNicu = data.admission_to_nicu;\r\n        form.notesOnBirthOutcome = data.notes_on_birth_outcome;\r\n        form.liveBornFetus = data.live_born_fetus; // todo after service\r\n        form.sexFetus = data.sex_fetus; // todo after service\r\n    };\r\n\r\n    const loading = ref(false);\r\n    const toast = useToast();\r\n    const _save = () => {\r\n        loading.value = true;\r\n        let payload = {\r\n            patientId: store.state.artCycle.patient.id,\r\n            cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n            patient_notes: form.patientNotes,\r\n            born_consent_flag: form.bornConsentFlag,\r\n            pgt_a_is_planned: form.pgtAIsPlanned,\r\n            patient_history_notes: form.patientHistoryNotes,\r\n            medi_adminis_prior_cos: form.mediAdminisPriorCos,\r\n            total_dose_rekovelle_mcg: form.totalDoseRekovelleMcg,\r\n            stimulation_notes: form.stimulationNotes,\r\n            sperm_collection_notes: form.spermCollectionNotes,\r\n            embryology_notes: form.embryologyNotes,\r\n            endo_rec_testd_performed: form.endoRecTestdPerformed,\r\n            rec_test_biopsy_result: form.recTestBiopsyResult,\r\n            transfer_notes: form.transferNotes,\r\n            pregnancy_outcome_notes: form.pregnancyOutcomeNotes,\r\n            estimated_date_of_birth: form.estimatedDateOfBirth\r\n                ? format(form.estimatedDateOfBirth, DATE_FORMAT_STRING)\r\n                : null,\r\n            gestational_age: form.gestationalAge,\r\n            complications_of_pregnancy: form.complicationsOfPregnancy,\r\n            maternal_health_conditions: form.maternalHealthConditions,\r\n            diabetes_and_pregnancy: form.diabetesAndPregnancy,\r\n            hypertension_disorder: form.hypertensionDisorder,\r\n            type_of_labour: form.typeOfLabour,\r\n            augmentation: form.augmentation,\r\n            methods_of_induction: form.methodsOfInduction,\r\n            type_of_delivery: form.typeOfDelivery,\r\n            all_indications_of_labour: form.allIndicationsOfLabour,\r\n            cervical_ripening: form.cervicalRipening,\r\n            all_indications_caesarean: form.allIndicationsCaesarean,\r\n            labour_birth_complications: form.labourBirthComplications,\r\n            maternal_outcome: form.maternalOutcome,\r\n            birth_weight: form.birthWeight,\r\n            congenital_anomalies: form.congenitalAnomalies,\r\n            neonatal_death: form.neonatalDeath,\r\n            apgar_1: form.apgar1,\r\n            apgar_5: form.apgar5,\r\n            apgar_10: form.apgar10,\r\n            neonatal_birth_complications: form.neonatalBirthComplications,\r\n            admission_to_nicu: form.admissionToNicu,\r\n            notes_on_birth_outcome: form.notesOnBirthOutcome,\r\n            preExistingMentalHealthCondition:\r\n                form.preExistingMentalHealthCondition,\r\n            sex_fetus: form.sexFetus,\r\n            live_born_fetus: form.liveBornFetus\r\n        };\r\n\r\n        store\r\n            .dispatch(\"born/saveBornExtra\", payload)\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .catch(() => {})\r\n            .finally(() => {\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const save = () => {\r\n        if (v$.value.$invalid) {\r\n            return;\r\n        }\r\n        _save();\r\n    };\r\n\r\n    return {\r\n        form,\r\n        loading,\r\n        v$,\r\n        save,\r\n        fillForm,\r\n        getBornExtra,\r\n        medicationForCOS,\r\n        medicationForCOSContainFSHOrLhOrFshPlusLH\r\n    };\r\n}\r\n\r\nexport function useBornFieldOptions() {\r\n    const store = useStore();\r\n    const complicationsOfPregnancyOptions = computed(\r\n        () => store.state.options.complicationsOfPregnancy\r\n    );\r\n\r\n    const metarnalHealthConditionOptions = computed(\r\n        () => store.state.options.maternalHealthConditions\r\n    );\r\n\r\n    const diabetesAndPregnancyOptions = reactive([\r\n        {\r\n            value: \"None\",\r\n            label: \"None\"\r\n        },\r\n        {\r\n            value: \"Gestational | Insulin\",\r\n            label: \"Gestational | Insulin\"\r\n        },\r\n        {\r\n            value: \"Gestational | No Insulin\",\r\n            label: \"Gestational | No Insulin\"\r\n        },\r\n        {\r\n            value: \"Gestational | Insulin Status Unknown\",\r\n            label: \"Gestational | Insulin Status Unknown\"\r\n        },\r\n        {\r\n            value: \"Type I\",\r\n            label: \"Type I\"\r\n        },\r\n        {\r\n            value: \"Type II | Insulin\",\r\n            label: \"Type II | Insulin\"\r\n        },\r\n        {\r\n            value: \"Type II | No Insulin\",\r\n            label: \"Type II | No Insulin\"\r\n        },\r\n        {\r\n            value: \"Type Unknown\",\r\n            label: \"Type Unknown\"\r\n        },\r\n        {\r\n            value: \"Declined testing\",\r\n            label: \"Declined testing\"\r\n        },\r\n        {\r\n            value: \"Unknown\",\r\n            label: \"Unknown\"\r\n        }\r\n    ]);\r\n\r\n    const hypertensionDisorderOptions = reactive([\r\n        {\r\n            value: \"None\",\r\n            label: \"None\"\r\n        },\r\n        {\r\n            value: \"Gestational Hypertension\",\r\n            label: \"Gestational Hypertension\"\r\n        },\r\n        {\r\n            value: \"Preeclampsia\",\r\n            label: \"Preeclampsia\"\r\n        },\r\n        {\r\n            value: \"Pre-existing Hypertension with superimposed preeclampsia\",\r\n            label: \"Pre-existing Hypertension with superimposed preeclampsia\"\r\n        },\r\n        {\r\n            value: \"HELLP Syndrome\",\r\n            label: \"HELLP Syndrome\"\r\n        },\r\n        {\r\n            value: \"Eclampsia\",\r\n            label: \"Eclampsia\"\r\n        },\r\n        {\r\n            value: \"Unknown\",\r\n            label: \"Unknown\"\r\n        }\r\n    ]);\r\n\r\n    const typeOfLabourOptions = computed(\r\n        () => store.state.options.typeOfLabour\r\n    );\r\n\r\n    const augmentationOptions = computed(\r\n        () => store.state.options.augmentation\r\n    );\r\n\r\n    const methodsOfInductionOptions = computed(\r\n        () => store.state.options.methodsOfInduction\r\n    );\r\n\r\n    const typeOfDeliveryOptions = computed(\r\n        () => store.state.options.typeOfDelivery\r\n    );\r\n\r\n    const cervicalRipeningOptions = computed(\r\n        () => store.state.options.cervicalRipening\r\n    );\r\n\r\n    const apgarOptions = reactive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \"Unknown\"]);\r\n\r\n    const neonatalBirthComplicationsOptions = computed(\r\n        () => store.state.options.newbornComplications\r\n    );\r\n\r\n    const indicationLabourOptions = computed(\r\n        () => store.state.options.allIndicationsOfLabour\r\n    );\r\n\r\n    const indicationCaesareanOptions = computed(\r\n        () => store.state.options.allIndicationsCaesarean\r\n    );\r\n\r\n    const labourBirthComplicationsOptions = computed(\r\n        () => store.state.options.labourBirthComplications\r\n    );\r\n\r\n    const maternalOutcomeOptions = computed(\r\n        () => store.state.options.maternalOutcome\r\n    );\r\n\r\n    const medicationForCOSOptions = computed(\r\n        () => store.state.options.medicationAdministraionPriorCOS\r\n    );\r\n\r\n    return {\r\n        complicationsOfPregnancyOptions,\r\n        metarnalHealthConditionOptions,\r\n        diabetesAndPregnancyOptions,\r\n        hypertensionDisorderOptions,\r\n        typeOfLabourOptions,\r\n        augmentationOptions,\r\n        methodsOfInductionOptions,\r\n        typeOfDeliveryOptions,\r\n        cervicalRipeningOptions,\r\n        apgarOptions,\r\n        neonatalBirthComplicationsOptions,\r\n        indicationLabourOptions,\r\n        indicationCaesareanOptions,\r\n        labourBirthComplicationsOptions,\r\n        maternalOutcomeOptions,\r\n        medicationForCOSOptions\r\n    };\r\n}\r\n","const { helpers } = require(\"@vuelidate/validators\");\r\n\r\nconst DATE_REGEX = /^((0[1-9]|1[012])[/](0[1-9]|[12][0-9]|3[01])[/](19|20)?[0-9]{2})*$/;\r\n\r\nexport const validDate = helpers.withMessage(\r\n    \"Date format is not valid\",\r\n    (value) => {\r\n        if (value == '') return true;\r\n        if (value == null) return true;\r\n        if (value instanceof Date) return true;\r\n        return DATE_REGEX.match(value);\r\n    }\r\n);\r\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n"],"sourceRoot":""}