{"version":3,"sources":["webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/date-fns/esm/addDays/index.js","webpack:///./src/composable/fertilization.js","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js"],"names":["userAgent","firefox","match","module","exports","addDays","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","thawingDateValidator","fate","helpers","withParams","type","value","req","frozenDateValidator","discardingDateValidator","strawValidator","useFertilizationInit","store","useStore","router","useRouter","showGrid","ref","problem","isBornCycle","computed","getters","embryoDetailDialog","selectedEmbryo","reactive","day","errorMsg","fertId","fertLineId","occId","cycleType","f_incubator","aspirationForm","total","m2","m1","gv","atr","ezona","eggCleaningBy","eggRetrivalBy","setSelectedEmbryo","fertDay","fertLine","lineId","embryoDetail","dayNo","oocId","cultureDay","embryoAge","stage","grade","score","time","oocGroup","clinician","embryologist","embryologistDoingBiopsy","embryologistDoingFreezing","embryologistDoingThawing","embryologistDoingTransfer","embryologistDoingScoring","straw","frozenDate","thawingDate","assistedHatching","biopsy","discardingDate","transferDate","uniformCells","cellsMultinucleation","fragmentation","cellsCompaction","asphericalForm","vacuolisation","granularCytoplasm","abnormalZona","fragmentedPolarBody","fragmentsInPus","oocDiameter","thicknessZpN","thicknessZpS","thicknessZpE","thicknessZpW","incubator","description","newImage","images","frozenBy","thawedBy","dewar","canisterNo","cassetteId","plugColor","cassetteType","embryoSurvived","freezerId","location","rules","required","validator","withMessage","validDate","embryoDetailV$","useVuelidate","embryoDetailSubmitted","getEmbryoDetail","lineIndex","state","fertilization","fertilizationLines","findIndex","item","defaultClinician","defaultEmbryologist","console","log","artCycle","patient","doctorId","cassetteColor","dispatch","then","data","TIME_0","finally","onCellClick","openEmbryoDetailDialog","closeEmbryoDetailDialog","getFertilization","selectedCycle","emitter","emit","cycleId","catch","push","useFertilizationGridInit","confirm","useConfirm","gridDesc","sortToggle","fertilizationGrid","sort","a","b","noEmbryo","createFertilizationLineDialog","fertilizationGridDays","editable","inject","embryoDetailCreateConfirmDailog","moveGridCell","direction","days","lineIdx","line","dayIdx","undefined","fillDaysRow","val","fertDate0","fertDate1","fertDate2","fertDate3","fertDate4","fertDate5","fertDate6","fertDate7","getFertilizationLines","ferilizationLine","strawId","comment","isFertilizationEdit","createFetilizationRow","exp","length","checkAll","checkLine","editFetilizationRow","thawDate","selectedLines","editFetilizationRows","forEach","index","deleteLines","require","message","header","icon","accept","lineIds","reject","showFateInGrid","col","updateFertilization","payload","format","DATE_FORMAT_STRING","onGridCellClick","openPdfReport","params","ecId","pDate","cycleDate","url","buildPdfUrl","window","open","useEmbryoDetailDialogInit","toast","useToast","selectedFreezer","loading","cyroStorage","source","embryoDevelopment","fertilizationId","freezDate","patientId","day7Stage","day7Grade","cyroStorageV$","cyroStorageSubmitted","saveEmbryoDetail","$invalid","formData","image","autoFreezId","add","severity","summary","life","err","frResp","msg","useTreeViewInit","treeViewData","key","name","provider","providers","id","doctor","embryologists","img","ORIGIN","openImage","useCraeteFertilizationFromInit","form","fertTime0","fertInit0","fertTime1","fertInit1","fertTime2","fertInit2","fertTime3","fertInit3","fertTime5","fertInit5","fertTime6","fertInit6","fertTime7","fertInit7","expComment","v$","submitted","createFertilization","populateDates","newValue","useFertilizationLineCreateDialog","isEdit","fateOptions","cycleTypeOptions","cycleTypes","map","save","deleteLoading","deleteFertilizationLine","primaryCycleValidator","otherPatient","useEbmryoInfo","primaryCycleId","otherPrimaryCycleId","fromOutside","primaryCycles","filteredPatient","patientFilter","event","Service","searchDemographic","term","query","trim","sex","toLowerCase","resp","otherPrimaryCycles","getOtherPrimaryCycles","getPrimaryCyclesService","demographicNo","label","emptyEbmryoAssignedTo","getDefaultFreshEbmryo","cycelId","onEmbyroAssingedToChageHandler","emptyDonor","onOtherCycleIdChangeHandler","otherPatientId","updatePrimaryCycle","status","$","$trim","forcedStringTrimMethod","target","proto","forced","this","aFunction","toObject","toLength","fails","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","test","nativeSort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","result","String","fromCharCode","k","v","charAt","FORCED","getSortCompare","comparefn","x","y","array","call","itemsLength","items","arrayLength","webkit","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","replace","start","end","floor","Math","mergeSort","middle","insertionSort","merge","slice","element","j","i","left","right","llength","rlength","lindex","rindex","non","METHOD_NAME","UA"],"mappings":"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","file":"js/chunk-2f52d03d.429a7c29.js","sourcesContent":["var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import { DATE_FORMAT_STRING, ORIGIN } from \"@/config\";\r\nimport { emitter } from \"@/event-bus\";\r\nimport { addDays } from \"date-fns\";\r\nimport { format } from \"date-fns/esm\";\r\nimport { computed, inject, onMounted, onUnmounted, reactive, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { helpers, required } from \"@vuelidate/validators\";\r\nimport { buildPdfUrl } from \"@/service/utils\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\nimport Service from \"@/service/art-cycle.js\";\r\nimport {\r\n    getPrimaryCycles as getPrimaryCyclesService,\r\n    updatePrimaryCycle\r\n} from \"@/service/fertilization\";\r\nimport { validDate } from \"@/composable/validator\";\r\nimport { TIME_0 } from \"@/constants\";\r\n\r\nconst column = {\r\n    employeeId: null,\r\n    day1Stage: null,\r\n    day2Stage: null,\r\n    day3Stage: null,\r\n    day4Stage: null,\r\n    day5Stage: null,\r\n    day6Stage: null,\r\n    day7Stage: null,\r\n    day8Stage: null,\r\n    comment: null\r\n};\r\n\r\nconst thawingDateValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (fate.value == \"Thawed\") {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst frozenDateValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (fate.value == \"Frozen\") {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst discardingDateValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (fate.value == \"Discard\") {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst strawValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (\r\n            fate.value == \"Transfer\"\r\n            //|| fate.value == \"Discard\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nexport function useFertilizationInit() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    const showGrid = ref(false);\r\n    const problem = ref(false);\r\n    const isBornCycle = computed(() => store.getters[\"artCycle/isBornCycle\"]);\r\n\r\n    const embryoDetailDialog = ref(false);\r\n\r\n    const selectedEmbryo = reactive({\r\n        day: null,\r\n        errorMsg: \"\",\r\n        date: null,\r\n        fertId: null,\r\n        fertLineId: null,\r\n        occId: null,\r\n        cycleType: null,\r\n        f_incubator: null,\r\n    });\r\n\r\n    const aspirationForm = reactive({\r\n        total: null,\r\n        m2: null,\r\n        m1: null,\r\n        gv: null,\r\n        atr: null,\r\n        ezona: null,\r\n        eggCleaningBy: null,\r\n        eggRetrivalBy: null\r\n    });\r\n\r\n    const setSelectedEmbryo = (fertDay, fertLine) => {\r\n        //console.log(fertDay);\r\n        selectedEmbryo.cycleType = fertLine.cycleType;\r\n        selectedEmbryo.day = fertDay.day;\r\n        selectedEmbryo.date = fertDay.date;\r\n        selectedEmbryo.fertId = fertLine.fertId;\r\n        selectedEmbryo.fertLineId = fertLine.lineId;\r\n        selectedEmbryo.f_incubator = fertLine.f_incubator;\r\n        selectedEmbryo.occId = fertLine[`day${fertDay.day}Id`]\r\n            ? fertLine[`day${fertDay.day}Id`]\r\n            : 0;\r\n        selectedEmbryo.errorMsg = \"\";\r\n    };\r\n\r\n    const embryoDetail = reactive({\r\n        fertLineId: null,\r\n        dayNo: null,\r\n        oocId: 0,\r\n        cultureDay: selectedEmbryo.date,\r\n        embryoAge: null,\r\n        stage: null,\r\n        grade: null,\r\n        score: null,\r\n        time: null,\r\n        oocGroup: null,\r\n        clinician: null,\r\n        embryologist: null,\r\n        embryologistDoingBiopsy: null,\r\n        embryologistDoingFreezing: null,\r\n        embryologistDoingThawing: null,\r\n        embryologistDoingTransfer: null,\r\n        embryologistDoingScoring: null,\r\n        fate: null,\r\n        straw: null,\r\n        frozenDate: null,\r\n        thawingDate: null,\r\n        assistedHatching: null,\r\n        biopsy: null,\r\n        discardingDate: null,\r\n        transferDate: null,\r\n\r\n        uniformCells: null,\r\n        cellsMultinucleation: null,\r\n        fragmentation: null,\r\n        cellsCompaction: null,\r\n        asphericalForm: null,\r\n        vacuolisation: null,\r\n        granularCytoplasm: null,\r\n        abnormalZona: false,\r\n        fragmentedPolarBody: false,\r\n        fragmentsInPus: false,\r\n\r\n        oocDiameter: null,\r\n        thicknessZpN: null,\r\n        thicknessZpS: null,\r\n        thicknessZpE: null,\r\n        thicknessZpW: null,\r\n\r\n        incubator: selectedEmbryo.f_incubator,\r\n        description: null,\r\n        newImage: null,\r\n        images: [],\r\n\r\n        frozenBy: null,\r\n        thawedBy: null,\r\n        dewar: null,\r\n        canisterNo: null,\r\n        cassetteId: null,\r\n        plugColor: null,\r\n        cassetteType: null,\r\n        embryoSurvived: null,\r\n        freezerId: null,\r\n        // freezerLabel: null,\r\n        location: null\r\n    });\r\n\r\n    let rules = {\r\n        stage: { required },\r\n        straw: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                strawValidator(computed(() => embryoDetail.fate))\r\n            )\r\n        },\r\n        thawingDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                thawingDateValidator(computed(() => embryoDetail.fate))\r\n            ),\r\n            validDate\r\n        },\r\n        frozenDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                frozenDateValidator(computed(() => embryoDetail.fate))\r\n            ),\r\n            validDate\r\n        },\r\n        discardingDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                discardingDateValidator(computed(() => embryoDetail.fate))\r\n            ),\r\n            validDate\r\n        }\r\n    };\r\n    const embryoDetailV$ = useVuelidate(rules, embryoDetail);\r\n    const embryoDetailSubmitted = ref(false);\r\n\r\n    const getEmbryoDetail = () => {\r\n        let occId = selectedEmbryo.occId;\r\n\r\n        let lineIndex = store.state.fertilization.fertilizationLines.findIndex(\r\n            (item) => item.lineId == selectedEmbryo.fertLineId\r\n        );\r\n\r\n        let { defaultClinician, defaultEmbryologist } = {\r\n            ...store.state.fertilization.fertilizationLines[lineIndex]\r\n        };\r\n\r\n        console.log(\"here\");\r\n        console.log(store.state.fertilization.fertilization.clinician);\r\n        embryoDetail.clinician =\r\n            store.state.fertilization.fertilization.clinician == null\r\n                ? defaultClinician\r\n                : store.state.fertilization.fertilization.clinician;\r\n\r\n\r\n        if(embryoDetail.clinician == null) {\r\n            embryoDetail.clinician = store.state.artCycle.patient.doctorId;\r\n        }\r\n        \r\n        if (occId == 0) {\r\n            // if (selectedEmbryo.day == embryoDetail.embryoAge) {\r\n            //     console.log(\"problem???\");\r\n            //     //return;\r\n            // }\r\n\r\n            embryoDetail.dayNo = null;\r\n            embryoDetail.oocId = null;\r\n            embryoDetail.cultureDay = null;\r\n            embryoDetail.embryoAge = null;\r\n            embryoDetail.stage = null;\r\n            embryoDetail.grade = null;\r\n            embryoDetail.score = null;\r\n            embryoDetail.time = null;\r\n            embryoDetail.oocGroup = null;\r\n\r\n            embryoDetail.embryologist = defaultEmbryologist;\r\n            embryoDetail.uniformCells = null;\r\n            embryoDetail.cellsMultinucleation = null;\r\n            embryoDetail.fragmentation = null;\r\n            embryoDetail.cellsCompaction = null;\r\n            embryoDetail.asphericalForm = null;\r\n            embryoDetail.vacuolisation = null;\r\n            embryoDetail.granularCytoplasm = null;\r\n            embryoDetail.oocDiameter = null;\r\n            embryoDetail.thicknessZpN = null;\r\n            embryoDetail.thicknessZpS = null;\r\n            embryoDetail.thicknessZpE = null;\r\n            embryoDetail.thicknessZpW = null;\r\n            // embryoDetail.incubator = null;\r\n            embryoDetail.description = null;\r\n            embryoDetail.newImage = null;\r\n            embryoDetail.images = [];\r\n            embryoDetail.abnormalZona = false;\r\n            embryoDetail.fragmentedPolarBody = false;\r\n            embryoDetail.fragmentsInPus = false;\r\n            embryoDetail.fate = null;\r\n            embryoDetail.straw = null;\r\n            embryoDetail.frozenDate = null;\r\n            embryoDetail.thawingDate = null;\r\n            embryoDetail.discardingDate = null;\r\n            embryoDetail.transferDate = null;\r\n            embryoDetail.assistedHatching = null;\r\n            embryoDetail.biopsy = null;\r\n            embryoDetail.embryologistDoingBiopsy = null;\r\n\r\n            embryoDetail.embryologistDoingFreezing = null;\r\n            embryoDetail.embryologistDoingThawing = null;\r\n            embryoDetail.embryologistDoingTransfer = null;\r\n            embryoDetail.embryologistDoingScoring = null;\r\n\r\n            embryoDetail.canisterNo = null;\r\n            embryoDetail.cassetteId = null;\r\n            embryoDetail.cassetteType = null;\r\n            embryoDetail.cassetteColor = null;\r\n            embryoDetail.dewar = null;\r\n            embryoDetail.embryoSurvived = null;\r\n            embryoDetail.plugColor = null;\r\n            embryoDetail.freezerId = null;\r\n            embryoDetail.location = null;\r\n\r\n            store\r\n                .dispatch(\r\n                    \"fertilization/getFertlizationEmbryoDetailFromStart\",\r\n                    {\r\n                        lineId: selectedEmbryo.fertLineId,\r\n                        dayNo: selectedEmbryo.day\r\n                    }\r\n                )\r\n                .then((data) => {\r\n                    embryoDetail.dayNo = data.dayNo;\r\n                    //embryoDetail.oocId = data.oocId;\r\n                    embryoDetail.cultureDay = data.cultureDay;\r\n                    embryoDetail.embryoAge = data.embryoAge;\r\n                    embryoDetail.stage = data.stage;\r\n                    embryoDetail.grade = data.grade;\r\n                    embryoDetail.score = data.score;\r\n                    embryoDetail.time = data.time;\r\n                    embryoDetail.oocGroup = data.oocGroup;\r\n                    if (data.clinician != null)\r\n                        embryoDetail.clinician = data.clinician;\r\n                    embryoDetail.embryologist = data.embryologist\r\n                        ? data.embryologist\r\n                        : defaultEmbryologist;\r\n                    embryoDetail.uniformCells = data.uniformCells;\r\n                    embryoDetail.cellsMultinucleation =\r\n                        data.cellsMultinucleation;\r\n                    embryoDetail.fragmentation = data.fragmentation;\r\n                    embryoDetail.cellsCompaction = data.cellsCompaction;\r\n                    embryoDetail.asphericalForm = data.asphericalForm;\r\n                    embryoDetail.vacuolisation = data.vacuolisation;\r\n                    embryoDetail.granularCytoplasm = data.granularCytoplasm;\r\n                    embryoDetail.oocDiameter = data.oocDiameter;\r\n                    embryoDetail.thicknessZpN = data.thicknessZpN;\r\n                    embryoDetail.thicknessZpS = data.thicknessZpS;\r\n                    embryoDetail.thicknessZpE = data.thicknessZpE;\r\n                    embryoDetail.thicknessZpW = data.thicknessZpW;\r\n                    embryoDetail.incubator = data.incubator;\r\n                    embryoDetail.description = data.description;\r\n                    embryoDetail.newImage = null;\r\n                    embryoDetail.images = data.images;\r\n                    embryoDetail.abnormalZona = data.abnormalZona;\r\n                    embryoDetail.fragmentedPolarBody = data.fragmentedPolarBody;\r\n                    embryoDetail.fragmentsInPus = data.fragmentsInPus;\r\n                    embryoDetail.fate = data.fate;\r\n                    //embryoDetail.straw = data.straw;\r\n                    embryoDetail.frozenDate = data.frozenDate\r\n                        ? new Date(data.frozenDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.thawingDate = data.thawingDate\r\n                        ? new Date(data.thawingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.transferDate = data.transferDate\r\n                        ? new Date(data.transferDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.discardingDate = data.discardingDate\r\n                        ? new Date(data.discardingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.assistedHatching = data.assistedHatching;\r\n                    embryoDetail.biopsy = data.biopsy;\r\n                    embryoDetail.embryologistDoingBiopsy =\r\n                        data.embryologistDoingBiopsy;\r\n\r\n                    embryoDetail.embryologistDoingFreezing = data.embryologistDoingFreezing;\r\n                    embryoDetail.embryologistDoingThawing = data.embryologistDoingThawing;\r\n                    embryoDetail.embryologistDoingTransfer = data.embryologistDoingTransfer;\r\n                    embryoDetail.embryologistDoingScoring = data.embryologistDoingScoring;\r\n                    \r\n                    embryoDetail.canisterNo = data.canisterNo;\r\n                    embryoDetail.cassetteId = data.cassetteId;\r\n                    embryoDetail.cassetteType = data.cassetteType;\r\n                    embryoDetail.cassetteColor = data.cassetteColor;\r\n                    embryoDetail.dewar = data.dewar;\r\n                    embryoDetail.embryoSurvived = data.embryoSurvived;\r\n                    embryoDetail.plugColor = data.plugColor;\r\n                    embryoDetail.frozenBy = data.frozenBy;\r\n                    embryoDetail.thawedBy = data.thawedBy;\r\n                    embryoDetail.location = null;\r\n                    embryoDetail.freezerId = data.freezerId;\r\n                    // todo\r\n                    // embryoDetail.freezer = data\r\n                })\r\n                .finally(() => {});\r\n        } else {\r\n            store\r\n                .dispatch(\"fertilization/getFertlizationEmbryoDetail\", occId)\r\n                .then((data) => {\r\n                    embryoDetail.dayNo = data.dayNo;\r\n                    embryoDetail.oocId = data.oocId;\r\n                    embryoDetail.cultureDay = data.cultureDay;\r\n                    embryoDetail.embryoAge = data.embryoAge;\r\n                    embryoDetail.stage = data.stage;\r\n                    embryoDetail.grade = data.grade;\r\n                    embryoDetail.score = data.score;\r\n                    embryoDetail.time = data.time;\r\n                    embryoDetail.oocGroup = data.oocGroup;\r\n\r\n                    if (data.clinician != null)\r\n                        embryoDetail.clinician = data.clinician;\r\n\r\n                    embryoDetail.embryologist = data.embryologist\r\n                        ? data.embryologist\r\n                        : defaultEmbryologist;\r\n                    embryoDetail.uniformCells = data.uniformCells;\r\n                    embryoDetail.cellsMultinucleation =\r\n                        data.cellsMultinucleation;\r\n                    embryoDetail.fragmentation = data.fragmentation;\r\n                    embryoDetail.cellsCompaction = data.cellsCompaction;\r\n                    embryoDetail.asphericalForm = data.asphericalForm;\r\n                    embryoDetail.vacuolisation = data.vacuolisation;\r\n                    embryoDetail.granularCytoplasm = data.granularCytoplasm;\r\n                    embryoDetail.oocDiameter = data.oocDiameter;\r\n                    embryoDetail.thicknessZpN = data.thicknessZpN;\r\n                    embryoDetail.thicknessZpS = data.thicknessZpS;\r\n                    embryoDetail.thicknessZpE = data.thicknessZpE;\r\n                    embryoDetail.thicknessZpW = data.thicknessZpW;\r\n                    embryoDetail.incubator = data.incubator;\r\n                    embryoDetail.description = data.description;\r\n                    embryoDetail.newImage = null;\r\n                    embryoDetail.images = data.images;\r\n                    embryoDetail.abnormalZona = data.abnormalZona;\r\n                    embryoDetail.fragmentedPolarBody = data.fragmentedPolarBody;\r\n                    embryoDetail.fragmentsInPus = data.fragmentsInPus;\r\n                    embryoDetail.fate = data.fate;\r\n                    embryoDetail.straw = data.straw;\r\n                    embryoDetail.frozenDate = data.frozenDate\r\n                        ? new Date(data.frozenDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.thawingDate = data.thawingDate\r\n                        ? new Date(data.thawingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.transferDate = data.transferDate\r\n                        ? new Date(data.transferDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.discardingDate = data.discardingDate\r\n                        ? new Date(data.discardingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.assistedHatching = data.assistedHatching;\r\n                    embryoDetail.biopsy = data.biopsy;\r\n                    embryoDetail.embryologistDoingBiopsy =\r\n                        data.embryologistDoingBiopsy;\r\n\r\n                    embryoDetail.embryologistDoingFreezing = data.embryologistDoingFreezing;\r\n                    embryoDetail.embryologistDoingThawing = data.embryologistDoingThawing;\r\n                    embryoDetail.embryologistDoingTransfer = data.embryologistDoingTransfer;\r\n                    embryoDetail.embryologistDoingScoring = data.embryologistDoingScoring;\r\n\r\n                    embryoDetail.canisterNo = data.canisterNo;\r\n                    embryoDetail.cassetteId = data.cassetteId;\r\n                    embryoDetail.cassetteType = data.cassetteType;\r\n                    embryoDetail.cassetteColor = data.cassetteColor;\r\n                    embryoDetail.dewar = data.dewar;\r\n                    embryoDetail.embryoSurvived = data.embryoSurvived;\r\n                    embryoDetail.plugColor = data.plugColor;\r\n                    embryoDetail.frozenBy = data.frozenBy;\r\n                    embryoDetail.thawedBy = data.thawedBy;\r\n                    embryoDetail.location = data.location;\r\n                    embryoDetail.freezerId = data.freezerId;\r\n                    // todo\r\n                    // embryoDetail.freezer = data\r\n                })\r\n                .finally(() => {});\r\n        }\r\n    };\r\n\r\n    const onCellClick = (fertDay, fertLine) => {\r\n        setSelectedEmbryo(fertDay, fertLine);\r\n    };\r\n\r\n    const openEmbryoDetailDialog = (fertDay, fertLine) => {\r\n        setSelectedEmbryo(fertDay, fertLine);\r\n        embryoDetailDialog.value = true;\r\n    };\r\n    const closeEmbryoDetailDialog = () => (embryoDetailDialog.value = false);\r\n\r\n    const getFertilization = () => {\r\n        if (store.state.artCycle.selectedCycle == null) {\r\n            problem.value = true;\r\n            return;\r\n        }\r\n        emitter.emit(\"app:show-page-loading\", true);\r\n\r\n        store\r\n            .dispatch(\r\n                \"fertilization/getFertilization\",\r\n                store.state.artCycle.selectedCycle.cycleId\r\n            )\r\n            .then(() => {\r\n                showGrid.value = true;\r\n            })\r\n            .catch(() => {\r\n                router.push(\"/fertilization/create\");\r\n                showGrid.value = false;\r\n            })\r\n            .finally(() => {\r\n                emitter.emit(\"app:show-page-loading\", false);\r\n            });\r\n    };\r\n\r\n    return {\r\n        store,\r\n        isBornCycle,\r\n        problem,\r\n        showGrid,\r\n        embryoDetailDialog,\r\n        openEmbryoDetailDialog,\r\n        closeEmbryoDetailDialog,\r\n        getFertilization,\r\n        selectedEmbryo,\r\n        setSelectedEmbryo,\r\n        embryoDetail,\r\n        getEmbryoDetail,\r\n        onCellClick,\r\n        embryoDetailV$,\r\n        embryoDetailSubmitted,\r\n        aspirationForm\r\n    };\r\n}\r\n\r\nexport function useFertilizationGridInit() {\r\n    const store = useStore();\r\n    const fertId = ref();\r\n    const confirm = useConfirm();\r\n\r\n    const gridDesc = ref(false);\r\n    const sortToggle = () => (gridDesc.value = !gridDesc.value);\r\n    const fertilizationGrid = computed(() => {\r\n        if (gridDesc.value == true) {\r\n            return store.state.fertilization.fertilizationLines.sort(\r\n                (a, b) => b.noEmbryo - a.noEmbryo\r\n            );\r\n        } else {\r\n            return store.state.fertilization.fertilizationLines.sort(\r\n                (a, b) => a.noEmbryo - b.noEmbryo\r\n            );\r\n        }\r\n    });\r\n    const createFertilizationLineDialog = ref(false);\r\n\r\n    const fertilizationGridDays = reactive([\r\n        { day: 0, date: null, editable: false },\r\n        { day: 1, date: null, editable: false },\r\n        { day: 2, date: null, editable: false },\r\n        { day: 3, date: null, editable: false },\r\n        { day: 4, date: null, editable: false },\r\n        { day: 5, date: null, editable: false },\r\n        { day: 6, date: null, editable: false },\r\n        { day: 7, date: null, editable: false }\r\n    ]);\r\n\r\n    const selectedEmbryo = inject(\"selectedEmbryo\");\r\n    const setSelectedEmbryo = inject(\"setSelectedEmbryo\");\r\n    const embryoDetailCreateConfirmDailog = inject(\r\n        \"embryoDetailCreateConfirmDailog\"\r\n    );\r\n\r\n    const moveGridCell = (direction) => {\r\n        const days = [...fertilizationGridDays];\r\n        const lineIdx = fertilizationGrid.value.findIndex(\r\n            (item) => item.lineId == selectedEmbryo.fertLineId\r\n        );\r\n        let line = fertilizationGrid.value[lineIdx];\r\n\r\n        const dayIdx = days.findIndex((item) => item.day == selectedEmbryo.day);\r\n        let day = days[dayIdx];\r\n\r\n        switch (direction) {\r\n            case \"up\":\r\n                line = fertilizationGrid.value[lineIdx - 1];\r\n                break;\r\n            case \"down\":\r\n                line = fertilizationGrid.value[lineIdx + 1];\r\n                break;\r\n            case \"left\":\r\n                if (dayIdx != 3) {\r\n                    day = days[dayIdx - 1];\r\n                } else {\r\n                    day = days[dayIdx - 2];\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (dayIdx != 1) {\r\n                    day = days[dayIdx + 1];\r\n                } else {\r\n                    day = days[dayIdx + 2];\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"error\");\r\n        }\r\n\r\n        if (line != undefined && day != undefined) {\r\n            setSelectedEmbryo(day, line);\r\n        } else if (line == undefined && direction === \"down\") {\r\n            embryoDetailCreateConfirmDailog.value = true;\r\n        } else {\r\n            console.log(line, day);\r\n        }\r\n    };\r\n\r\n    const fillDaysRow = (val) => {\r\n        fertilizationGridDays[0].date = val.fertDate0;\r\n        fertilizationGridDays[1].date = val.fertDate1;\r\n        fertilizationGridDays[2].date = val.fertDate2;\r\n        fertilizationGridDays[3].date = val.fertDate3;\r\n        fertilizationGridDays[4].date = val.fertDate4;\r\n        fertilizationGridDays[5].date = val.fertDate5;\r\n        fertilizationGridDays[6].date = val.fertDate6;\r\n        fertilizationGridDays[7].date = val.fertDate7;\r\n        getFertilizationLines(val.fertId);\r\n        fertId.value = val.fertId;\r\n    };\r\n\r\n    const embryoDetailDialog = inject(\"embryoDetailDialog\");\r\n\r\n    const openEmbryoDetailDialog = inject(\"openEmbryoDetailDialog\");\r\n    const closeEmbryoDetailDialog = inject(\"closeEmbryoDetailDialog\");\r\n\r\n    const ferilizationLine = reactive({\r\n        lineId: 0,\r\n        fate: null,\r\n        strawId: null,\r\n        frozenDate: null,\r\n        thawingDate: null,\r\n        comment: null,\r\n        noEmbryo: null,\r\n        cycleType: null,\r\n        comment: null,\r\n        exp: false\r\n    });\r\n    const isFertilizationEdit = ref(true);\r\n\r\n    const createFetilizationRow = () => {\r\n        ferilizationLine.lineId = 0;\r\n        ferilizationLine.fate = null;\r\n        ferilizationLine.strawId = null;\r\n        ferilizationLine.frozenDate = null;\r\n        ferilizationLine.thawingDate = null;\r\n        ferilizationLine.comment = null;\r\n        ferilizationLine.exp = false;\r\n        ferilizationLine.noEmbryo =\r\n            store.state.fertilization.fertilizationLines.length + 1;\r\n        ferilizationLine.cycleType = null;\r\n\r\n        createFertilizationLineDialog.value = true;\r\n\r\n        isFertilizationEdit.value = false;\r\n    };\r\n\r\n    const checkAll = ref(false);\r\n    const checkLine = ref([]);\r\n\r\n    const editFetilizationRow = (line) => {\r\n\r\n       \r\n        ferilizationLine.lineId = line.lineId;\r\n        ferilizationLine.fate = line.fate;\r\n        ferilizationLine.strawId = line.strawId;\r\n        ferilizationLine.frozenDate = line.frozenDate\r\n            ? new Date(line.frozenDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.thawingDate = line.thawDate\r\n            ? new Date(line.thawDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.comment = line.comment;\r\n        ferilizationLine.exp = line.exp;\r\n        ferilizationLine.noEmbryo = line.noEmbryo;\r\n        ferilizationLine.cycleType = line.cycleType;\r\n\r\n        createFertilizationLineDialog.value = true;\r\n    };\r\n\r\n    const selectedLines = ref([]);\r\n\r\n    const editFetilizationRows = () => {\r\n        isFertilizationEdit.value = true;\r\n\r\n        checkLine.value.forEach((item, index) => {\r\n            if (item) {\r\n                selectedLines.value.push(fertilizationGrid.value[index]);\r\n            }\r\n        });\r\n\r\n        let line = selectedLines.value[0];\r\n\r\n        ferilizationLine.lineId = line.lineId;\r\n        ferilizationLine.fate = line.fate;\r\n        ferilizationLine.strawId = line.strawId;\r\n        ferilizationLine.frozenDate = line.frozenDate\r\n            ? new Date(line.frozenDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.thawingDate = line.thawDate\r\n            ? new Date(line.thawDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.comment = line.comment;\r\n        ferilizationLine.exp = line.exp;\r\n        ferilizationLine.noEmbryo = line.noEmbryo;\r\n        ferilizationLine.cycleType = line.cycleType;\r\n\r\n        createFertilizationLineDialog.value = true;\r\n    };\r\n\r\n    const deleteLines = () => {\r\n        confirm.require({\r\n            message: \"Are you sure you want to proceed?\",\r\n            header: \"Confirmation\",\r\n            icon: \"pi pi-exclamation-triangle\",\r\n            accept: () => {\r\n                let lineIds = [];\r\n                checkLine.value.forEach((item, index) => {\r\n                    if (item) {\r\n                        // TODO - delete goes here\r\n                        // console.log(fertilizationGrid.value[index]);\r\n                        lineIds.push(fertilizationGrid.value[index].lineId);\r\n                    }\r\n                });\r\n                store.dispatch(\r\n                    \"fertilization/deleteFertilizationLines\",\r\n                    lineIds\r\n                );\r\n            },\r\n            reject: () => {}\r\n        });\r\n    };\r\n\r\n    const getFertilizationLines = (fertId) => {\r\n        store\r\n            .dispatch(\"fertilization/getFertilizationLines\", fertId)\r\n            .then(() => {})\r\n            .catch(() => {})\r\n            .finally(() => {});\r\n    };\r\n\r\n    const showFateInGrid = (line, col) => {\r\n        if (col.day != 1) {\r\n            return line[`day${col.day + 1}Stage`] == null ? line.fate : \"\";\r\n        } else {\r\n            return line[`day${col.day + 2}Stage`] == null ? line.fate : \"\";\r\n        }\r\n    };\r\n\r\n    const getFertilization = inject(\"getFertilization\");\r\n    const updateFertilization = (item) => {\r\n        const payload = { ...store.state.fertilization.fertilization };\r\n        payload[`fertDate${item.day}`] = format(item.date, DATE_FORMAT_STRING);\r\n        store\r\n            .dispatch(\"fertilization/updateFertlization\", payload)\r\n            .then(() => {\r\n                return getFertilization();\r\n            })\r\n            .then(() => {\r\n                item.editable = false;\r\n            });\r\n    };\r\n\r\n    const onGridCellClick = inject(\"onCellClick\");\r\n\r\n    const openPdfReport = () => {\r\n        const params = {\r\n            cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n            ecId: fertId.value,\r\n            pDate: store.state.artCycle.selectedCycle.cycleDate\r\n        };\r\n        let url = buildPdfUrl(\"Fertilization_Report\", params);\r\n        window.open(url);\r\n    };\r\n\r\n    return {\r\n        store,\r\n        fertilizationGrid,\r\n        gridDesc,\r\n        sortToggle,\r\n        createFetilizationRow,\r\n        createFertilizationLineDialog,\r\n        editFetilizationRow,\r\n        ferilizationLine,\r\n        fertilizationGridDays,\r\n        getFertilizationLines,\r\n        moveGridCell,\r\n        embryoDetailDialog,\r\n        openEmbryoDetailDialog,\r\n        closeEmbryoDetailDialog,\r\n        fillDaysRow,\r\n        showFateInGrid,\r\n        updateFertilization,\r\n        onGridCellClick,\r\n        selectedEmbryo,\r\n        openPdfReport,\r\n        checkAll,\r\n        checkLine,\r\n        deleteLines,\r\n        editFetilizationRows,\r\n        isFertilizationEdit,\r\n        selectedLines\r\n    };\r\n}\r\n\r\nexport function useEmbryoDetailDialogInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const embryoDetailDialog = inject(\"embryoDetailDialog\");\r\n    const closeEmbryoDetailDialog = inject(\"closeEmbryoDetailDialog\");\r\n\r\n    const selectedEmbryo = inject(\"selectedEmbryo\");\r\n\r\n    const embryoDetail = inject(\"embryoDetail\");\r\n\r\n    const selectedFreezer = ref(null);\r\n\r\n    const loading = ref(false);\r\n\r\n    const cyroStorage = reactive({\r\n        source: null,\r\n        canisterNo: null,\r\n        cassetteId: null,\r\n        cassetteType: \"Standard\",\r\n        cassetteColor: null,\r\n        dewar: null,\r\n        embryoSurvived: null,\r\n        embryoDevelopment: null,\r\n        fertilizationId: null,\r\n        freezDate: null,\r\n        strawId: null,\r\n        plugColor: null,\r\n        thawDate: null,\r\n        cycleId: null,\r\n        patientId: null,\r\n        //  fate: null,\r\n        day7Stage: null,\r\n        day7Grade: null,\r\n        frozenBy: null,\r\n        thawedBy: null,\r\n        freezerId: null,\r\n        location: null\r\n    });\r\n\r\n    let rules = {\r\n        canisterNo: { required },\r\n        cassetteId: { required },\r\n        cassetteType: { required },\r\n        cassetteColor: { required },\r\n        strawId: { required },\r\n        plugColor: { required }\r\n    };\r\n    const cyroStorageV$ = useVuelidate(rules, cyroStorage);\r\n    const cyroStorageSubmitted = ref(false);\r\n\r\n    const embryoDetailV$ = inject(\"embryoDetailV$\");\r\n    const embryoDetailSubmitted = inject(\"embryoDetailSubmitted\");\r\n\r\n    const saveEmbryoDetail = () => {\r\n        // if (\r\n        //     embryoDetailV$.value.stage.$invalid ||\r\n        //     (embryoDetailV$.value.frozenDate.$invalid &&\r\n        //         embryoDetailV$.value.thawingDate.$invalid)\r\n        // ) {\r\n        //     embryoDetailSubmitted.value = true;\r\n        //     return;\r\n        // }\r\n\r\n        if (\r\n            embryoDetail.fate == \"Transfer\"\r\n            // || (embryoDetail.fate == \"Discard\" && embryoDetail.stage != \"Arrest\")\r\n        ) {\r\n            if (embryoDetailV$.value.straw.$invalid) {\r\n                // console.log(selectedEmbryo);\r\n                embryoDetailSubmitted.value = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (embryoDetail.fate == \"Frozen\" || embryoDetail.fate == \"Thawed\") {\r\n            if (cyroStorageV$.value.$invalid) {\r\n                cyroStorageSubmitted.value = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        //console.log([embryoDetail])\r\n        //console.log([cyroStorage])\r\n\r\n        embryoDetail.canisterNo = cyroStorage.canisterNo;\r\n        embryoDetail.cassetteId = cyroStorage.cassetteId;\r\n        embryoDetail.cassetteColor = cyroStorage.cassetteColor;\r\n        embryoDetail.cassetteType = cyroStorage.cassetteType;\r\n\r\n        embryoDetail.dewar = cyroStorage.dewar;\r\n        embryoDetail.embryoDevelopment = cyroStorage.embryoDevelopment;\r\n        embryoDetail.embryoSurvived = cyroStorage.embryoSurvived;\r\n        embryoDetail.frozenBy = cyroStorage.frozenBy;\r\n        embryoDetail.plugColor = cyroStorage.plugColor;\r\n        embryoDetail.straw = cyroStorage.strawId;\r\n        embryoDetail.thawedBy = cyroStorage.thawedBy;\r\n\r\n        embryoDetail.freezerId = cyroStorage.freezerId;\r\n        embryoDetail.location = cyroStorage.location;\r\n\r\n        const formData = {\r\n            ...embryoDetail,\r\n            //...cyroStorage,\r\n            fertLineId: selectedEmbryo.fertLineId,\r\n            dayNo: selectedEmbryo.day,\r\n            cultureDay: selectedEmbryo.date,\r\n            oocId: selectedEmbryo.occId,\r\n            embryoAge: selectedEmbryo.day,\r\n            frozenDate: embryoDetail.frozenDate\r\n                ? format(embryoDetail.frozenDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            thawingDate: embryoDetail.thawingDate\r\n                ? format(embryoDetail.thawingDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            discardingDate: embryoDetail.discardingDate\r\n                ? format(embryoDetail.discardingDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            transferDate: embryoDetail.transferDate\r\n                ? format(embryoDetail.transferDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            straw: cyroStorage.strawId,\r\n            frozenBy: cyroStorage.frozenBy,\r\n            thawedBy: cyroStorage.thawedBy,\r\n            freezerId: cyroStorage.freezerId,\r\n            patientId: store.state.artCycle.selectedCycle.patientId,\r\n            location: cyroStorage.location\r\n        };\r\n\r\n        loading.value = true;\r\n\r\n        store\r\n            .dispatch(\"fertilization/saveFertlizationEmbryoDetail\", formData)\r\n            .then((data) => {\r\n                embryoDetail.newImage = null;\r\n                embryoDetail.occId = data.oocId;\r\n                selectedEmbryo.occId = data.oocId;\r\n                embryoDetail.images.push(data.image);\r\n\r\n                if (data.autoFreezId > 0) {\r\n                    // return store.dispatch(\"cryoStorage/editFreezingLine\", {\r\n                    //     ...cyroStorage,\r\n                    //     freezDate: formData.frozenDate,\r\n                    //     thawDate: formData.thawDate,\r\n                    //     cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n                    //     patientId: store.state.artCycle.selectedCycle.patientId,\r\n                    //     fertilizationId: selectedEmbryo.fertId,\r\n                    //     autoFreezId: data.autoFreezId\r\n                    // });\r\n                } else {\r\n                    toast.add({\r\n                        severity: \"success\",\r\n                        summary: \"Saved succefully\",\r\n                        life: 3000\r\n                    });\r\n                }\r\n            })\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Saved succefully\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n\r\n                let errorMsg = \"Error: PLease check log!\";\r\n\r\n                if(err.frResp != undefined) {\r\n                    if(err.frResp[0] != undefined && err.frResp[0].msg != undefined) {\r\n                        errorMsg = \"Error: \" + err.frResp[0].msg;\r\n                    }\r\n                }\r\n\r\n                selectedEmbryo.errorMsg = errorMsg;\r\n\r\n            })\r\n            .finally(() => {\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const getEmbryoDetail = inject(\"getEmbryoDetail\");\r\n\r\n    return {\r\n        embryoDetailDialog,\r\n        closeEmbryoDetailDialog,\r\n        embryoDetail,\r\n        saveEmbryoDetail,\r\n        selectedEmbryo,\r\n        selectedFreezer,\r\n        getEmbryoDetail,\r\n        loading,\r\n        cyroStorage,\r\n        cyroStorageV$,\r\n        cyroStorageSubmitted\r\n    };\r\n}\r\n\r\nexport function useTreeViewInit() {\r\n    const store = useStore();\r\n    const embryoDetail = inject(\"embryoDetail\");\r\n    const treeViewData = reactive([\r\n        {\r\n            key: \"stage\",\r\n            data: {\r\n                name: \"Stage\",\r\n                value: computed(() => embryoDetail.stage)\r\n            }\r\n        },\r\n        {\r\n            key: \"embryoCellD\",\r\n            data: {\r\n                name: \"Embryo Cell [d]\",\r\n                value: computed(() => {\r\n                    return embryoDetail.oocId != 0 ? embryoDetail.oocId : \"\";\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"cultureDay\",\r\n            data: {\r\n                name: \"Culture Day\",\r\n                value: computed(() => embryoDetail.cultureDay)\r\n            }\r\n        },\r\n        {\r\n            key: \"embryoAge\",\r\n            data: {\r\n                name: \"Embryo Age\",\r\n                value: computed(() => embryoDetail.embryoAge)\r\n            }\r\n        },\r\n        {\r\n            key: \"score\",\r\n            data: {\r\n                name: \"Score\",\r\n                value: computed(() => embryoDetail.score)\r\n            }\r\n        },\r\n        {\r\n            key: \"scoreTime\",\r\n            data: {\r\n                name: \"Score Time\",\r\n                value: computed(() => embryoDetail.time)\r\n            }\r\n        },\r\n        {\r\n            key: \"fate\",\r\n            data: {\r\n                name: \"Fate\",\r\n                value: computed(() => embryoDetail.fate)\r\n            }\r\n        },\r\n        {\r\n            key: \"physician\",\r\n            data: {\r\n                name: \"Physician\",\r\n                value: computed(() => {\r\n                    let index = store.state.provider.providers.findIndex(\r\n                        (item) => item.id == embryoDetail.clinician\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.provider.providers[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologist\",\r\n            data: {\r\n                name: \"Embryologist doing ICSI/IVF\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) => item.id == embryoDetail.embryologist\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistBiopsy\",\r\n            data: {\r\n                name: \"Embryologist doing biopsy\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingBiopsy\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistFreezing\",\r\n            data: {\r\n                name: \"Embryologist doing Freezing\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingFreezing\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistThawing\",\r\n            data: {\r\n                name: \"Embryologist doing Thawing\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingThawing\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistTransfer\",\r\n            data: {\r\n                name: \"Embryologist doing Transfer\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingTransfer\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistScoring\",\r\n            data: {\r\n                name: \"Embryologist doing Scoring\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingScoring\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        // {\r\n        //     key: \"note\",\r\n        //     data: {\r\n        //         name: \"Note\",\r\n        //         value: null\r\n        //     }\r\n        // },\r\n        {\r\n            key: \"incubator\",\r\n            data: {\r\n                name: \"Incubator\",\r\n                value: computed(() => embryoDetail.incubator)\r\n            }\r\n        }\r\n    ]);\r\n\r\n    const image = computed(() => {\r\n        if (embryoDetail.images.length == 0) {\r\n            return null;\r\n        } else {\r\n            let img = embryoDetail.images[embryoDetail.images.length - 1];\r\n            return `${ORIGIN}/${img}`;\r\n        }\r\n    });\r\n\r\n    const openImage = () => {\r\n        window.open(\r\n            image.value,\r\n            \"DescriptiveWindowName\",\r\n            \"left=100,top=100,width=1200,height=800\"\r\n        );\r\n    };\r\n\r\n    return { treeViewData, image, openImage };\r\n}\r\n\r\nexport function useCraeteFertilizationFromInit() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    const selectedCycle = computed(() => store.state.artCycle.selectedCycle);\r\n\r\n    const form = reactive({\r\n        fertDate0: null,\r\n        fertTime0: null,\r\n        fertInit0: null,\r\n\r\n        fertDate1: null,\r\n        fertTime1: null,\r\n        fertInit1: null,\r\n\r\n        fertDate2: null,\r\n        fertTime2: null,\r\n        fertInit2: null,\r\n\r\n        fertDate3: null,\r\n        fertTime3: null,\r\n        fertInit3: null,\r\n\r\n        fertDate5: null,\r\n        fertTime5: null,\r\n        fertInit5: null,\r\n\r\n        fertDate6: null,\r\n        fertTime6: null,\r\n        fertInit6: null,\r\n\r\n        fertDate7: null,\r\n        fertTime7: null,\r\n        fertInit7: null,\r\n\r\n        comment: null,\r\n        expComment: null\r\n    });\r\n\r\n    const rules = {\r\n        fertDate0: { required },\r\n        fertDate1: { required },\r\n        fertDate2: { required },\r\n        fertDate3: { required },\r\n        fertDate4: { required },\r\n        fertDate5: { required },\r\n        fertDate6: { required },\r\n        fertDate7: { required }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n    const submitted = ref(false);\r\n\r\n    const createFertilization = () => {\r\n        if (store.state.artCycle.selectedCycle.cycleType !== \"FET\") {\r\n            submitted.value = true;\r\n        }\r\n        if (\r\n            v$.value.$invalid &&\r\n            store.state.artCycle.selectedCycle.cycleType !== \"FET\"\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        let formData = {\r\n            cycleId: selectedCycle.value.cycleId,\r\n            patientId: selectedCycle.value.patientId,\r\n            ...form,\r\n            fertDate0: form.fertDate0\r\n                ? format(form.fertDate0, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate1: form.fertDate1\r\n                ? format(form.fertDate1, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate2: form.fertDate2\r\n                ? format(form.fertDate2, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate3: form.fertDate3\r\n                ? format(form.fertDate3, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate4: form.fertDate4\r\n                ? format(form.fertDate4, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate5: form.fertDate5\r\n                ? format(form.fertDate5, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate6: form.fertDate6\r\n                ? format(form.fertDate6, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate7: form.fertDate7\r\n                ? format(form.fertDate7, DATE_FORMAT_STRING)\r\n                : null\r\n        };\r\n        store\r\n            .dispatch(\"fertilization/createFertlization\", formData)\r\n            .then(() => {\r\n                router.push(\"/fertilization\");\r\n            })\r\n            .catch(() => {})\r\n            .finally(() => {});\r\n    };\r\n\r\n    const populateDates = (newValue) => {\r\n        if (!form.fertDate1) {\r\n            form.fertDate1 = addDays(form.fertDate0, 1);\r\n        }\r\n        if (!form.fertDate2) {\r\n            form.fertDate2 = addDays(form.fertDate0, 2);\r\n        }\r\n        if (!form.fertDate3) {\r\n            form.fertDate3 = addDays(form.fertDate0, 3);\r\n        }\r\n        if (!form.fertDate4) {\r\n            form.fertDate4 = addDays(form.fertDate0, 4);\r\n        }\r\n        if (!form.fertDate5) {\r\n            form.fertDate5 = addDays(form.fertDate0, 5);\r\n        }\r\n        if (!form.fertDate6) {\r\n            form.fertDate6 = addDays(form.fertDate0, 6);\r\n        }\r\n        if (!form.fertDate7) {\r\n            form.fertDate7 = addDays(form.fertDate0, 7);\r\n        }\r\n    };\r\n\r\n    return { form, createFertilization, populateDates, submitted, v$ };\r\n}\r\n\r\nexport function useFertilizationLineCreateDialog() {\r\n    const store = useStore();\r\n\r\n    const createFertilizationLineDialog = inject(\r\n        \"createFertilizationLineDialog\"\r\n    );\r\n\r\n    const loading = ref(false);\r\n    const form = inject(\"ferilizationLine\");\r\n\r\n    const isEdit = inject(\"isFertilizationEdit\");\r\n    const selectedLines = inject(\"selectedLines\");\r\n\r\n    const fateOptions = reactive([\r\n        \"Frozen\",\r\n        \"Discard\",\r\n        \"Culture\",\r\n        \"Donate\",\r\n        \"Thawed\",\r\n        \"Transfer\",\r\n        \"Sent Out\"\r\n    ]);\r\n\r\n    const cycleTypeOptions = computed(() =>\r\n        store.state.fertilization.cycleTypes.map((item) => item.value)\r\n    );\r\n\r\n    const save = () => {\r\n        let fertilization = store.state.fertilization.fertilization;\r\n        const formData = {\r\n            ...form,\r\n            lineId: form.lineId,\r\n            fertilizationId: fertilization.fertId,\r\n            cycleId: fertilization.cycleId,\r\n            noEmbryo: form.noEmbryo,\r\n            frozenDate: form.frozenDate\r\n                ? format(form.frozenDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            thawDate: form.thawingDate\r\n                ? format(form.thawingDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            comment: form.comment,\r\n            exp: form.exp\r\n        };\r\n\r\n        if (isEdit.value) {\r\n            formData.lineIds = selectedLines.value.map((item) => item.lineId);\r\n            store\r\n                .dispatch(\"fertilization/editFertilizationLines\", formData)\r\n                .then(() => {})\r\n                .catch(() => {\r\n                    console.log(\"err\");\r\n                })\r\n                .finally(() => {\r\n                    createFertilizationLineDialog.value = false;\r\n                    loading.value = false;\r\n                });\r\n            return;\r\n        }\r\n\r\n        loading.value = true;\r\n        store\r\n            .dispatch(\"fertilization/createFertilizationLine\", formData)\r\n            .then(() => {})\r\n            .catch(() => {\r\n                console.log(\"err\");\r\n            })\r\n            .finally(() => {\r\n                createFertilizationLineDialog.value = false;\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const deleteLoading = ref(false);\r\n    const deleteFertilizationLine = () => {\r\n        deleteLoading.value = true;\r\n        store\r\n            .dispatch(\"fertilization/deleteFertilizationLine\", {\r\n                lineId: form.lineId\r\n            })\r\n            .then(() => {\r\n                console.log(\"in then\");\r\n            })\r\n            .catch(() => {})\r\n            .finally(() => {\r\n                createFertilizationLineDialog.value = false;\r\n                deleteLoading.value = false;\r\n            });\r\n    };\r\n\r\n    return {\r\n        form,\r\n        fateOptions,\r\n        save,\r\n        loading,\r\n        createFertilizationLineDialog,\r\n        cycleTypeOptions,\r\n        deleteFertilizationLine,\r\n        deleteLoading,\r\n        isEdit,\r\n        selectedLines\r\n    };\r\n}\r\n\r\nconst primaryCycleValidator = (cycleType, otherPatient) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (otherPatient.value != null) {\r\n            return true;\r\n        }\r\n        if (cycleType.value == \"FET\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useEbmryoInfo() {\r\n    const store = useStore();\r\n    const form = reactive({\r\n        primaryCycleId: null,\r\n        otherPatient: null,\r\n        otherPrimaryCycleId: null,\r\n        fromOutside: false\r\n    });\r\n\r\n    const rules = {\r\n        primaryCycleId: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required If cycle type is FET\",\r\n                primaryCycleValidator(\r\n                    computed(\r\n                        () => store.state.artCycle.selectedCycle.cycleType\r\n                    ),\r\n                    computed(() => form.otherPrimaryCycleId)\r\n                )\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const primaryCycles = computed(\r\n        () => store.state.fertilization.primaryCycles\r\n    );\r\n\r\n    const filteredPatient = ref();\r\n    const patientFilter = (event) => {\r\n        Service.searchDemographic({\r\n            term: event.query.trim(),\r\n            sex: \"F\".toLowerCase()\r\n        }).then((resp) => {\r\n            filteredPatient.value = resp.data;\r\n        });\r\n    };\r\n\r\n    const otherPrimaryCycles = ref([]);\r\n    const getOtherPrimaryCycles = async () => {\r\n        const data = await getPrimaryCyclesService(\r\n            form.otherPatient.demographicNo,\r\n            store.state.artCycle.selectedCycle.cycleDate\r\n        );\r\n        if (data.length > 0) {\r\n            otherPrimaryCycles.value = data.map((item) => ({\r\n                ...item,\r\n                label: `${item.cycleId} (${item.cycleDate})`\r\n            }));\r\n        }\r\n    };\r\n\r\n    const emptyEbmryoAssignedTo = () => {\r\n        form.primaryCycleId = null;\r\n    };\r\n\r\n    const getDefaultFreshEbmryo = (cycelId) => {\r\n        let patientId = store.state.artCycle.patient.id;\r\n\r\n        if (form.otherPatient != null) {\r\n            patientId = form.otherPatient.demographicNo;\r\n        }\r\n\r\n        emitter.emit(\"embryo-info:assigned-to-change\", {\r\n            cycleId: cycelId,\r\n            patientId: patientId\r\n        });\r\n    };\r\n\r\n    const onEmbyroAssingedToChageHandler = (event) => {\r\n        getDefaultFreshEbmryo(event.value);\r\n        emptyDonor();\r\n    };\r\n\r\n    const onOtherCycleIdChangeHandler = (event) => {\r\n        getDefaultFreshEbmryo(event.value);\r\n        emptyEbmryoAssignedTo();\r\n    };\r\n\r\n    const emptyDonor = (event) => {\r\n        // getDefaultFreshEbmryo(event.value);\r\n        form.otherPatient = null;\r\n        form.otherPrimaryCycleId = null;\r\n    };\r\n\r\n    const save = () => {\r\n        let payload = {\r\n            ...form,\r\n            patientId: store.state.artCycle.patient.id,\r\n            cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n            otherPatientId: form.otherPatient\r\n                ? form.otherPatient.demographicNo\r\n                : null,\r\n            fromOutside: form.fromOutside ? 1 : 0\r\n        };\r\n\r\n        delete payload.otherPatient;\r\n\r\n        updatePrimaryCycle(payload).then((resp) => {\r\n            if (resp.status == \"success\") {\r\n                console.log(\"success\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        save,\r\n        primaryCycles,\r\n        filteredPatient,\r\n        patientFilter,\r\n        otherPrimaryCycles,\r\n        getOtherPrimaryCycles,\r\n        emptyEbmryoAssignedTo,\r\n        onEmbyroAssingedToChageHandler,\r\n        onOtherCycleIdChangeHandler\r\n    };\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return String(x) > String(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aFunction(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort.call(array) : nativeSort.call(array, comparefn);\n\n    var items = [];\n    var arrayLength = toLength(array.length);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) items.push(array[index]);\n    }\n\n    items = internalSort(items, getSortCompare(comparefn));\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","// TODO: use something more complex like timsort?\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    mergeSort(array.slice(0, middle), comparefn),\n    mergeSort(array.slice(middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n  var result = [];\n\n  while (lindex < llength || rindex < rlength) {\n    if (lindex < llength && rindex < rlength) {\n      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);\n    } else {\n      result.push(lindex < llength ? left[lindex++] : right[rindex++]);\n    }\n  } return result;\n};\n\nmodule.exports = mergeSort;\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n"],"sourceRoot":""}