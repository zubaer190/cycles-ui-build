{"version":3,"sources":["webpack:///./src/composable/born.js"],"names":["useComplicationFormInit","toast","useToast","store","useStore","form","reactive","complications","spermTooLowCount","treatmentOutcome","typeOfPregnancy","fetalSacsUS","fetalheartsUS","chorionicity","electiveFetalReduction","loading","ref","computed","state","born","fillForm","data","save","value","getters","dispatch","then","add","severity","summary","detail","life","catch","err","finally","complicationOptions","options","treatmentOutcomeOptions","typeOfPregnancyOptions","chorionicityOptions","electiveFetalReductionOptions","usePregnancyOutcomeForm","pregnancyBirthOutcome","newbornDateBirth","pregnancyLossDate","babiesborn","gestationalWeeks","gestationalDays","format","Date","DATE_FORMAT_STRING","pregnancyBirthOutcomeOptions","useOocyteCollectionInit","oocyteCollectionDate","oocyteThawDate","collectionDateUnknown","oocyteFreezeID1Thawed","oocyteFreezeID2Thawed","retrievedOrThawed","oocyteFreezeID","donorProviderIDCode","donorProviderSource","oocyteFreezeDate","oocyteOrigin","donorProviderstatus","oocyteCryoMethod","spermOrigin","ageSpermProvider","spermDonorID","spermDonorStatus","spermMotility","spermDonorBank","spermSource","semenVolume","spermCount","oocyteCollections","oocyteOriginOptions","donorProviderStatusOptions","oocyteCryoMethodOptions","spermOriginOptions","useBornCycleMonitoringInit","obstetricalHistory","priorBirths","priorPregnancies","priorFreshCyclesStarted","priorETsOwnOocytes","priorETsDonorOocytes","provincialFundingForThisCycle","typeOfFunding","otherSpecify","originOfSimulatedCycle","primaryCycle","reasonsForTreatmentCycle","reasonsForMaleFactor","ageOfOocyteAge","hightOfOocyteHight","weightOfOocyte","bmiOfOocyte","fshDayOocyte","afcOocyte","ngPMOOocyte","typeOfStimulationProtocol","otherTypeOfStiProtocolDes","medicationForCOS","otherMedicationCOS","otherAdjuvantMediDescription","triggerMedication","otheTriMedDesc","noOfDaysGonadotropins","totalDoseFSH","totalDoseLH","ofFolliclesLs15mm","ofFolliclesGt15mm","estradiolLevel","progesterOneLevel","endometrialThicknessFreshCycle","cycleCancelledBeforeRetrieval","reasonCancelled","otherReasonCanDesc","useObstetricalHistoryFormInit","priorPregnanciesOptions","priorBirthsOptions","priorFreshCyclesStartedOptions","priorETsOwnOocytesOptions","priorETsDonorOocytesOptions","typeOfFundingOptions","reasonsForMaleFactorOptions","reasonsForTreatmentCycleOptions","useOocyteProviderFormInit","typeOfStimulationProtocolOptions","triggerMedicationOptions","medicationForCOSOptions","reasonCancelledOptions","useBornFertilizationInit","embryology","inseminationMethod","oocytesNotUsed","reasonsForNoUse","embryoStageFreezing","inseminatedInjected","embryoFreezeID1","embryoFreezeID2","embryoFreezeID3","embryoFreezeID4","normalFertilization2PN","embryoFreezeDate1","embryoFreezeDate2","embryoFreezeDate3","embryoFreezeDate4","ofMII","utilizableEmbryos","embryosCryopreserved","reasonEmbryoCryopreservation","embryoFreshCryoMethod","embryoFreezeID1Thawed","embryoFreezeID2Thawed","embryoFreezeID3Thawed","embryoFreezeID4Thawed","embryosThawed","utilizableAfterThaw","embryoStageThawing","embryoTransfer","reasonsNoET","preparationUterineLining","endometrialThickness","transferDate","dateETAdjusted","dayET","ultrasoundGuidedET","assistedZonaHatching","embryosTransferred","electiveTransfeESET","sourceTransferredEmbryos","transferInseminationMethod","preImplGeneticTesting","charTransferredEmbryo","numberThaws","sitePGTembryo","gestationalCarrierSurrogate","gestationalCarrierSurrogateChart","heightRecipient","weightRecipient","recipientBMI","useBornEmbryologyInit","inject","isIVFCycle","isFETCycle","inseminationMethodOptions","reasonsForNoUseOptions","embryoStageFreezingOptions","reasonEmbryoCryopreservationOptions","embryoFreshCryoMethodOptions","embryoStageThawingOptions","embryoTransferOptions","useBornEmbryoTransferInit","reasonsNoETOptions","preparationUterineLiningOptions","assistedZonaHatchingOptions","sourceTransferredEmbryosOptions","transferInseminationMethodOptions","charTransferredEmbryoOptions","numberThawsOptions","sitePGTembryoOptions","useBornFreshEmbryoInit","useBronFrozenEmbyoInit","embryoFrozenCryoMethod"],"mappings":"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","file":"js/chunk-2d0d30d8.7a9e9871.js","sourcesContent":["import { DATE_FORMAT_STRING } from \"@/config\";\nimport { emitter } from \"@/event-bus\";\nimport format from \"date-fns/format\";\nimport { useToast } from \"primevue/usetoast\";\nimport { computed, inject, reactive, ref } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport function useComplicationFormInit() {\n    const toast = useToast();\n    const store = useStore();\n    const form = reactive({\n        complications: null,\n        spermTooLowCount: null,\n        treatmentOutcome: null,\n        typeOfPregnancy: null,\n        fetalSacsUS: null,\n        fetalheartsUS: null,\n        chorionicity: null,\n        electiveFetalReduction: null\n    });\n    const loading = ref(false);\n    const complications = computed(() => store.state.born.complications);\n\n    const fillForm = (data) => {\n        form.complications = data.complications;\n        form.spermTooLowCount = data.spermTooLowCount;\n        form.treatmentOutcome = data.treatmentOutcome;\n        form.typeOfPregnancy = data.typeOfPregnancy;\n        form.fetalSacsUS = data.fetalSacsUS;\n        form.fetalheartsUS = data.fetalheartsUS;\n        form.chorionicity = data.chorionicity;\n        form.electiveFetalReduction = data.electiveFetalReduction;\n    };\n\n    const save = () => {\n        loading.value = true;\n        const data = {\n            ...form,\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"]\n        };\n\n        store\n            .dispatch(\"born/updateComplication\", data)\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            })\n            .catch((err) => {})\n            .finally(() => (loading.value = false));\n    };\n\n    const complicationOptions = computed(\n        () => store.state.options.complications\n    );\n    const treatmentOutcomeOptions = computed(\n        () => store.state.options.treatmentOutcome\n    );\n    const typeOfPregnancyOptions = computed(\n        () => store.state.options.typeOfPregnancy\n    );\n    const chorionicityOptions = computed(\n        () => store.state.options.chorionicity\n    );\n    const electiveFetalReductionOptions = computed(\n        () => store.state.options.electiveFetalReduction\n    );\n\n    return {\n        store,\n        form,\n        save,\n        complications,\n        fillForm,\n        loading,\n        complicationOptions,\n        treatmentOutcomeOptions,\n        typeOfPregnancyOptions,\n        chorionicityOptions,\n        electiveFetalReductionOptions\n    };\n}\n\nexport function usePregnancyOutcomeForm() {\n    const store = useStore();\n    const toast = useToast();\n    const form = reactive({\n        pregnancyBirthOutcome: null,\n        newbornDateBirth: null,\n        pregnancyLossDate: null,\n        babiesborn: null,\n        gestationalWeeks: null,\n        gestationalDays: null\n    });\n    const loading = ref(false);\n\n    const fillForm = (data) => {\n        form.pregnancyBirthOutcome = data.pregnancyBirthOutcome;\n        form.newbornDateBirth = data.newbornDateBirth;\n        form.pregnancyLossDate = data.pregnancyLossDate;\n        form.babiesborn = data.babiesborn;\n        form.gestationalWeeks = data.gestationalWeeks;\n        form.gestationalDays = data.gestationalDays;\n    };\n\n    const save = () => {\n        loading.value = true;\n        const data = {\n            ...form,\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\n            newbornDateBirth: format(\n                new Date(form.newbornDateBirth),\n                DATE_FORMAT_STRING\n            ),\n            pregnancyLossDate: format(\n                new Date(form.pregnancyLossDate),\n                DATE_FORMAT_STRING\n            )\n        };\n\n        store\n            .dispatch(\"born/updatePregnancyOutcome\", data)\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            })\n            .catch((err) => {})\n            .finally(() => (loading.value = false));\n    };\n\n    const pregnancyBirthOutcomeOptions = computed(\n        () => store.state.options.pregnancyBirthOutcome\n    );\n\n    return {\n        store,\n        form,\n        pregnancyBirthOutcomeOptions,\n        loading,\n        fillForm,\n        save\n    };\n}\n\nexport function useOocyteCollectionInit() {\n    const toast = useToast();\n    const store = useStore();\n    const form = reactive({\n        oocyteCollectionDate: null,\n        oocyteThawDate: null,\n        collectionDateUnknown: null,\n        oocyteFreezeID1Thawed: null,\n        oocyteFreezeID2Thawed: null,\n        retrievedOrThawed: null,\n        oocyteFreezeID: null,\n        donorProviderIDCode: null,\n        donorProviderSource: null,\n        oocyteFreezeDate: null,\n        oocyteOrigin: null,\n        donorProviderstatus: null,\n        oocyteCryoMethod: null,\n        spermOrigin: null,\n        ageSpermProvider: null,\n        spermDonorID: null,\n        spermDonorStatus: null,\n        spermMotility: null,\n        spermTooLowCount: null,\n        spermDonorBank: null,\n        spermSource: null,\n        semenVolume: null,\n        spermCount: null\n    });\n    const oocyteCollections = computed(\n        () => store.state.born.oocyteCollections\n    );\n\n    const loading = ref(false);\n\n    const save = () => {\n        loading.value = true;\n        const data = {\n            ...form,\n            oocyteCollectionDate: format(\n                new Date(form.oocyteCollectionDate),\n                DATE_FORMAT_STRING\n            ),\n            oocyteThawDate: format(\n                new Date(form.oocyteThawDate),\n                DATE_FORMAT_STRING\n            ),\n            oocyteFreezeDate: format(\n                new Date(form.oocyteFreezeDate),\n                DATE_FORMAT_STRING\n            ),\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"]\n        };\n\n        store\n            .dispatch(\"born/updateOocyteCollection\", data)\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            })\n            .finally(() => (loading.value = false));\n    };\n\n    const fillForm = (data) => {\n        form.oocyteCollectionDate = data.oocyteCollectionDate;\n        form.oocyteThawDate = data.oocyteThawDate;\n        form.collectionDateUnknown = data.collectionDateUnknown;\n        form.oocyteFreezeID1Thawed = data.oocyteFreezeID1Thawed;\n        form.oocyteFreezeID2Thawed = data.oocyteFreezeID2Thawed;\n        form.retrievedOrThawed = data.retrievedOrThawed;\n        form.oocyteFreezeID = data.oocyteFreezeID;\n        form.donorProviderIDCode = data.donorProviderIDCode;\n        form.donorProviderSource = data.donorProviderSource;\n        form.oocyteFreezeDate = data.oocyteFreezeDate;\n        form.oocyteOrigin = data.oocyteOrigin;\n        form.donorProviderstatus = data.donorProviderstatus;\n        form.oocyteCryoMethod = data.oocyteCryoMethod;\n        form.spermOrigin = data.spermOrigin;\n        form.ageSpermProvider = data.ageSpermProvider;\n        form.spermDonorID = data.spermDonorID;\n        form.spermDonorStatus = data.spermDonorStatus;\n        form.spermMotility = data.spermMotility;\n        form.spermTooLowCount = data.spermTooLowCount;\n        form.spermDonorBank = data.spermDonorBank;\n        form.spermSource = data.spermSource;\n        form.semenVolume = data.semenVolume;\n        form.spermCount = data.spermCount;\n    };\n\n    const oocyteOriginOptions = store.getters[\"utils/getOocyteOriginOptions\"];\n    const donorProviderStatusOptions =\n        store.getters[\"utils/getDonorProviderstatusOptions\"];\n    const oocyteCryoMethodOptions =\n        store.getters[\"utils/getOocyteCryoMethodOptions\"];\n    const spermOriginOptions = store.getters[\"utils/getSpermOriginOptions\"];\n\n    return {\n        store,\n        form,\n        loading,\n        save,\n        fillForm,\n        oocyteCollections,\n        oocyteOriginOptions,\n        donorProviderStatusOptions,\n        oocyteCryoMethodOptions,\n        spermOriginOptions\n    };\n}\n\nexport function useBornCycleMonitoringInit() {\n    const toast = useToast();\n    const store = useStore();\n    const obstetricalHistory = computed(\n        () => store.state.born.obstetricalHistory\n    );\n    const form = reactive({\n        priorBirths: null,\n        priorPregnancies: null,\n        priorFreshCyclesStarted: null,\n        priorETsOwnOocytes: null,\n        priorETsDonorOocytes: null,\n        provincialFundingForThisCycle: null,\n        typeOfFunding: null,\n        otherSpecify: null,\n        originOfSimulatedCycle: null,\n        primaryCycle: null,\n        reasonsForTreatmentCycle: null,\n        reasonsForMaleFactor: null,\n        ageOfOocyteAge: null,\n        hightOfOocyteHight: null,\n        weightOfOocyte: null,\n        bmiOfOocyte: null,\n        fshDayOocyte: null,\n        afcOocyte: null,\n        ngPMOOocyte: null,\n        typeOfStimulationProtocol: null,\n        otherTypeOfStiProtocolDes: null,\n        medicationForCOS: null,\n        otherMedicationCOS: null,\n        otherAdjuvantMediDescription: null,\n        triggerMedication: null,\n        otheTriMedDesc: null,\n        noOfDaysGonadotropins: null,\n        totalDoseFSH: null,\n        totalDoseLH: null,\n        ofFolliclesLs15mm: null,\n        ofFolliclesGt15mm: null,\n        estradiolLevel: null,\n        progesterOneLevel: null,\n        endometrialThicknessFreshCycle: null,\n        cycleCancelledBeforeRetrieval: null,\n        reasonCancelled: null,\n        otherReasonCanDesc: null\n    });\n\n    const save = () => {\n        store\n            .dispatch(\"born/updateObstetricalHistory\", {\n                ...form,\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"]\n            })\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            });\n    };\n\n    const fillForm = ({\n        priorBirths,\n        priorPregnancies,\n        priorFreshCyclesStarted,\n        priorETsOwnOocytes,\n        priorETsDonorOocytes,\n        provincialFundingForThisCycle,\n        typeOfFunding,\n        otherSpecify,\n        originOfSimulatedCycle,\n        primaryCycle,\n        reasonsForTreatmentCycle,\n        reasonsForMaleFactor,\n        ageOfOocyteAge,\n        hightOfOocyteHight,\n        weightOfOocyte,\n        bmiOfOocyte,\n        fshDayOocyte,\n        afcOocyte,\n        ngPMOOocyte,\n        typeOfStimulationProtocol,\n        otherTypeOfStiProtocolDes,\n        medicationForCOS,\n        otherMedicationCOS,\n        otherAdjuvantMediDescription,\n        triggerMedication,\n        otheTriMedDesc,\n        noOfDaysGonadotropins,\n        totalDoseFSH,\n        totalDoseLH,\n        ofFolliclesLs15mm,\n        ofFolliclesGt15mm,\n        estradiolLevel,\n        progesterOneLevel,\n        endometrialThicknessFreshCycle,\n        cycleCancelledBeforeRetrieval,\n        reasonCancelled,\n        otherReasonCanDesc\n    }) => {\n        form.priorBirths = priorBirths;\n        form.priorPregnancies = priorPregnancies;\n        form.priorFreshCyclesStarted = priorFreshCyclesStarted;\n        form.priorETsOwnOocytes = priorETsOwnOocytes;\n        form.priorETsDonorOocytes = priorETsDonorOocytes;\n        form.provincialFundingForThisCycle = provincialFundingForThisCycle;\n        form.typeOfFunding = typeOfFunding;\n        form.otherSpecify = otherSpecify;\n        form.originOfSimulatedCycle = originOfSimulatedCycle;\n        form.primaryCycle = primaryCycle;\n        form.reasonsForTreatmentCycle = reasonsForTreatmentCycle;\n        form.reasonsForMaleFactor = reasonsForMaleFactor;\n        form.ageOfOocyteAge = ageOfOocyteAge;\n        form.hightOfOocyteHight = hightOfOocyteHight;\n        form.weightOfOocyte = weightOfOocyte;\n        form.bmiOfOocyte = bmiOfOocyte;\n        form.fshDayOocyte = fshDayOocyte;\n        form.afcOocyte = afcOocyte;\n        form.ngPMOOocyte = ngPMOOocyte;\n        form.typeOfStimulationProtocol = typeOfStimulationProtocol;\n        form.otherTypeOfStiProtocolDes = otherTypeOfStiProtocolDes;\n        form.medicationForCOS = medicationForCOS;\n        form.otherMedicationCOS = otherMedicationCOS;\n        form.otherAdjuvantMediDescription = otherAdjuvantMediDescription;\n        form.triggerMedication = triggerMedication;\n        form.otheTriMedDesc = otheTriMedDesc;\n        form.noOfDaysGonadotropins = noOfDaysGonadotropins;\n        form.totalDoseFSH = totalDoseFSH;\n        form.totalDoseLH = totalDoseLH;\n        form.ofFolliclesLs15mm = ofFolliclesLs15mm;\n        form.ofFolliclesGt15mm = ofFolliclesGt15mm;\n        form.estradiolLevel = estradiolLevel;\n        form.progesterOneLevel = progesterOneLevel;\n        form.endometrialThicknessFreshCycle = endometrialThicknessFreshCycle;\n        form.cycleCancelledBeforeRetrieval = cycleCancelledBeforeRetrieval;\n        form.reasonCancelled = reasonCancelled;\n        form.otherReasonCanDesc = otherReasonCanDesc;\n    };\n\n    return {\n        store,\n        form,\n        save,\n        fillForm,\n        obstetricalHistory\n    };\n}\n\nexport function useObstetricalHistoryFormInit() {\n    const store = useStore();\n\n    const priorPregnanciesOptions = computed(\n        () => store.state.options.pregnancyBirthOutcome\n    );\n    const priorBirthsOptions = ref([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n    const priorFreshCyclesStartedOptions = computed(\n        () => store.state.options.priorFreshCyclesStarted\n    );\n    const priorETsOwnOocytesOptions = computed(\n        () => store.state.options.priorETsOwnOocytes\n    );\n    const priorETsDonorOocytesOptions = computed(\n        () => store.state.options.priorETsDonorOocytes\n    );\n    const typeOfFundingOptions = computed(\n        () => store.state.options.typeOfFunding\n    );\n    const reasonsForMaleFactorOptions = computed(\n        () => store.state.options.reasonsForMaleFactor\n    );\n    const reasonsForTreatmentCycleOptions = computed(\n        () => store.state.options.reasonsForTreatmentCycle\n    );\n\n    return {\n        priorPregnanciesOptions,\n        priorBirthsOptions,\n        priorFreshCyclesStartedOptions,\n        priorETsOwnOocytesOptions,\n        priorETsDonorOocytesOptions,\n        typeOfFundingOptions,\n        reasonsForMaleFactorOptions,\n        reasonsForTreatmentCycleOptions\n    };\n}\n\nexport function useOocyteProviderFormInit() {\n    const store = useStore();\n    const typeOfStimulationProtocolOptions = computed(\n        () => store.state.options.typeOfStimulationProtocol\n    );\n    const triggerMedicationOptions = computed(\n        () => store.state.options.triggerMedication\n    );\n    const medicationForCOSOptions = computed(\n        () => store.state.options.medicationForCOS\n    );\n    const reasonCancelledOptions = computed(\n        () => store.state.options.reasonCancelled\n    );\n    return {\n        typeOfStimulationProtocolOptions,\n        triggerMedicationOptions,\n        medicationForCOSOptions,\n        reasonCancelledOptions\n    };\n}\n\nexport function useBornFertilizationInit() {\n    const store = useStore();\n    const embryology = computed(() => store.state.born.embryology);\n    const form = reactive({\n        inseminationMethod: null,\n        oocytesNotUsed: null,\n        reasonsForNoUse: null,\n        embryoStageFreezing: null,\n        inseminatedInjected: null,\n        embryoFreezeID1: null,\n        embryoFreezeID2: null,\n        embryoFreezeID3: null,\n        embryoFreezeID4: null,\n        normalFertilization2PN: null,\n        embryoFreezeDate1: null,\n        embryoFreezeDate2: null,\n        embryoFreezeDate3: null,\n        embryoFreezeDate4: null,\n        ofMII: null,\n        utilizableEmbryos: null,\n        embryosCryopreserved: null,\n        reasonEmbryoCryopreservation: null,\n        embryoFreshCryoMethod: null,\n        oocyteCollectionDate: null,\n        embryoFreezeID1Thawed: null,\n        embryoFreezeID2Thawed: null,\n        embryoFreezeID3Thawed: null,\n        embryoFreezeID4Thawed: null,\n        embryosThawed: null,\n        utilizableAfterThaw: null,\n        embryoStageThawing: null,\n        embryoTransfer: null,\n        reasonsNoET: null,\n        preparationUterineLining: null,\n        endometrialThickness: null,\n        transferDate: null,\n        dateETAdjusted: null,\n        dayET: null,\n        ultrasoundGuidedET: null,\n        assistedZonaHatching: null,\n        embryosTransferred: null,\n        electiveTransfeESET: null,\n        sourceTransferredEmbryos: null,\n        transferInseminationMethod: null,\n        preImplGeneticTesting: null,\n        charTransferredEmbryo: null,\n        numberThaws: null,\n        sitePGTembryo: null,\n        gestationalCarrierSurrogate: null,\n        gestationalCarrierSurrogateChart: null,\n        heightRecipient: null,\n        weightRecipient: null,\n        recipientBMI: null\n    });\n\n    const fillForm = ({\n        inseminationMethod,\n        oocytesNotUsed,\n        reasonsForNoUse,\n        embryoStageFreezing,\n        inseminatedInjected,\n        embryoFreezeID1,\n        embryoFreezeID2,\n        embryoFreezeID3,\n        embryoFreezeID4,\n        normalFertilization2PN,\n        embryoFreezeDate1,\n        embryoFreezeDate2,\n        embryoFreezeDate3,\n        embryoFreezeDate4,\n        ofMII,\n        utilizableEmbryos,\n        embryosCryopreserved,\n        reasonEmbryoCryopreservation,\n        embryoFreshCryoMethod,\n        oocyteCollectionDate,\n        embryoFreezeID1Thawed,\n        embryoFreezeID2Thawed,\n        embryoFreezeID3Thawed,\n        embryoFreezeID4Thawed,\n        embryosThawed,\n        utilizableAfterThaw,\n        embryoStageThawing,\n        embryoTransfer,\n        reasonsNoET,\n        preparationUterineLining,\n        endometrialThickness,\n        transferDate,\n        dateETAdjusted,\n        dayET,\n        ultrasoundGuidedET,\n        assistedZonaHatching,\n        embryosTransferred,\n        electiveTransfeESET,\n        sourceTransferredEmbryos,\n        transferInseminationMethod,\n        preImplGeneticTesting,\n        charTransferredEmbryo,\n        numberThaws,\n        sitePGTembryo,\n        gestationalCarrierSurrogate,\n        gestationalCarrierSurrogateChart,\n        heightRecipient,\n        weightRecipient,\n        recipientBMI\n    }) => {\n        form.inseminationMethod = inseminationMethod;\n        form.oocytesNotUsed = oocytesNotUsed;\n        form.reasonsForNoUse = reasonsForNoUse;\n        form.embryoStageFreezing = embryoStageFreezing;\n        form.inseminatedInjected = inseminatedInjected;\n        form.embryoFreezeID1 = embryoFreezeID1;\n        form.embryoFreezeID2 = embryoFreezeID2;\n        form.embryoFreezeID3 = embryoFreezeID3;\n        form.embryoFreezeID4 = embryoFreezeID4;\n        form.normalFertilization2PN = normalFertilization2PN;\n        form.embryoFreezeDate1 = embryoFreezeDate1;\n        form.embryoFreezeDate2 = embryoFreezeDate2;\n        form.embryoFreezeDate3 = embryoFreezeDate3;\n        form.embryoFreezeDate4 = embryoFreezeDate4;\n        form.ofMII = ofMII;\n        form.utilizableEmbryos = utilizableEmbryos;\n        form.embryosCryopreserved = embryosCryopreserved;\n        form.reasonEmbryoCryopreservation = reasonEmbryoCryopreservation;\n        form.embryoFreshCryoMethod = embryoFreshCryoMethod;\n        form.oocyteCollectionDate = oocyteCollectionDate;\n        form.embryoFreezeID1Thawed = embryoFreezeID1Thawed;\n        form.embryoFreezeID2Thawed = embryoFreezeID2Thawed;\n        form.embryoFreezeID3Thawed = embryoFreezeID3Thawed;\n        form.embryoFreezeID4Thawed = embryoFreezeID4Thawed;\n        form.embryosThawed = embryosThawed;\n        form.utilizableAfterThaw = utilizableAfterThaw;\n        form.embryoStageThawing = embryoStageThawing;\n        form.embryoTransfer = embryoTransfer;\n        form.reasonsNoET = reasonsNoET;\n        form.preparationUterineLining = preparationUterineLining;\n        form.endometrialThickness = endometrialThickness;\n        form.transferDate = transferDate;\n        form.dateETAdjusted = dateETAdjusted;\n        form.dayET = dayET;\n        form.ultrasoundGuidedET = ultrasoundGuidedET;\n        form.assistedZonaHatching = assistedZonaHatching;\n        form.embryosTransferred = embryosTransferred;\n        form.electiveTransfeESET = electiveTransfeESET;\n        form.sourceTransferredEmbryos = sourceTransferredEmbryos;\n        form.transferInseminationMethod = transferInseminationMethod;\n        form.preImplGeneticTesting = preImplGeneticTesting;\n        form.charTransferredEmbryo = charTransferredEmbryo;\n        form.numberThaws = numberThaws;\n        form.sitePGTembryo = sitePGTembryo;\n        form.gestationalCarrierSurrogate = gestationalCarrierSurrogate;\n        form.gestationalCarrierSurrogateChart = gestationalCarrierSurrogateChart;\n        form.heightRecipient = heightRecipient;\n        form.weightRecipient = weightRecipient;\n        form.recipientBMI = recipientBMI;\n    };\n\n    const save = () => {\n        const data = {\n            ...form,\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\n            embryoFreezeDate1: format(\n                new Date(form.embryoFreezeDate1),\n                DATE_FORMAT_STRING\n            ),\n            embryoFreezeDate2: format(\n                new Date(form.embryoFreezeDate2),\n                DATE_FORMAT_STRING\n            ),\n            embryoFreezeDate3: format(\n                new Date(form.embryoFreezeDate3),\n                DATE_FORMAT_STRING\n            ),\n            embryoFreezeDate4: format(\n                new Date(form.embryoFreezeDate4),\n                DATE_FORMAT_STRING\n            ),\n            oocyteCollectionDate: format(\n                new Date(form.oocyteCollectionDate),\n                DATE_FORMAT_STRING\n            ),\n            transferDate: format(\n                new Date(form.transferDate),\n                DATE_FORMAT_STRING\n            )\n        };\n\n        store.dispatch(\"born/updateEmbryology\", data);\n    };\n\n    return { embryology, form, fillForm, save };\n}\n\nexport function useBornEmbryologyInit() {\n    const store = useStore();\n    const form = inject(\"form\");\n\n    const isIVFCycle = store.getters[\"artCycle/isIVFCycle\"];\n    const isFETCycle = store.getters[\"artCycle/isFETCycle\"];\n\n    const inseminationMethodOptions = computed(\n        () => store.state.options.inseminationMethod\n    );\n    const reasonsForNoUseOptions = computed(\n        () => store.state.options.reasonsForNoUse\n    );\n    const embryoStageFreezingOptions = computed(\n        () => store.state.options.embryoStageFreezing\n    );\n    const reasonEmbryoCryopreservationOptions = computed(\n        () => store.state.options.reasonEmbryoCryopreservation\n    );\n    const embryoFreshCryoMethodOptions = computed(\n        () => store.state.options.embryoFreshCryoMethod\n    );\n    const embryoStageThawingOptions = computed(\n        () => store.state.options.embryoStageThawing\n    );\n    const embryoTransferOptions = computed(\n        () => store.state.options.reasonsNoET\n    );\n\n    return {\n        form,\n        isIVFCycle,\n        isFETCycle,\n        inseminationMethodOptions,\n        reasonsForNoUseOptions,\n        embryoStageFreezingOptions,\n        reasonEmbryoCryopreservationOptions,\n        embryoFreshCryoMethodOptions,\n        embryoStageThawingOptions,\n        embryoTransferOptions\n    };\n}\n\nexport function useBornEmbryoTransferInit() {\n    const store = useStore();\n    const toast = useToast();\n    const form = reactive({\n        embryoTransfer: null,\n        reasonsNoET: null,\n        preparationUterineLining: null,\n        endometrialThickness: null,\n        transferDate: null,\n        dateETAdjusted: null,\n        dayET: null,\n        ultrasoundGuidedET: null,\n        assistedZonaHatching: null,\n        embryosTransferred: null,\n        electiveTransfeESET: null,\n        sourceTransferredEmbryos: null,\n        transferInseminationMethod: null,\n        preImplGeneticTesting: null,\n        charTransferredEmbryo: null,\n        numberThaws: null,\n        sitePGTembryo: null,\n        gestationalCarrierSurrogate: null,\n        gestationalCarrierSurrogateChart: null,\n        heightRecipient: null,\n        weightRecipient: null,\n        recipientBMI: null\n    });\n\n    const fillForm = (data) => {\n        form.embryoTransfer = data.embryoTransfer;\n        form.reasonsNoET = data.reasonsNoET;\n        form.preparationUterineLining = data.preparationUterineLining;\n        form.endometrialThickness = data.endometrialThickness;\n        form.transferDate = data.transferDate;\n        form.dateETAdjusted = data.dateETAdjusted;\n        form.dayET = data.dayET;\n        form.ultrasoundGuidedET = data.ultrasoundGuidedET;\n        form.assistedZonaHatching = data.assistedZonaHatching;\n        form.embryosTransferred = data.embryosTransferred;\n        form.electiveTransfeESET = data.electiveTransfeESET;\n        form.sourceTransferredEmbryos = data.sourceTransferredEmbryos;\n        form.transferInseminationMethod = data.transferInseminationMethod;\n        form.preImplGeneticTesting = data.preImplGeneticTesting;\n        form.charTransferredEmbryo = data.charTransferredEmbryo;\n        form.numberThaws = data.numberThaws;\n        form.sitePGTembryo = data.sitePGTembryo;\n        form.gestationalCarrierSurrogate = data.gestationalCarrierSurrogate;\n        form.gestationalCarrierSurrogateChart =\n            data.gestationalCarrierSurrogateChart;\n        form.heightRecipient = data.heightRecipient;\n        form.weightRecipient = data.weightRecipient;\n        form.recipientBMI = data.recipientBMI;\n    };\n\n    const save = () => {\n        store\n            .dispatch(\"born/updateEmbryoTransfer\", {\n                ...form,\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\n                transferDate: form.transferDate\n                    ? format(form.transferDate, DATE_FORMAT_STRING)\n                    : null\n            })\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            });\n    };\n\n    const reasonsNoETOptions = computed(() => store.state.options.reasonsNoET);\n    const preparationUterineLiningOptions = computed(\n        () => store.state.options.preparationUterineLining\n    );\n    const assistedZonaHatchingOptions = computed(\n        () => store.state.options.assistedZonaHatching\n    );\n    const sourceTransferredEmbryosOptions = computed(\n        () => store.state.options.sourceTransferredEmbryos\n    );\n    const transferInseminationMethodOptions = computed(\n        () => store.state.options.transferInseminationMethod\n    );\n    const charTransferredEmbryoOptions = computed(\n        () => store.state.options.charTransferredEmbryo\n    );\n    const numberThawsOptions = computed(() => store.state.options.numberThaws);\n    const sitePGTembryoOptions = computed(\n        () => store.state.options.sitePGTembryo\n    );\n\n    return {\n        store,\n        form,\n        fillForm,\n        save,\n        reasonsNoETOptions,\n        preparationUterineLiningOptions,\n        assistedZonaHatchingOptions,\n        sourceTransferredEmbryosOptions,\n        transferInseminationMethodOptions,\n        charTransferredEmbryoOptions,\n        numberThawsOptions,\n        sitePGTembryoOptions\n    };\n}\n\nexport function useBornFreshEmbryoInit() {\n    const store = useStore();\n    const toast = useToast();\n    const loading = ref(false);\n    const form = reactive({\n        inseminationMethod: null,\n        oocytesNotUsed: null,\n        reasonsForNoUse: null,\n        embryoStageFreezing: null,\n        inseminatedInjected: null,\n        embryoFreezeID1: null,\n        embryoFreezeID2: null,\n        embryoFreezeID3: null,\n        embryoFreezeID4: null,\n        normalFertilization2PN: null,\n        embryoFreezeDate1: null,\n        embryoFreezeDate2: null,\n        embryoFreezeDate3: null,\n        embryoFreezeDate4: null,\n        ofMII: null,\n        utilizableEmbryos: null,\n        embryosCryopreserved: null,\n        reasonEmbryoCryopreservation: null,\n        embryoFreshCryoMethod: null\n    });\n\n    const save = () => {\n        store\n            .dispatch(\"born/updateFreshEmbryo\", {\n                ...form,\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\n                embryoFreezeDate1: form.embryoFreezeDate1\n                    ? format(form.embryoFreezeDate1, DATE_FORMAT_STRING)\n                    : null,\n                embryoFreezeDate2: form.embryoFreezeDate2\n                    ? format(form.embryoFreezeDate2, DATE_FORMAT_STRING)\n                    : null,\n                embryoFreezeDate3: form.embryoFreezeDate3\n                    ? format(form.embryoFreezeDate3, DATE_FORMAT_STRING)\n                    : null,\n                embryoFreezeDate4: form.embryoFreezeDate4\n                    ? format(form.embryoFreezeDate4, DATE_FORMAT_STRING)\n                    : null\n            })\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            });\n    };\n\n    const fillForm = (data) => {\n        form.inseminationMethod = data.inseminationMethod;\n        form.oocytesNotUsed = data.oocytesNotUsed;\n        form.reasonsForNoUse = data.reasonsForNoUse;\n        form.embryoStageFreezing = data.embryoStageFreezing;\n        form.inseminatedInjected = data.inseminatedInjected;\n        form.embryoFreezeID1 = data.embryoFreezeID1;\n        form.embryoFreezeID2 = data.embryoFreezeID2;\n        form.embryoFreezeID3 = data.embryoFreezeID3;\n        form.embryoFreezeID4 = data.embryoFreezeID4;\n        form.normalFertilization2PN = data.normalFertilization2PN;\n        form.embryoFreezeDate1 = data.embryoFreezeDate1;\n        form.embryoFreezeDate2 = data.embryoFreezeDate2;\n        form.embryoFreezeDate3 = data.embryoFreezeDate3;\n        form.embryoFreezeDate4 = data.embryoFreezeDate4;\n        form.ofMII = data.ofMII;\n        form.utilizableEmbryos = data.utilizableEmbryos;\n        form.embryosCryopreserved = data.embryosCryopreserved;\n        form.reasonEmbryoCryopreservation = data.reasonEmbryoCryopreservation;\n        form.embryoFreshCryoMethod = data.embryoFreshCryoMethod;\n    };\n\n    const inseminationMethodOptions = computed(\n        () => store.state.options.inseminationMethod\n    );\n    const reasonsForNoUseOptions = computed(\n        () => store.state.options.reasonsForNoUse\n    );\n    const embryoStageFreezingOptions = computed(\n        () => store.state.options.embryoStageFreezing\n    );\n    const reasonEmbryoCryopreservationOptions = computed(\n        () => store.state.options.reasonEmbryoCryopreservation\n    );\n    const embryoFreshCryoMethodOptions = computed(\n        () => store.state.options.embryoFreshCryoMethod\n    );\n\n    return {\n        store,\n        loading,\n        form,\n        fillForm,\n        save,\n        inseminationMethodOptions,\n        reasonsForNoUseOptions,\n        embryoStageFreezingOptions,\n        reasonEmbryoCryopreservationOptions,\n        embryoFreshCryoMethodOptions\n    };\n}\n\nexport function useBronFrozenEmbyoInit() {\n    const store = useStore();\n    const toast = useToast();\n    const loading = ref(false);\n    const form = reactive({\n        oocyteCollectionDate: null,\n        embryoFreezeID1Thawed: null,\n        embryoFreezeID2Thawed: null,\n        embryoFreezeID3Thawed: null,\n        embryoFreezeID4Thawed: null,\n        embryosThawed: null,\n        utilizableAfterThaw: null,\n        embryoStageThawing: null,\n        embryoFrozenCryoMethod: null\n    });\n\n    const save = () => {\n        loading.value = true;\n        store\n            .dispatch(\"born/updateFrozenEmbryo\", {\n                ...form,\n                ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\n                oocyteCollectionDate: form.oocyteCollectionDate\n                    ? format(form.oocyteCollectionDate, DATE_FORMAT_STRING)\n                    : null\n            })\n            .then(() => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            })\n            .finally(() => {\n                loading.value = false;\n            });\n    };\n\n    const fillForm = (data) => {\n        form.oocyteCollectionDate = data.oocyteCollectionDate;\n        form.embryoFreezeID1Thawed = data.embryoFreezeID1Thawed;\n        form.embryoFreezeID2Thawed = data.embryoFreezeID2Thawed;\n        form.embryoFreezeID3Thawed = data.embryoFreezeID3Thawed;\n        form.embryoFreezeID4Thawed = data.embryoFreezeID4Thawed;\n        form.embryosThawed = data.embryosThawed;\n        form.utilizableAfterThaw = data.utilizableAfterThaw;\n        form.embryoStageThawing = data.embryoStageThawing;\n        form.embryoFrozenCryoMethod = data.embryoFrozenCryoMethod;\n    };\n\n    const embryoStageThawingOptions = computed(\n        () => store.state.options.embryoStageThawing\n    );\n    const embryoTransferOptions = computed(\n        () => store.state.options.reasonsNoET\n    );\n\n    return {\n        store,\n        loading,\n        form,\n        save,\n        fillForm,\n        embryoStageThawingOptions,\n        embryoTransferOptions\n    };\n}\n"],"sourceRoot":""}