{"version":3,"sources":["webpack:///./src/components/blood-tests/dialog.vue","webpack:///./src/components/blood-tests/patient-info.vue","webpack:///./src/components/blood-tests/patient-info.vue?57c0","webpack:///./src/components/blood-tests/dialog-test-info.vue","webpack:///./src/components/blood-tests/dialog-test-info.vue?9875","webpack:///./src/components/blood-tests/dialog-barcode.vue","webpack:///./src/components/blood-tests/dialog-barcode.vue?8101","webpack:///./src/components/blood-tests/dialog-blood-test.vue","webpack:///./src/components/blood-tests/dialog-blood-test.vue?8bae","webpack:///./src/components/blood-tests/dialog.vue?ffd3","webpack:///./src/composable/blood-tests.js","webpack:///./src/components/blood-tests/confirm-dialog.vue","webpack:///./src/components/blood-tests/confirm-dialog.vue?8bf7","webpack:///./src/components/blood-tests/dialog-barcode.vue?3326","webpack:///./src/components/blood-tests/dialog-blood-test.vue?5def","webpack:///./src/components/blood-tests/dialog.vue?beb9"],"names":["class","for","header","visible","orderBloodTestDialog","style","modal","resetForm","form","btComments","id","rows","label","bloodMachine","options","bloodMachineOptions","changeDoctorConfirmation","loading","data-scrollselectors","role","colspan","cycleId","cycleOptions","optionLabel","optionValue","isCycleIdValid","disabled","isCycle","patient","firstName","lastName","day","month","year","age","hin","sex","phone","setup","store","state","artCycle","selectedCycle","value","patientId","__exports__","legend","physicianId","doctorOptions","filter","site","locationOptions","isInvalidLocation","onChange","option","slotProps","name","testPriority","testPriorityOptions","emit","barcode","collapsed","carrierNumber","positionInCarrier","system","testGroup","testGroupsOptions","multiple","listStyle","submitted","isInvalidTests","testSelectionTable","responsiveLayout","showGridlines","selection","seletedTests","dataKey","scrollable","scrollHeight","field","selectionMode","newVal","testIdArray","map","item","itemId","testId","testName","components","BloodTestDialogPatientInfo","BloodTestDialogTestInfo","BloodTestDialogBarcode","BloodTestDialogTestSelection","save","setBloodMachine","Milton","Burlington","Brampton","dispatch","on","off","render","useBloodTestsReportInit","useStore","inject","orderBloodTestConfirmDialog","editDailogVisible","addBloodDialogvisible","testResults","ref","selectedBloodTest","getBloodTestResults","then","data","finally","getBloodTestResultsWithOpenBarcode","test","barcodeDailogVisible","showBarcode","testOrderId","pdf","width","height","left","screen","top","window","open","openPdfReport","params","patientName","url","NL_FORM_BASE","URLSearchParams","useBloodTestDailogInit","toast","useToast","reactive","doctorId","date","format","Date","DATE_FORMAT_STRING","stat","serverId","deviceId","router","useRouter","push","confirm","useConfirm","require","message","icon","accept","reject","length","reqBody","add","severity","summary","detail","life","emitter","useBloodTestBarcodeInit","computed","useBloddTestInfoInit","doctor","doctors","provider","locations","usePatientInfoInit","cyclesSummary","cycleIds","cycleCompleted","cycleType","cycleDate","substring","concat","useBloodTestGroupSelectionInit","getters","includes","booodTests","bloodTest","bloodGroups","group","testItems","Map","values","curGroup","useBloodTestEditDialogInit","isCanceled","bloodTestOrderDate","bloodTestResultDate","etwo","etwoStat","lh","lhStat","prog","progStat","fsh","fshStat","tsh","tshStat","prl","prlStat","bhcg","bhcgStat","dheas","dheasStat","testo","testoStat","amh","amhStat","emptyFrom","getBloodTest","catch","saveAll","deleteResult","deleteOrder","cancelBloodTest","testCode","onHide","useBloodTestAddDialogInit","assignCycle","cycle","isCycleChecked","isFormValid","saveBloodTest","payload","chart","addBlood","onOK","onCancel"],"mappings":"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","file":"js/chunk-ab39db92.8965645b.js","sourcesContent":["<template>\r\n    <p-dialog\r\n        header=\"Add\"\r\n        v-model:visible=\"orderBloodTestDialog\"\r\n        :style=\"{ width: '960px' }\"\r\n        :modal=\"true\"\r\n        class=\"p-inputtext-sm p-input-filled\"\r\n        @show=\"resetForm\"\r\n    >\r\n        <div class=\"p-grid\">\r\n            <div class=\"p-md-7\">\r\n                <blood-test-dialog-patient-info />\r\n                <blood-test-dialog-test-info />\r\n                <blood-test-dialog-barcode v-show=\"false\" />\r\n\r\n                <div class=\"p-fluid p-formgrid p-grid p-mt-2\" v-show=\"false\">\r\n                    <div class=\"p-field p-col\">\r\n                        <label for=\"bt-comments\">BT Commnents</label>\r\n                        <p-textarea\r\n                            v-model=\"form.btComments\"\r\n                            id=\"bt-comments\"\r\n                            rows=\"5\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"p-field p-col\">\r\n                        <label for=\"label\">Label</label>\r\n                        <p-input-text v-model=\"form.label\" id=\"label\" />\r\n                        <label for=\"blood-machine\" class=\"p-mt-2\">\r\n                            Blood Machine\r\n                        </label>\r\n                        <p-dropdown\r\n                            v-model=\"form.bloodMachine\"\r\n                            id=\"blood-machine\"\r\n                            :options=\"bloodMachineOptions\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-md-5\">\r\n                <blood-test-dialog-test-selection />\r\n            </div>\r\n        </div>\r\n\r\n        <p-button\r\n            label=\"Order Test\"\r\n            class=\"p-button-success p-mr-2\"\r\n            @click=\"changeDoctorConfirmation\"\r\n            :loading=\"loading\"\r\n        />\r\n\r\n        <p-button\r\n            label=\"Cancel\"\r\n            class=\"p-button-danger\"\r\n            @click=\"orderBloodTestDialog = false\"\r\n        />\r\n    </p-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { onMounted, onUnmounted, provide } from \"vue\";\r\nimport { useBloodTestDailogInit } from \"@/composable/blood-tests\";\r\nimport { LOCATION } from \"@/constants\";\r\n\r\nimport BloodTestDialogPatientInfo from \"@/components/blood-tests/patient-info.vue\";\r\nimport BloodTestDialogTestInfo from \"@/components/blood-tests/dialog-test-info.vue\";\r\nimport BloodTestDialogBarcode from \"@/components/blood-tests/dialog-barcode.vue\";\r\nimport BloodTestDialogTestSelection from \"@/components/blood-tests/dialog-blood-test.vue\";\r\nimport { emitter } from \"@/event-bus\";\r\n\r\nexport default {\r\n    components: {\r\n        BloodTestDialogPatientInfo,\r\n        BloodTestDialogTestInfo,\r\n        BloodTestDialogBarcode,\r\n        BloodTestDialogTestSelection\r\n    },\r\n    setup() {\r\n        const {\r\n            store,\r\n            orderBloodTestDialog,\r\n            form,\r\n            resetForm,\r\n            changeDoctorConfirmation,\r\n            save,\r\n            submitted,\r\n            loading,\r\n            isInvalidTests,\r\n            isInvalidLocation,\r\n            isCycleIdValid,\r\n            bloodMachineOptions\r\n        } = useBloodTestDailogInit();\r\n\r\n        provide(\"form\", form);\r\n        provide(\"submitted\", submitted);\r\n        provide(\"isInvalidTests\", isInvalidTests);\r\n        provide(\"isInvalidLocation\", isInvalidLocation);\r\n        provide(\"isCycleIdValid\", isCycleIdValid);\r\n\r\n        const setBloodMachine = (value) => {\r\n            if (value == LOCATION.Milton || value == LOCATION.Burlington) {\r\n                form.bloodMachine = 3;\r\n            } else if (value == LOCATION.Brampton) {\r\n                form.bloodMachine = 4;\r\n            } else {\r\n                form.bloodMachine = 2;\r\n            }\r\n        };\r\n\r\n        onMounted(() => {\r\n            store.dispatch(\"bloodTest/getBloodGroupTests\");\r\n            store.dispatch(\"provider/getProviders\");\r\n            store.dispatch(\"provider/getProviderLocations\");\r\n\r\n            emitter.on(\"dialog-test-info:location-change\", setBloodMachine);\r\n        });\r\n\r\n        onUnmounted(() => {\r\n            emitter.off(\"dialog-test-info:location-change\", setBloodMachine);\r\n        });\r\n\r\n        return {\r\n            orderBloodTestDialog,\r\n            form,\r\n            resetForm,\r\n            save,\r\n            changeDoctorConfirmation,\r\n            bloodMachineOptions,\r\n            loading\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n:deep() .p-fieldset .p-fieldset-legend {\r\n    padding: 0.5rem;\r\n    background-color: transparent;\r\n}\r\n</style>\r\n","<template>\r\n    <div\r\n        class=\"p-datatable p-component p-datatable-responsive-scroll p-datatable-sm p-mt-1\"\r\n        data-scrollselectors=\".p-datatable-wrapper\"\r\n    >\r\n        <div class=\"p-datatable-wrapper\">\r\n            <table role=\"table\" class=\"p-datatable-table\">\r\n                <thead class=\"p-datatable-thead\" role=\"rowgroup\">\r\n                    <tr role=\"row\">\r\n                        <th style=\"width: 120px;\">\r\n                            <div class=\"p-column-header-content\">\r\n                                <span class=\"p-column-title\">\r\n                                    Cycle\r\n                                </span>\r\n                            </div>\r\n                        </th>\r\n                        <th colspan=\"4\">\r\n                            <div class=\"p-column-header-content\">\r\n                                <p-dropdown\r\n                                    v-model=\"form.cycleId\"\r\n                                    :options=\"cycleOptions\"\r\n                                    optionLabel=\"label\"\r\n                                    optionValue=\"value\"\r\n                                    class=\"w-full\"\r\n                                    :disabled=\"isCycle === 1\"\r\n                                    :class=\"{ 'p-invalid': isCycleIdValid }\"\r\n                                />\r\n                                <small v-if=\"isCycleIdValid\" style=\"color: red; margin-left: 5px;\">\r\n                                    Cycle ID required\r\n                                </small>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody class=\"p-datatable-tbody\" role=\"rowgroup\">\r\n                    <tr class=\"\" role=\"row\">\r\n                        <td style=\"width: 120px;\">\r\n                            First Name\r\n                        </td>\r\n                        <td colspan=\"4\">{{ patient.firstName }}</td>\r\n                    </tr>\r\n                    <tr class=\"\" role=\"row\">\r\n                        <td style=\"width: 120px;\">\r\n                            Last Name\r\n                        </td>\r\n                        <td colspan=\"4\">{{ patient.lastName }}</td>\r\n                    </tr>\r\n                    <tr class=\"\" role=\"row\">\r\n                        <td style=\"width: 120px;\">\r\n                            Birth Date\r\n                        </td>\r\n                        <td>\r\n                            {{ patient.day }}-{{ patient.month }}-{{\r\n                                patient.year\r\n                            }}\r\n                        </td>\r\n                        <td style=\"width: 80px;\">\r\n                            Age\r\n                        </td>\r\n                        <td>\r\n                            {{ patient.age }}\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"\" role=\"row\">\r\n                        <td style=\"width: 120px;\">\r\n                            Health Card\r\n                        </td>\r\n                        <td>{{ patient.hin }}</td>\r\n                        <td style=\"width: 80px;\">\r\n                            Gender\r\n                        </td>\r\n                        <td>\r\n                            {{ patient.sex }}\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"\" role=\"row\">\r\n                        <td style=\"width: 120px;\">\r\n                            Tel\r\n                        </td>\r\n                        <td colspan=\"4\">{{ patient.phone }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n        <div class=\"p-column-resizer-helper\" style=\"display: none;\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, inject, onMounted } from \"vue\";\r\nimport { usePatientInfoInit } from \"@/composable/blood-tests\";\r\nimport { useStore } from \"vuex\";\r\nexport default {\r\n    setup() {\r\n        const store = useStore();\r\n        const patient = computed(() => store.state.artCycle.patient);\r\n\r\n        const { \r\n            form, \r\n            cycleOptions, \r\n            selectedCycle,\r\n            isCycleIdValid \r\n        } = usePatientInfoInit();\r\n\r\n        const isCycle = inject(\"isCycle\");\r\n\r\n        onMounted(() => {\r\n            if (patient.value) {\r\n                form.patientId = patient.value.id;\r\n            }\r\n\r\n            if (isCycle.value == 1 && selectedCycle.value) {\r\n                form.cycleId = selectedCycle.value.cycleId;\r\n            } else {\r\n                form.cycleId = null;\r\n            }\r\n        });\r\n\r\n        return { \r\n            patient, \r\n            form, \r\n            isCycle, \r\n            cycleOptions, \r\n            selectedCycle,\r\n            isCycleIdValid \r\n        };\r\n    }\r\n};\r\n</script>\r\n","import { render } from \"./patient-info.vue?vue&type=template&id=97b2e95e\"\nimport script from \"./patient-info.vue?vue&type=script&lang=js\"\nexport * from \"./patient-info.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <p-fieldset legend=\"Test Info\" class=\"p-inputtext-sm p-input-filled\">\r\n        <div class=\"p-fluid\">\r\n            <div class=\"p-field p-grid\">\r\n                <label class=\"p-col-fixed p-mb-2 p-md-2 p-mb-md-0\">\r\n                    Doctor\r\n                </label>\r\n                <div class=\"p-col-fixed\">\r\n                    <p-dropdown\r\n                        v-model=\"form.physicianId\"\r\n                        :options=\"doctorOptions\"\r\n                        optionLabel=\"name\"\r\n                        optionValue=\"id\"\r\n                        :filter=\"true\"\r\n                    />\r\n                </div>\r\n                <label class=\"p-col-fixed p-mb-2 p-md-2 p-mb-md-0\">\r\n                    Location\r\n                </label>\r\n                <div class=\"p-col-fixed\">\r\n                    <p-dropdown\r\n                        v-model=\"form.site\"\r\n                        :options=\"locationOptions\"\r\n                        optionLabel=\"name\"\r\n                        optionValue=\"id\"\r\n                        :class=\"{ 'p-invalid': isInvalidLocation }\"\r\n                        @change=\"onChange\"\r\n                    >\r\n                        <template #option=\"slotProps\">\r\n                            <div\r\n                                :style=\"{\r\n                                    padding: '5px',\r\n                                    'background-color': `${slotProps.option.color}`\r\n                                }\"\r\n                            >\r\n                                {{ slotProps.option.name }}\r\n                            </div>\r\n                        </template>\r\n                    </p-dropdown>\r\n                    <small v-if=\"isInvalidLocation\" style=\"color: red\">\r\n                        Location is invalid\r\n                    </small>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-field p-grid\">\r\n                <div class=\"p-col-fixed\" style=\"width: 224px\"></div>\r\n                <label class=\"p-col-fixed p-mb-2 p-md-2 p-mb-md-0\">\r\n                    Test Priority\r\n                </label>\r\n                <div class=\"p-col-fixed\">\r\n                    <p-dropdown\r\n                        v-model=\"form.testPriority\"\r\n                        :options=\"testPriorityOptions\"\r\n                        optionLabel=\"label\"\r\n                        optionValue=\"value\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </p-fieldset>\r\n</template>\r\n\r\n<script>\r\nimport { useBloddTestInfoInit } from \"@/composable/blood-tests\";\r\nimport { emitter } from \"@/event-bus\";\r\nexport default {\r\n    setup() {\r\n        const {\r\n            form,\r\n            isInvalidLocation,\r\n            doctorOptions,\r\n            locationOptions,\r\n            testPriorityOptions\r\n        } = useBloddTestInfoInit();\r\n\r\n        return {\r\n            form,\r\n            isInvalidLocation,\r\n            doctorOptions,\r\n            locationOptions,\r\n            testPriorityOptions,\r\n            onChange: ({ value }) => {\r\n                emitter.emit(\"dialog-test-info:location-change\", value);\r\n            }\r\n        };\r\n    }\r\n};\r\n</script>\r\n","import { render } from \"./dialog-test-info.vue?vue&type=template&id=68d685c0\"\nimport script from \"./dialog-test-info.vue?vue&type=script&lang=js\"\nexport * from \"./dialog-test-info.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <p-fieldset legend=\"Barcode\" class=\"p-inputtext-sm p-input-filled p-mt-2\">\r\n        <div class=\"p-formgroup-inline\">\r\n            <strong class=\"p-mt-1 p-mr-4\">Barocde</strong>\r\n            <div class=\"p-field-checkbox\">\r\n                <p-radio-button\r\n                    name=\"barcode\"\r\n                    value=\"yes\"\r\n                    v-model=\"form.barcode\"\r\n                />\r\n                <label>Yes</label>\r\n            </div>\r\n            <div class=\"p-field-checkbox\">\r\n                <p-radio-button\r\n                    name=\"barcode\"\r\n                    value=\"no\"\r\n                    v-model=\"form.barcode\"\r\n                />\r\n                <label>No</label>\r\n            </div>\r\n        </div>\r\n\r\n        <p-fieldset\r\n            legend=\"Sample Position Info\"\r\n            class=\"p-inputtext-sm p-input-filled p-mt-0\"\r\n            :collapsed=\"disabled\"\r\n        >\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-md-8 carrier-box\">\r\n                    <div class=\"p-fluid\">\r\n                        <div class=\"p-field p-grid\">\r\n                            <label class=\"p-col-fixed p-mb-2 p-md-5 p-mb-md-0\">\r\n                                Carrier Number\r\n                            </label>\r\n                            <div class=\"p-col-fixed\" style=\"width: 50px\">\r\n                                <p-input-number\r\n                                    v-model=\"form.carrierNumber\"\r\n                                    :disabled=\"disabled\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-field p-grid\">\r\n                            <label class=\"p-col-fixed p-mb-2 p-md-5 p-mb-md-0\">\r\n                                Position in Carrier\r\n                            </label>\r\n                            <div class=\"p-col-fixed\" style=\"width: 50px\">\r\n                                <p-input-number\r\n                                    v-model=\"form.positionInCarrier\"\r\n                                    :disabled=\"disabled\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"p-md-4\">\r\n                    <div class=\"p-field-radiobutton\">\r\n                        <p-radio-button\r\n                            name=\"system\"\r\n                            value=\"rack\"\r\n                            v-model=\"form.system\"\r\n                            :disabled=\"disabled\"\r\n                        />\r\n                        <label>Rack System</label>\r\n                    </div>\r\n                    <div class=\"p-field-radiobutton\">\r\n                        <p-radio-button\r\n                            name=\"system\"\r\n                            value=\"disk\"\r\n                            v-model=\"form.system\"\r\n                            :disabled=\"disabled\"\r\n                        />\r\n                        <label>Disk System</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </p-fieldset>\r\n    </p-fieldset>\r\n</template>\r\n\r\n<script>\r\nimport { useBloodTestBarcodeInit } from \"@/composable/blood-tests\";\r\nexport default {\r\n    setup() {\r\n        const { form, disabled } = useBloodTestBarcodeInit();\r\n        return {\r\n            form,\r\n            disabled\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.p-field-checkbox,\r\n.p-field-radiobutton {\r\n    margin-bottom: 0;\r\n}\r\n.carrier-box {\r\n    border: 1px solid #dee2e6;\r\n    border-radius: 3px;\r\n}\r\n</style>\r\n","import { render } from \"./dialog-barcode.vue?vue&type=template&id=f9ca91b8&scoped=true\"\nimport script from \"./dialog-barcode.vue?vue&type=script&lang=js\"\nexport * from \"./dialog-barcode.vue?vue&type=script&lang=js\"\n\nimport \"./dialog-barcode.vue?vue&type=style&index=0&id=f9ca91b8&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f9ca91b8\"]])\n\nexport default __exports__","<template>\r\n    <p-fieldset legend=\"Test Group\" class=\"p-inputtext-sm p-input-filled\">\r\n        <p-listbox\r\n            v-model=\"testGroup\"\r\n            :options=\"testGroupsOptions\"\r\n            optionLabel=\"groupName\"\r\n            optionValue=\"curGroup\"\r\n            :multiple=\"true\"\r\n            listStyle=\"height: 200px\"\r\n        />\r\n    </p-fieldset>\r\n\r\n    <p-fieldset\r\n        legend=\"Test Selectiion\"\r\n        class=\"p-inputtext-sm p-input-filled p-mt-2\"\r\n        :class=\"[submitted && isInvalidTests ? 'invalid' : '']\"\r\n    >\r\n        <span v-if=\"submitted && isInvalidTests\" style=\"color: red\">\r\n            Select at least 1\r\n        </span>\r\n\r\n        <p-data-table\r\n            :value=\"testSelectionTable\"\r\n            responsiveLayout=\"scroll\"\r\n            showGridlines\r\n            class=\"p-datatable-sm p-mb-1\"\r\n            v-model:selection=\"seletedTests\"\r\n            dataKey=\"testId\"\r\n            :scrollable=\"true\"\r\n            scrollHeight=\"200px\"\r\n        >\r\n            <p-column field=\"testId\" header=\"Code\" style=\"max-width: 60px\" />\r\n            <p-column field=\"testName\" header=\"Name\" />\r\n            <p-column selectionMode=\"multiple\" style=\"max-width: 3rem\" />\r\n        </p-data-table>\r\n    </p-fieldset>\r\n</template>\r\n\r\n<script>\r\nimport { watch } from \"vue\";\r\nimport { useBloodTestGroupSelectionInit } from \"@/composable/blood-tests\";\r\nexport default {\r\n    setup() {\r\n        const {\r\n            form,\r\n            testGroup,\r\n            testGroupsOptions,\r\n            testSelectionTable,\r\n            seletedTests,\r\n            submitted,\r\n            isInvalidTests\r\n        } = useBloodTestGroupSelectionInit();\r\n\r\n        watch(seletedTests, (newVal) => {\r\n            form.testIdArray = newVal.map((item) => ({\r\n                itemId: item.testId,\r\n                name: item.testName\r\n            }));\r\n            isInvalidTests.value = false;\r\n        });\r\n\r\n        watch(testSelectionTable, (newVal) => {\r\n            seletedTests.value = newVal;\r\n        });\r\n\r\n        return {\r\n            seletedTests,\r\n            testGroup,\r\n            testGroupsOptions,\r\n            testSelectionTable,\r\n            submitted,\r\n            isInvalidTests\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.invalid {\r\n    border: 1px solid red;\r\n}\r\n</style>\r\n","import { render } from \"./dialog-blood-test.vue?vue&type=template&id=ed80d67a&scoped=true\"\nimport script from \"./dialog-blood-test.vue?vue&type=script&lang=js\"\nexport * from \"./dialog-blood-test.vue?vue&type=script&lang=js\"\n\nimport \"./dialog-blood-test.vue?vue&type=style&index=0&id=ed80d67a&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ed80d67a\"]])\n\nexport default __exports__","import { render } from \"./dialog.vue?vue&type=template&id=fab920e0&scoped=true\"\nimport script from \"./dialog.vue?vue&type=script&lang=js\"\nexport * from \"./dialog.vue?vue&type=script&lang=js\"\n\nimport \"./dialog.vue?vue&type=style&index=0&id=fab920e0&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fab920e0\"]])\n\nexport default __exports__","import { DATE_FORMAT_STRING } from \"@/config\";\r\nimport { emitter } from \"@/event-bus\";\r\nimport { format } from \"date-fns\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { computed, inject, reactive, ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { serialize } from \"php-serialize\";\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\nimport { NL_FORM_BASE } from \"@/constants\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport function useBloodTestsReportInit() {\r\n    const store = useStore();\r\n    const orderBloodTestDialog = inject(\"orderBloodTestDialog\");\r\n    const orderBloodTestConfirmDialog = inject(\"orderBloodTestConfirmDialog\");\r\n    const editDailogVisible = inject(\"editDailogVisible\");\r\n    const addBloodDialogvisible = inject(\"addBloodDialogvisible\");\r\n\r\n    const testResults = ref();\r\n    const selectedBloodTest = inject(\"selectedBloodTest\");\r\n    const loading = ref(false);\r\n    const getBloodTestResults = () => {\r\n        loading.value = true;\r\n        store\r\n            .dispatch(\"bloodTest/getBloodTestResults\")\r\n            .then((data) => {\r\n                testResults.value = data;\r\n            })\r\n            .finally(() => (loading.value = false));\r\n    };\r\n\r\n    const getBloodTestResultsWithOpenBarcode = (test) => {\r\n        loading.value = true;\r\n        store\r\n            .dispatch(\"bloodTest/getBloodTestResults\")\r\n            .then((data) => {\r\n                testResults.value = data;\r\n            })\r\n            .finally(() => (loading.value = false));\r\n    };\r\n\r\n    const barcodeDailogVisible = ref(false);\r\n\r\n    const showBarcode = (test) => {\r\n\r\n        store.dispatch(\"bloodTest/printBarcodePDF\", test.testOrderId).then((pdf) => {\r\n            let width = 520;\r\n            let height = 580;\r\n            let left = screen.width / 2 - width / 2;\r\n            let top = screen.height / 2 - height / 2;\r\n\r\n            window.open(\r\n                pdf,\r\n                \"_blank\",\r\n                `height=${height},width=${width},top=${top},left=${left}`\r\n            );\r\n        });\r\n    };\r\n\r\n    // const showBarcodeV2 = (data) => {\r\n    //     const obj = {\r\n    //         bar_id: data.testOrderId,\r\n    //         pCodesLine: data.testItems\r\n    //     };\r\n\r\n    //     let url = `${NL_FORM_BASE}/jrsPHPclientV2/jrs/generate_reportn1.php?report_name=TESTS&report_type=pdf&report_params=${encodeURIComponent(\r\n    //         serialize(obj)\r\n    //     )}`;\r\n    //     window.open(url);\r\n    // };\r\n\r\n    const openPdfReport = () => {\r\n        const params = {\r\n            patientId: store.state.artCycle.patient.id,\r\n            patientName: `${store.state.artCycle.patient.firstName} ${store.state.artCycle.patient.lastName}`,\r\n            // apiToken: store.state.user.accessToken\r\n        };\r\n        const url = `${NL_FORM_BASE}/cycles-reports/print-blood-test-report.php?${new URLSearchParams(\r\n            params\r\n        )}`;\r\n        window.open(url);\r\n    };\r\n\r\n    return {\r\n        store,\r\n        testResults,\r\n        loading,\r\n        getBloodTestResults,\r\n        getBloodTestResultsWithOpenBarcode,\r\n        orderBloodTestConfirmDialog,\r\n        orderBloodTestDialog,\r\n        editDailogVisible,\r\n        addBloodDialogvisible,\r\n        barcodeDailogVisible,\r\n        selectedBloodTest,\r\n        showBarcode,\r\n        openPdfReport\r\n    };\r\n}\r\n\r\nexport function useBloodTestReportInit() {\r\n    const dialogVisible = inject(\"dialogVisible\");\r\n    return { dialogVisible };\r\n}\r\n\r\nexport function useBloodTestDailogInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const orderBloodTestDialog = inject(\"orderBloodTestDialog\");\r\n    const isCycle = inject(\"isCycle\");\r\n\r\n    const form = reactive({\r\n        testOrderId: null,\r\n        cycleId: null,\r\n        patientId: null,\r\n        physicianId: store.state.artCycle.patient.doctorId,\r\n        date: format(new Date(), DATE_FORMAT_STRING),\r\n        site: null,\r\n        isCycle: null,\r\n        testIdArray: [],\r\n        stat: null,\r\n        serverId: null,\r\n        deviceId: null,\r\n        testPriority: null,\r\n        btComments: null,\r\n        label: null,\r\n        bloodMachine: null\r\n    });\r\n    const resetForm = () => {\r\n        form.physicianId = store.state.artCycle.patient.doctorId;\r\n    };\r\n\r\n    const bloodMachineOptions = reactive([1, 2, 3, 4]);\r\n\r\n    const submitted = ref(false);\r\n    const isInvalidTests = ref(false);\r\n    const isInvalidLocation = ref(false);\r\n    const isCycleIdValid = ref(false);\r\n    const router = useRouter();\r\n\r\n    const showBarcode = (test) => {\r\n\r\n        router.push(\"/blood-tests\");\r\n\r\n        // store.dispatch(\"bloodTest/printBarcodePDF\", test.barcode).then((pdfUrl) => {\r\n        //     let width = 520;\r\n        //     let height = 580;\r\n        //     let left = screen.width / 2 - width / 2;\r\n        //     let top = screen.height / 2 - height / 2;\r\n\r\n        //     window.open(\r\n        //         pdfUrl,\r\n        //         \"_blank\",\r\n        //         `height=${height},width=${width},top=${top},left=${left}`\r\n        //     );\r\n        // });\r\n\r\n        // const obj = {\r\n        //     bar_id: test.barcode,\r\n        //     pCodesLine: test.testItems\r\n        // };\r\n\r\n        // let url = `${NL_FORM_BASE}/jrsPHPclientV2/jrs/generate_reportn1.php?report_name=TESTS&report_type=pdf&report_params=${encodeURIComponent(\r\n        //     serialize(obj)\r\n        // )}`;\r\n        // window.open(url);\r\n    };\r\n\r\n    const confirm = useConfirm();\r\n    const changeDoctorConfirmation = () => {\r\n\r\n        if (form.physicianId != store.state.artCycle.patient.doctorId) {\r\n            confirm.require({\r\n                message: \"Are you sure you want to change doctor?\",\r\n                header: \"Confirmation\",\r\n                icon: \"pi pi-exclamation-triangle\",\r\n                accept: () => {\r\n                    save();\r\n                },\r\n                reject: () => {\r\n                    resetForm();\r\n                }\r\n            });\r\n        } else {\r\n            save();\r\n        }\r\n    };\r\n\r\n    const loading = ref(false);\r\n    const save = () => {\r\n        submitted.value = true;\r\n        if (form.testIdArray.length == 0) {\r\n            isInvalidTests.value = true;\r\n            return;\r\n        } else {\r\n            isInvalidTests.value = false;\r\n        }\r\n\r\n        if (form.site == null || form.site === \"\") {\r\n            isInvalidLocation.value = true;\r\n            return;\r\n        } else {\r\n            isInvalidLocation.value = true;\r\n        }\r\n\r\n        if (form.cycleId == null || form.cycleId === \"\") {\r\n            isCycleIdValid.value = true;\r\n            return;\r\n        } else {\r\n            isCycleIdValid.value = true;\r\n        }\r\n\r\n        // console.log(form);\r\n        loading.value = true;\r\n        const reqBody = {\r\n            ...form,\r\n            testIdArray: [...form.testIdArray],\r\n            isCycle: isCycle.value\r\n        };\r\n        // console.log(reqBody);\r\n\r\n        store\r\n            .dispatch(\"bloodTest/addBloodTestOrderItems\", reqBody)\r\n            .then((data) => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n\r\n                emitter.emit(\r\n                    \"blood-test-edit-dailog:reload-test-results-with-open-barcode\",\r\n                    data\r\n                );\r\n\r\n                showBarcode(data);\r\n            })\r\n            .finally(() => {\r\n                submitted.value = false;\r\n                orderBloodTestDialog.value = false;\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    return {\r\n        store,\r\n        orderBloodTestDialog,\r\n        form,\r\n        resetForm,\r\n        changeDoctorConfirmation,\r\n        save,\r\n        submitted,\r\n        loading,\r\n        isInvalidTests,\r\n        isInvalidLocation,\r\n        isCycleIdValid,\r\n        bloodMachineOptions\r\n    };\r\n}\r\n\r\nexport function useBloodTestBarcodeInit() {\r\n    const form = reactive({\r\n        barcode: \"yes\",\r\n        carrierNumber: 1,\r\n        positionInCarrier: 1,\r\n        system: \"rack\"\r\n    });\r\n\r\n    const disabled = computed(() => form.barcode === \"yes\");\r\n\r\n    return {\r\n        form,\r\n        disabled\r\n    };\r\n}\r\n\r\nexport function useBloddTestInfoInit() {\r\n    const store = useStore();\r\n\r\n    const form = inject(\"form\");\r\n    const isInvalidLocation = inject(\"isInvalidLocation\", false);\r\n\r\n    const doctorOptions = computed(() => store.state.doctor.doctors);\r\n    const locationOptions = computed(() => store.state.provider.locations);\r\n    const testPriorityOptions = reactive([\r\n        { value: \"R\", label: \"Routine\" },\r\n        { value: \"S\", label: \"Stat\" },\r\n        { value: \"A\", label: \"As Soon As Possible\" },\r\n        { value: \"T\", label: \"In Time\" },\r\n        { value: \"P\", label: \"Preoperative\" }\r\n    ]);\r\n\r\n    return {\r\n        form,\r\n        doctorOptions,\r\n        locationOptions,\r\n        testPriorityOptions,\r\n        isInvalidLocation\r\n    };\r\n}\r\n\r\n\r\nexport function usePatientInfoInit() {\r\n    const store = useStore();\r\n\r\n    const form = inject(\"form\");\r\n    const isCycleIdValid = inject(\"isCycleIdValid\", false);\r\n\r\n\r\n    const cyclesSummary = computed(\r\n        () => store.state.artCycle.cyclesSummary\r\n    );\r\n\r\n    const cycleOptions = computed(() => {\r\n            let options = [{ label: \"No Cycle\", value: 0 }];\r\n\r\n            if (cyclesSummary.value && cyclesSummary.value.length > 0) {\r\n                // console.log(cyclesSummary.value);\r\n                const cycleIds = cyclesSummary.value\r\n                    .filter(item => item.cycleCompleted === false)\r\n                    .map((item) => ({\r\n                        label:\r\n                            item.cycleId +\r\n                            \" - \" +\r\n                            item.cycleType +\r\n                            \" - \" +\r\n                            item.cycleDate.substring(0, 10),\r\n                        value: item.cycleId\r\n                    }));\r\n                options = options.concat(cycleIds);\r\n            }\r\n\r\n            return options;\r\n    });\r\n\r\n    \r\n    const selectedCycle = computed(\r\n            () => store.state.artCycle.selectedCycle\r\n        );\r\n\r\n    \r\n    return {\r\n        form,\r\n        cycleOptions,\r\n        selectedCycle,\r\n        isCycleIdValid\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport function useBloodTestGroupSelectionInit() {\r\n    const store = useStore();\r\n\r\n    const form = inject(\"form\");\r\n    const submitted = inject(\"submitted\");\r\n    const isInvalidTests = inject(\"isInvalidTests\");\r\n\r\n    const testGroup = ref([]);\r\n    const testGroupsOptions = computed(\r\n        () => store.getters[\"bloodTest/getBloodGroups\"]\r\n    );\r\n    const testSelectionTable = computed(() => {\r\n        if (testGroup.value.length == 0) return [];\r\n        else if (testGroup.value.includes(\"all\")) {\r\n            const booodTests = [];\r\n            for (const group of store.state.bloodTest.bloodGroups) {\r\n                booodTests.push(...group.testItems);\r\n            }\r\n            return [\r\n                ...new Map(\r\n                    booodTests.map((item) => [item[\"testId\"], item])\r\n                ).values()\r\n            ];\r\n        } else {\r\n            const booodTests = [];\r\n            for (const group of store.state.bloodTest.bloodGroups) {\r\n                if (testGroup.value.includes(group.curGroup)) {\r\n                    booodTests.push(...group.testItems);\r\n                }\r\n            }\r\n            return [\r\n                ...new Map(\r\n                    booodTests.map((item) => [item[\"testId\"], item])\r\n                ).values()\r\n            ];\r\n        }\r\n    });\r\n    const seletedTests = ref([]);\r\n\r\n    return {\r\n        form,\r\n        testSelectionTable,\r\n        seletedTests,\r\n        testGroup,\r\n        testGroupsOptions,\r\n        submitted,\r\n        isInvalidTests\r\n    };\r\n}\r\n\r\nexport function useBloodTestEditDialogInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const editDailogVisible = inject(\"editDailogVisible\");\r\n    const selectedBloodTest = inject(\"selectedBloodTest\");\r\n    const isCanceled = ref(false);\r\n\r\n    const form = reactive({\r\n        cycleId: null,\r\n        bloodTestOrderDate: null,\r\n        patientId: null,\r\n        testOrderId: null,\r\n        bloodTestResultDate: null,\r\n        etwo: null,\r\n        etwoStat: null,\r\n        lh: null,\r\n        lhStat: null,\r\n        prog: null,\r\n        progStat: null,\r\n        fsh: null,\r\n        fshStat: null,\r\n        tsh: null,\r\n        tshStat: null,\r\n        prl: null,\r\n        prlStat: null,\r\n        bhcg: null,\r\n        bhcgStat: null,\r\n        dheas: null,\r\n        dheasStat: null,\r\n        testo: null,\r\n        testoStat: null,\r\n        amh: null,\r\n        amhStat: null,\r\n        site: null,\r\n        physicianId: null\r\n    });\r\n\r\n    const emptyFrom = () => {\r\n        form.cycleId = null;\r\n        form.bloodTestOrderDate = null;\r\n        form.patientId = null;\r\n        form.testOrderId = null;\r\n        form.bloodTestResultDate = null;\r\n        form.etwo = null;\r\n        form.etwoStat = null;\r\n        form.lh = null;\r\n        form.lhStat = null;\r\n        form.prog = null;\r\n        form.progStat = null;\r\n        form.fsh = null;\r\n        form.fshStat = null;\r\n        form.tsh = null;\r\n        form.tshStat = null;\r\n        form.prl = null;\r\n        form.prlStat = null;\r\n        form.bhcg = null;\r\n        form.bhcgStat = null;\r\n        form.dheas = null;\r\n        form.dheasStat = null;\r\n        form.testo = null;\r\n        form.testoStat = null;\r\n        form.amh = null;\r\n        form.amhStat = null;\r\n    };\r\n\r\n    const getBloodTest = () => {\r\n        isCanceled.value = false;\r\n        store\r\n            .dispatch(\r\n                \"bloodTest/getBloodTest\",\r\n                selectedBloodTest.value.testOrderId\r\n            )\r\n            .then((data) => {\r\n                form.cycleId = data.cycleId;\r\n                form.bloodTestOrderDate = data.bloodTestOrderDate;\r\n                form.patientId = data.patientId;\r\n                form.testOrderId = data.testOrderId;\r\n                form.bloodTestResultDate = data.bloodTestResultDate;\r\n                form.etwo = data.etwo;\r\n                form.etwoStat = data.etwoStat;\r\n                form.lh = data.lh;\r\n                form.lhStat = data.lhStat;\r\n                form.prog = data.prog;\r\n                form.progStat = data.progStat;\r\n                form.fsh = data.fsh;\r\n                form.fshStat = data.fshStat;\r\n                form.tsh = data.tsh;\r\n                form.tshStat = data.tshStat;\r\n                form.prl = data.prl;\r\n                form.prlStat = data.prlStat;\r\n                form.bhcg = data.bhcg;\r\n                form.bhcgStat = data.bhcgStat;\r\n                form.dheas = data.dheas;\r\n                form.dheasStat = data.dheasStat;\r\n                form.testo = data.testo;\r\n                form.testoStat = data.testoStat;\r\n                form.amh = data.amh;\r\n                form.amhStat = data.amhStat;\r\n            })\r\n            .catch(() => {\r\n                emptyFrom();\r\n            });\r\n    };\r\n\r\n    const saveAll = () => {\r\n        store\r\n            .dispatch(\"bloodTest/saveAllBloodTest\", { ...form })\r\n            .then((data) => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Successful\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n                editDailogVisible.value = false;\r\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const deleteResult = () => {\r\n        store\r\n            .dispatch(\r\n                \"bloodTest/deleteResult\",\r\n                selectedBloodTest.value.testOrderId\r\n            )\r\n            .then((data) => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Successful\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n                editDailogVisible.value = false;\r\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const deleteOrder = () => {\r\n        store\r\n            .dispatch(\r\n                \"bloodTest/deleteOrder\",\r\n                selectedBloodTest.value.testOrderId\r\n            )\r\n            .then((data) => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Successful\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n                editDailogVisible.value = false;\r\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const cancelBloodTest = (testCode) => {\r\n        store\r\n            .dispatch(\"bloodTest/cancelBloodTest\", {\r\n                testOrderId: selectedBloodTest.value.testOrderId,\r\n                testCode\r\n            })\r\n            .then((data) => {\r\n                isCanceled.value = true;\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Successful\",\r\n                    detail: \"Save Successful\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const onHide = () => {\r\n        if (isCanceled.value) {\r\n            emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\r\n        }\r\n    };\r\n\r\n    return {\r\n        editDailogVisible,\r\n        form,\r\n        getBloodTest,\r\n        saveAll,\r\n        deleteOrder,\r\n        deleteResult,\r\n        cancelBloodTest,\r\n        onHide\r\n    };\r\n}\r\nexport function useBloodTestAddDialogInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const addBloodDialogvisible = inject(\"addBloodDialogvisible\");\r\n\r\n    const form = reactive({\r\n        cycleId: null,\r\n        bloodTestOrderDate: null,\r\n        patientId: null,\r\n        testOrderId: null,\r\n        bloodTestResultDate: null,\r\n        etwo: null,\r\n        etwoStat: null,\r\n        lh: null,\r\n        lhStat: null,\r\n        prog: null,\r\n        progStat: null,\r\n        fsh: null,\r\n        fshStat: null,\r\n        tsh: null,\r\n        tshStat: null,\r\n        prl: null,\r\n        prlStat: null,\r\n        bhcg: null,\r\n        bhcgStat: null,\r\n        dheas: null,\r\n        dheasStat: null,\r\n        testo: null,\r\n        testoStat: null,\r\n        amh: null,\r\n        amhStat: null,\r\n        site: null,\r\n        physicianId: null,\r\n        assignCycle: null\r\n    });\r\n\r\n    const emptyFrom = () => {\r\n        form.cycleId = null;\r\n        form.bloodTestOrderDate = null;\r\n        form.patientId = null;\r\n        form.testOrderId = null;\r\n        form.bloodTestResultDate = null;\r\n        form.etwo = null;\r\n        form.etwoStat = null;\r\n        form.lh = null;\r\n        form.lhStat = null;\r\n        form.prog = null;\r\n        form.progStat = null;\r\n        form.fsh = null;\r\n        form.fshStat = null;\r\n        form.tsh = null;\r\n        form.tshStat = null;\r\n        form.prl = null;\r\n        form.prlStat = null;\r\n        form.bhcg = null;\r\n        form.bhcgStat = null;\r\n        form.dheas = null;\r\n        form.dheasStat = null;\r\n        form.testo = null;\r\n        form.testoStat = null;\r\n        form.amh = null;\r\n        form.amhStat = null;\r\n    };\r\n\r\n    const cycle = computed(() => store.state.artCycle.selectedCycle);\r\n    const patient = computed(() => store.state.artCycle.patient);\r\n\r\n    const isCycleChecked = computed(() => {\r\n        return cycle.value && cycle.value.cycleId ? true : false;\r\n    });\r\n\r\n    const isInvalidLocation = inject(\"isInvalidLocation\", false);\r\n\r\n    const doctorOptions = computed(() => store.state.doctor.doctors);\r\n    const locationOptions = computed(() => store.state.provider.locations);\r\n\r\n    const isFormValid = () => {\r\n        return form.etwo || form.lh || form.prog || form.fsh ||\r\n            form.tsh || form.prl || form.bhcg || form.dheas || form.testo || form.amh;\r\n    };\r\n\r\n    const saveBloodTest = () => {\r\n        if (!isFormValid()) {\r\n            toast.add({\r\n                severity: \"warn\",\r\n                summary: \"Validation Error\",\r\n                detail: \"At least one field is required before saving.\",\r\n                life: 3000\r\n            });\r\n            return;\r\n        }\r\n        const payload = {\r\n            ...form,\r\n            bloodTestResultDate: format(form.bloodTestResultDate, DATE_FORMAT_STRING),\r\n            cycleId: cycle.value ? cycle.value.cycleId : null,\r\n            patientId: patient.value ? patient.value.chart : null,\r\n        };\r\n        store\r\n            .dispatch(\"bloodTest/addBloodTest\", { ...payload })\r\n            .then((data) => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Successful\",\r\n                    detail: \"Add Successful\",\r\n                    life: 3000\r\n                });\r\n                addBloodDialogvisible.value = false;\r\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\r\n            })\r\n            .catch(() => { });\r\n    };\r\n\r\n    const addBlood = () => {\r\n        addBloodDialogvisible.value = true;\r\n    };\r\n\r\n    return {\r\n        addBloodDialogvisible,\r\n        saveBloodTest,\r\n        addBlood,\r\n        form,\r\n        isInvalidLocation,\r\n        locationOptions,\r\n        doctorOptions,\r\n        cycle,\r\n        patient,\r\n        isCycleChecked,\r\n        isFormValid\r\n    };\r\n}\r\n","<template>\r\n    <p-dialog\r\n        header=\"Order Blood Test\"\r\n        v-model:visible=\"orderBloodTestConfirmDialog\"\r\n        :style=\"{ width: '460px' }\"\r\n        :modal=\"true\"\r\n        class=\"p-inputtext-sm p-input-filled\"\r\n    >\r\n        <div class=\"p-grid\">\r\n            <p>This Blood test will not be attced to the cycle!</p>\r\n            <p>\r\n                If you want this blood test to be attched to cycle, please\r\n                create it from cycle monitoring page\r\n            </p>\r\n        </div>\r\n\r\n        <p-button label=\"Ok\" class=\"p-button-success p-mr-2\" @click=\"onOK\" />\r\n\r\n        <p-button label=\"Cancel\" class=\"p-button-danger\" @click=\"onCancel\" />\r\n    </p-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { inject } from \"vue\";\r\nexport default {\r\n    setup() {\r\n        const orderBloodTestDialog = inject(\"orderBloodTestDialog\");\r\n        const orderBloodTestConfirmDialog = inject(\"orderBloodTestConfirmDialog\");\r\n        const isCycle = inject(\"isCycle\");\r\n\r\n        const onOK = () => {\r\n            isCycle.value = 0;\r\n            orderBloodTestDialog.value = true;\r\n            orderBloodTestConfirmDialog.value = false;\r\n        };\r\n\r\n        const onCancel = () => {\r\n            orderBloodTestConfirmDialog.value = false;\r\n        };\r\n\r\n\r\n        return { orderBloodTestConfirmDialog, onOK, onCancel };\r\n    }\r\n};\r\n</script>\r\n","import { render } from \"./confirm-dialog.vue?vue&type=template&id=5bc0e5b7\"\nimport script from \"./confirm-dialog.vue?vue&type=script&lang=js\"\nexport * from \"./confirm-dialog.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dialog-barcode.vue?vue&type=style&index=0&id=f9ca91b8&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dialog-blood-test.vue?vue&type=style&index=0&id=ed80d67a&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dialog.vue?vue&type=style&index=0&id=fab920e0&scoped=true&lang=css\""],"sourceRoot":""}