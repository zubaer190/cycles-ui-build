{"version":3,"sources":["webpack:///./node_modules/core-js/internals/engine-ff-version.js","webpack:///./node_modules/date-fns/esm/addDays/index.js","webpack:///./src/composable/fertilization.js","webpack:///./node_modules/core-js/modules/es.array.sort.js","webpack:///./node_modules/core-js/internals/engine-webkit-version.js","webpack:///./node_modules/core-js/internals/array-sort.js","webpack:///./node_modules/core-js/internals/engine-is-ie-or-edge.js"],"names":["userAgent","firefox","match","module","exports","addDays","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","thawingDateValidator","fate","helpers","withParams","type","value","req","frozenDateValidator","discardingDateValidator","strawValidator","useFertilizationInit","store","useStore","router","useRouter","showGrid","ref","problem","isBornCycle","computed","getters","embryoDetailDialog","selectedEmbryo","reactive","day","errorMsg","fertId","fertLineId","occId","cycleType","f_incubator","aspirationForm","total","m2","m1","gv","atr","ezona","eggCleaningBy","eggRetrivalBy","setSelectedEmbryo","fertDay","fertLine","lineId","embryoDetail","dayNo","oocId","cultureDay","embryoAge","stage","grade","score","time","oocGroup","clinician","embryologist","embryologistDoingBiopsy","embryologistDoingFreezing","embryologistDoingThawing","embryologistDoingTransfer","embryologistDoingScoring","embryoDoingColRemoval","straw","frozenDate","thawingDate","assistedHatching","biopsy","discardingDate","transferDate","uniformCells","cellsMultinucleation","fragmentation","cellsCompaction","asphericalForm","vacuolisation","granularCytoplasm","abnormalZona","fragmentedPolarBody","fragmentsInPus","oocDiameter","thicknessZpN","thicknessZpS","thicknessZpE","thicknessZpW","incubator","media","lotNumber","dateOpened","media2","lotNumber2","dateOpened2","savedUser","savedAt","usersSignature","description","newImage","images","frozenBy","thawedBy","dewar","canisterNo","cassetteId","plugColor","cassetteType","embryoSurvived","freezerId","location","rules","required","validator","withMessage","validDate","embryoDetailV$","useVuelidate","embryoDetailSubmitted","getEmbryoDetail","lineIndex","state","fertilization","fertilizationLines","findIndex","item","defaultClinician","defaultEmbryologist","console","log","artCycle","patient","doctorId","cassetteColor","dispatch","then","data","TIME_0","finally","loadEmbryoDetail","onCellClick","openEmbryoDetailDialog","closeEmbryoDetailDialog","getFertilization","selectedCycle","emitter","emit","cycleId","catch","push","useFertilizationGridInit","confirm","useConfirm","gridDesc","sortToggle","fertilizationGrid","sort","a","b","noEmbryo","createFertilizationLineDialog","fertilizationGridDays","editable","inject","embryoDetailCreateConfirmDailog","moveGridCell","direction","days","lineIdx","line","dayIdx","undefined","fillDaysRow","val","fertDate0","fertDate1","fertDate2","fertDate3","fertDate4","fertDate5","fertDate6","fertDate7","getFertilizationLines","ferilizationLine","strawId","comment","isFertilizationEdit","createFetilizationRow","exp","length","checkAll","checkLine","editFetilizationRow","thawDate","selectedLines","editFetilizationRows","forEach","index","deleteLines","require","message","header","icon","accept","lineIds","reject","showFateInGrid","col","updateFertilization","payload","format","DATE_FORMAT_STRING","onGridCellClick","openPdfReport","url","NL_FORM_BASE","window","open","useEmbryoDetailDialogInit","toast","useToast","selectedFreezer","loading","cyroStorage","source","embryoDevelopment","fertilizationId","freezDate","patientId","day7Stage","day7Grade","cyroStorageV$","cyroStorageSubmitted","loadStrawList","getLoadaedStrwList","id","$axios","get","saveEmbryoDetail","$invalid","formData","selectedFrozenOocId","image","autoFreezId","add","severity","summary","life","err","frResp","msg","useTreeViewInit","treeViewData","key","name","provider","providers","doctor","embryologists","img","ORIGIN","openImage","useCraeteFertilizationFromInit","form","fertTime0","fertInit0","fertTime1","fertInit1","fertTime2","fertInit2","fertTime3","fertInit3","fertTime5","fertInit5","fertTime6","fertInit6","fertTime7","fertInit7","expComment","v$","submitted","createFertilization","populateDates","newValue","useFertilizationLineCreateDialog","isEdit","fateOptions","cycleTypeOptions","cycleTypes","map","save","deleteLoading","deleteFertilizationLine","primaryCycleValidator","otherPatient","useEbmryoInfo","primaryCycleId","otherPrimaryCycleId","fromOutside","primaryCycles","filteredPatient","patientFilter","event","Service","searchDemographic","term","query","trim","sex","toLowerCase","resp","otherPrimaryCycles","getOtherPrimaryCycles","getPrimaryCyclesService","demographicNo","cycleDate","label","emptyEbmryoAssignedTo","getDefaultFreshEbmryo","cycelId","onEmbyroAssingedToChageHandler","emptyDonor","onOtherCycleIdChangeHandler","otherPatientId","updatePrimaryCycle","status","$","aFunction","toObject","toLength","fails","internalSort","arrayMethodIsStrict","FF","IE_OR_EDGE","V8","WEBKIT","test","nativeSort","FAILS_ON_UNDEFINED","FAILS_ON_NULL","STRICT_METHOD","STABLE_SORT","code","chr","result","String","fromCharCode","k","v","charAt","FORCED","getSortCompare","comparefn","x","y","target","proto","forced","array","this","call","itemsLength","items","arrayLength","webkit","floor","Math","mergeSort","middle","insertionSort","merge","slice","element","j","i","left","right","llength","rlength","lindex","rindex","UA"],"mappings":"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","file":"js/chunk-2732bfce.6427c03f.js","sourcesContent":["var userAgent = require('../internals/engine-user-agent');\n\nvar firefox = userAgent.match(/firefox\\/(\\d+)/i);\n\nmodule.exports = !!firefox && +firefox[1];\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import { DATE_FORMAT_STRING, ORIGIN } from \"@/config\";\r\nimport { emitter } from \"@/event-bus\";\r\nimport { addDays } from \"date-fns\";\r\nimport { format } from \"date-fns/esm\";\r\nimport { computed, inject, onMounted, onUnmounted, reactive, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport useVuelidate from \"@vuelidate/core\";\r\nimport { helpers, required } from \"@vuelidate/validators\";\r\nimport { buildPdfUrl } from \"@/service/utils\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { useConfirm } from \"primevue/useconfirm\";\r\nimport Service from \"@/service/art-cycle.js\";\r\nimport {\r\n    getPrimaryCycles as getPrimaryCyclesService,\r\n    updatePrimaryCycle\r\n} from \"@/service/fertilization\";\r\nimport { validDate } from \"@/composable/validator\";\r\nimport { TIME_0 } from \"@/constants\";\r\nimport { NL_FORM_BASE } from \"@/constants\";\r\nimport { $axios } from \"@/service/app-http\";\r\n\r\nconst column = {\r\n    employeeId: null,\r\n    day1Stage: null,\r\n    day2Stage: null,\r\n    day3Stage: null,\r\n    day4Stage: null,\r\n    day5Stage: null,\r\n    day6Stage: null,\r\n    day7Stage: null,\r\n    day8Stage: null,\r\n    comment: null\r\n};\r\n\r\nconst thawingDateValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (fate.value == \"Thawed\") {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst frozenDateValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (fate.value == \"Frozen\") {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst discardingDateValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (fate.value == \"Discard\") {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nconst strawValidator = (fate) =>\r\n    helpers.withParams({ type: \"fate\" }, (value) => {\r\n        if (\r\n            fate.value == \"Transfer\"\r\n            //|| fate.value == \"Discard\"\r\n        ) {\r\n            return helpers.req(value);\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\nexport function useFertilizationInit() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    const showGrid = ref(false);\r\n    const problem = ref(false);\r\n    const isBornCycle = computed(() => store.getters[\"artCycle/isBornCycle\"]);\r\n\r\n    const embryoDetailDialog = ref(false);\r\n\r\n    const selectedEmbryo = reactive({\r\n        day: null,\r\n        errorMsg: \"\",\r\n        date: null,\r\n        fertId: null,\r\n        fertLineId: null,\r\n        occId: null,\r\n        cycleType: null,\r\n        f_incubator: null,\r\n    });\r\n\r\n    const aspirationForm = reactive({\r\n        total: null,\r\n        m2: null,\r\n        m1: null,\r\n        gv: null,\r\n        atr: null,\r\n        ezona: null,\r\n        eggCleaningBy: null,\r\n        eggRetrivalBy: null\r\n    });\r\n\r\n    const setSelectedEmbryo = (fertDay, fertLine) => {\r\n        //console.log(fertDay);\r\n        selectedEmbryo.cycleType = fertLine.cycleType;\r\n        selectedEmbryo.day = fertDay.day;\r\n        selectedEmbryo.date = fertDay.date;\r\n        selectedEmbryo.fertId = fertLine.fertId;\r\n        selectedEmbryo.fertLineId = fertLine.lineId;\r\n        selectedEmbryo.f_incubator = fertLine.f_incubator;\r\n        selectedEmbryo.occId = fertLine[`day${fertDay.day}Id`]\r\n            ? fertLine[`day${fertDay.day}Id`]\r\n            : 0;\r\n        selectedEmbryo.errorMsg = \"\";\r\n    };\r\n\r\n    const embryoDetail = reactive({\r\n        fertLineId: null,\r\n        dayNo: null,\r\n        oocId: 0,\r\n        cultureDay: selectedEmbryo.date,\r\n        embryoAge: null,\r\n        stage: null,\r\n        grade: null,\r\n        score: null,\r\n        time: null,\r\n        oocGroup: null,\r\n        clinician: null,\r\n        embryologist: null,\r\n        embryologistDoingBiopsy: null,\r\n        embryologistDoingFreezing: null,\r\n        embryologistDoingThawing: null,\r\n        embryologistDoingTransfer: null,\r\n        embryologistDoingScoring: null,\r\n        embryoDoingColRemoval: null,\r\n        fate: null,\r\n        straw: null,\r\n        frozenDate: null,\r\n        thawingDate: null,\r\n        assistedHatching: null,\r\n        biopsy: null,\r\n        discardingDate: null,\r\n        transferDate: null,\r\n\r\n        uniformCells: null,\r\n        cellsMultinucleation: null,\r\n        fragmentation: null,\r\n        cellsCompaction: null,\r\n        asphericalForm: null,\r\n        vacuolisation: null,\r\n        granularCytoplasm: null,\r\n        abnormalZona: false,\r\n        fragmentedPolarBody: false,\r\n        fragmentsInPus: false,\r\n\r\n        oocDiameter: null,\r\n        thicknessZpN: null,\r\n        thicknessZpS: null,\r\n        thicknessZpE: null,\r\n        thicknessZpW: null,\r\n\r\n        incubator: selectedEmbryo.f_incubator,\r\n        media: null,\r\n        lotNumber: null,\r\n        dateOpened: null,\r\n        media2: null,\r\n        lotNumber2: null,\r\n        dateOpened2: null,\r\n        savedUser: null,\r\n        savedAt: null,\r\n        usersSignature: null,\r\n\r\n        description: null,\r\n        newImage: null,\r\n        images: [],\r\n\r\n        frozenBy: null,\r\n        thawedBy: null,\r\n        dewar: null,\r\n        canisterNo: null,\r\n        cassetteId: null,\r\n        plugColor: null,\r\n        cassetteType: null,\r\n        embryoSurvived: null,\r\n        freezerId: null,\r\n        // freezerLabel: null,\r\n        location: null\r\n    });\r\n\r\n    let rules = {\r\n        stage: { required },\r\n        straw: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                strawValidator(computed(() => embryoDetail.fate))\r\n            )\r\n        },\r\n        thawingDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                thawingDateValidator(computed(() => embryoDetail.fate))\r\n            ),\r\n            validDate\r\n        },\r\n        frozenDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                frozenDateValidator(computed(() => embryoDetail.fate))\r\n            ),\r\n            validDate\r\n        },\r\n        discardingDate: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required\",\r\n                discardingDateValidator(computed(() => embryoDetail.fate))\r\n            ),\r\n            validDate\r\n        }\r\n    };\r\n    const embryoDetailV$ = useVuelidate(rules, embryoDetail);\r\n    const embryoDetailSubmitted = ref(false);\r\n\r\n    const getEmbryoDetail = () => {\r\n        let occId = selectedEmbryo.occId;\r\n\r\n        let lineIndex = store.state.fertilization.fertilizationLines.findIndex(\r\n            (item) => item.lineId == selectedEmbryo.fertLineId\r\n        );\r\n\r\n        let { defaultClinician, defaultEmbryologist } = {\r\n            ...store.state.fertilization.fertilizationLines[lineIndex]\r\n        };\r\n\r\n        console.log(\"here\");\r\n        console.log(store.state.fertilization.fertilization.clinician);\r\n        embryoDetail.clinician =\r\n            store.state.fertilization.fertilization.clinician == null\r\n                ? defaultClinician\r\n                : store.state.fertilization.fertilization.clinician;\r\n\r\n\r\n        if (embryoDetail.clinician == null) {\r\n            embryoDetail.clinician = store.state.artCycle.patient.doctorId;\r\n        }\r\n\r\n        if (occId == 0) {\r\n            // if (selectedEmbryo.day == embryoDetail.embryoAge) {\r\n            //     console.log(\"problem???\");\r\n            //     //return;\r\n            // }\r\n\r\n            embryoDetail.dayNo = null;\r\n            embryoDetail.oocId = null;\r\n            embryoDetail.cultureDay = null;\r\n            embryoDetail.embryoAge = null;\r\n            embryoDetail.stage = null;\r\n            embryoDetail.grade = null;\r\n            embryoDetail.score = null;\r\n            embryoDetail.time = null;\r\n            embryoDetail.oocGroup = null;\r\n\r\n            embryoDetail.embryologist = defaultEmbryologist;\r\n            embryoDetail.uniformCells = null;\r\n            embryoDetail.cellsMultinucleation = null;\r\n            embryoDetail.fragmentation = null;\r\n            embryoDetail.cellsCompaction = null;\r\n            embryoDetail.asphericalForm = null;\r\n            embryoDetail.vacuolisation = null;\r\n            embryoDetail.granularCytoplasm = null;\r\n            embryoDetail.oocDiameter = null;\r\n            embryoDetail.thicknessZpN = null;\r\n            embryoDetail.thicknessZpS = null;\r\n            embryoDetail.thicknessZpE = null;\r\n            embryoDetail.thicknessZpW = null;\r\n            // embryoDetail.incubator = null;\r\n            embryoDetail.media = null;\r\n            embryoDetail.lotNumber = null;\r\n            embryoDetail.dateOpened = null;\r\n            embryoDetail.media2 = null;\r\n            embryoDetail.lotNumber2 = null;\r\n            embryoDetail.dateOpened2 = null;\r\n            embryoDetail.savedUser = null;\r\n            embryoDetail.savedAt = null;\r\n            embryoDetail.usersSignature = null;\r\n            embryoDetail.description = null;\r\n            embryoDetail.newImage = null;\r\n            embryoDetail.images = [];\r\n            embryoDetail.abnormalZona = false;\r\n            embryoDetail.fragmentedPolarBody = false;\r\n            embryoDetail.fragmentsInPus = false;\r\n            embryoDetail.fate = null;\r\n            embryoDetail.straw = null;\r\n            embryoDetail.frozenDate = null;\r\n            embryoDetail.thawingDate = null;\r\n            embryoDetail.discardingDate = null;\r\n            embryoDetail.transferDate = null;\r\n            embryoDetail.assistedHatching = null;\r\n            embryoDetail.biopsy = null;\r\n            embryoDetail.embryologistDoingBiopsy = null;\r\n\r\n            embryoDetail.embryologistDoingFreezing = null;\r\n            embryoDetail.embryologistDoingThawing = null;\r\n            embryoDetail.embryologistDoingTransfer = null;\r\n            embryoDetail.embryologistDoingScoring = null;\r\n            embryoDetail.embryoDoingColRemoval = null;\r\n\r\n            embryoDetail.canisterNo = null;\r\n            embryoDetail.cassetteId = null;\r\n            embryoDetail.cassetteType = null;\r\n            embryoDetail.cassetteColor = null;\r\n            embryoDetail.dewar = null;\r\n            embryoDetail.embryoSurvived = null;\r\n            embryoDetail.plugColor = null;\r\n            embryoDetail.freezerId = null;\r\n            embryoDetail.location = null;\r\n\r\n            store\r\n                .dispatch(\r\n                    \"fertilization/getFertlizationEmbryoDetailFromStart\",\r\n                    {\r\n                        lineId: selectedEmbryo.fertLineId,\r\n                        dayNo: selectedEmbryo.day\r\n                    }\r\n                )\r\n                .then((data) => {\r\n                    embryoDetail.dayNo = data.dayNo;\r\n                    //embryoDetail.oocId = data.oocId;\r\n                    embryoDetail.cultureDay = data.cultureDay;\r\n                    embryoDetail.embryoAge = data.embryoAge;\r\n                    embryoDetail.stage = data.stage;\r\n                    embryoDetail.grade = data.grade;\r\n                    embryoDetail.score = data.score;\r\n                    embryoDetail.time = data.time;\r\n                    embryoDetail.oocGroup = data.oocGroup;\r\n                    if (data.clinician != null)\r\n                        embryoDetail.clinician = data.clinician;\r\n                    embryoDetail.embryologist = data.embryologist\r\n                        ? data.embryologist\r\n                        : defaultEmbryologist;\r\n                    embryoDetail.uniformCells = data.uniformCells;\r\n                    embryoDetail.cellsMultinucleation =\r\n                        data.cellsMultinucleation;\r\n                    embryoDetail.fragmentation = data.fragmentation;\r\n                    embryoDetail.cellsCompaction = data.cellsCompaction;\r\n                    embryoDetail.asphericalForm = data.asphericalForm;\r\n                    embryoDetail.vacuolisation = data.vacuolisation;\r\n                    embryoDetail.granularCytoplasm = data.granularCytoplasm;\r\n                    embryoDetail.oocDiameter = data.oocDiameter;\r\n                    embryoDetail.thicknessZpN = data.thicknessZpN;\r\n                    embryoDetail.thicknessZpS = data.thicknessZpS;\r\n                    embryoDetail.thicknessZpE = data.thicknessZpE;\r\n                    embryoDetail.thicknessZpW = data.thicknessZpW;\r\n                    embryoDetail.incubator = data.incubator;\r\n\r\n                    embryoDetail.media = data.media;\r\n                    embryoDetail.lotNumber = data.lotNumber;\r\n                    embryoDetail.dateOpened = data.dateOpened\r\n                        ? new Date(data.dateOpened + TIME_0)\r\n                        : null;\r\n                    embryoDetail.media2 = data.media2;\r\n                    embryoDetail.lotNumber2 = data.lotNumber2;\r\n                    embryoDetail.dateOpened2 = data.dateOpened2\r\n                        ? new Date(data.dateOpened2 + TIME_0)\r\n                        : null;\r\n                    embryoDetail.savedUser = data.savedUser;\r\n                    embryoDetail.savedAt = data.savedAt;\r\n                    embryoDetail.description = data.description;\r\n                    embryoDetail.newImage = null;\r\n                    embryoDetail.images = data.images;\r\n                    embryoDetail.abnormalZona = data.abnormalZona;\r\n                    embryoDetail.fragmentedPolarBody = data.fragmentedPolarBody;\r\n                    embryoDetail.fragmentsInPus = data.fragmentsInPus;\r\n                    embryoDetail.fate = data.fate;\r\n                    //embryoDetail.straw = data.straw;\r\n                    embryoDetail.frozenDate = data.frozenDate\r\n                        ? new Date(data.frozenDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.thawingDate = data.thawingDate\r\n                        ? new Date(data.thawingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.transferDate = data.transferDate\r\n                        ? new Date(data.transferDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.discardingDate = data.discardingDate\r\n                        ? new Date(data.discardingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.assistedHatching = data.assistedHatching;\r\n                    embryoDetail.biopsy = data.biopsy;\r\n                    embryoDetail.embryologistDoingBiopsy =\r\n                        data.embryologistDoingBiopsy;\r\n\r\n                    embryoDetail.embryologistDoingFreezing = data.embryologistDoingFreezing;\r\n                    embryoDetail.embryologistDoingThawing = data.embryologistDoingThawing;\r\n                    embryoDetail.embryologistDoingTransfer = data.embryologistDoingTransfer;\r\n                    embryoDetail.embryologistDoingScoring = data.embryologistDoingScoring;\r\n                    embryoDetail.embryoDoingColRemoval = data.embryoDoingColRemoval;\r\n\r\n                    embryoDetail.canisterNo = data.canisterNo;\r\n                    embryoDetail.cassetteId = data.cassetteId;\r\n                    embryoDetail.cassetteType = data.cassetteType;\r\n                    embryoDetail.cassetteColor = data.cassetteColor;\r\n                    embryoDetail.dewar = data.dewar;\r\n                    embryoDetail.embryoSurvived = data.embryoSurvived;\r\n                    embryoDetail.plugColor = data.plugColor;\r\n                    embryoDetail.frozenBy = data.frozenBy;\r\n                    embryoDetail.thawedBy = data.thawedBy;\r\n                    embryoDetail.location = null;\r\n                    embryoDetail.freezerId = data.freezerId;\r\n                    // todo\r\n                    // embryoDetail.freezer = data\r\n                })\r\n                .finally(() => { });\r\n        } else {\r\n            store\r\n                .dispatch(\"fertilization/getFertlizationEmbryoDetail\", occId)\r\n                .then((data) => {\r\n                    embryoDetail.dayNo = data.dayNo;\r\n                    embryoDetail.oocId = data.oocId;\r\n                    embryoDetail.cultureDay = data.cultureDay;\r\n                    embryoDetail.embryoAge = data.embryoAge;\r\n                    embryoDetail.stage = data.stage;\r\n                    embryoDetail.grade = data.grade;\r\n                    embryoDetail.score = data.score;\r\n                    embryoDetail.time = data.time;\r\n                    embryoDetail.oocGroup = data.oocGroup;\r\n\r\n                    if (data.clinician != null)\r\n                        embryoDetail.clinician = data.clinician;\r\n\r\n                    embryoDetail.embryologist = data.embryologist\r\n                        ? data.embryologist\r\n                        : defaultEmbryologist;\r\n                    embryoDetail.uniformCells = data.uniformCells;\r\n                    embryoDetail.cellsMultinucleation =\r\n                        data.cellsMultinucleation;\r\n                    embryoDetail.fragmentation = data.fragmentation;\r\n                    embryoDetail.cellsCompaction = data.cellsCompaction;\r\n                    embryoDetail.asphericalForm = data.asphericalForm;\r\n                    embryoDetail.vacuolisation = data.vacuolisation;\r\n                    embryoDetail.granularCytoplasm = data.granularCytoplasm;\r\n                    embryoDetail.oocDiameter = data.oocDiameter;\r\n                    embryoDetail.thicknessZpN = data.thicknessZpN;\r\n                    embryoDetail.thicknessZpS = data.thicknessZpS;\r\n                    embryoDetail.thicknessZpE = data.thicknessZpE;\r\n                    embryoDetail.thicknessZpW = data.thicknessZpW;\r\n                    embryoDetail.incubator = data.incubator;\r\n\r\n                    embryoDetail.media = data.media;\r\n                    embryoDetail.lotNumber = data.lotNumber;\r\n                    embryoDetail.dateOpened = data.dateOpened\r\n                        ? new Date(data.dateOpened + TIME_0)\r\n                        : null;\r\n                    embryoDetail.media2 = data.media2;\r\n                    embryoDetail.lotNumber2 = data.lotNumber2;\r\n                    embryoDetail.dateOpened2 = data.dateOpened2\r\n                        ? new Date(data.dateOpened2 + TIME_0)\r\n                        : null;\r\n                    embryoDetail.savedUser = data.savedUser;\r\n                    embryoDetail.savedAt = data.savedAt;\r\n                    embryoDetail.usersSignature = data.usersSignature;\r\n                    embryoDetail.description = data.description;\r\n                    embryoDetail.newImage = null;\r\n                    embryoDetail.images = data.images;\r\n                    embryoDetail.abnormalZona = data.abnormalZona;\r\n                    embryoDetail.fragmentedPolarBody = data.fragmentedPolarBody;\r\n                    embryoDetail.fragmentsInPus = data.fragmentsInPus;\r\n                    embryoDetail.fate = data.fate;\r\n                    embryoDetail.straw = data.straw;\r\n                    embryoDetail.frozenDate = data.frozenDate\r\n                        ? new Date(data.frozenDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.thawingDate = data.thawingDate\r\n                        ? new Date(data.thawingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.transferDate = data.transferDate\r\n                        ? new Date(data.transferDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.discardingDate = data.discardingDate\r\n                        ? new Date(data.discardingDate + TIME_0)\r\n                        : null;\r\n                    embryoDetail.assistedHatching = data.assistedHatching;\r\n                    embryoDetail.biopsy = data.biopsy;\r\n                    embryoDetail.embryologistDoingBiopsy =\r\n                        data.embryologistDoingBiopsy;\r\n\r\n                    embryoDetail.embryologistDoingFreezing = data.embryologistDoingFreezing;\r\n                    embryoDetail.embryologistDoingThawing = data.embryologistDoingThawing;\r\n                    embryoDetail.embryologistDoingTransfer = data.embryologistDoingTransfer;\r\n                    embryoDetail.embryologistDoingScoring = data.embryologistDoingScoring;\r\n                    embryoDetail.embryoDoingColRemoval = data.embryoDoingColRemoval;\r\n\r\n                    embryoDetail.canisterNo = data.canisterNo;\r\n                    embryoDetail.cassetteId = data.cassetteId;\r\n                    embryoDetail.cassetteType = data.cassetteType;\r\n                    embryoDetail.cassetteColor = data.cassetteColor;\r\n                    embryoDetail.dewar = data.dewar;\r\n                    embryoDetail.embryoSurvived = data.embryoSurvived;\r\n                    embryoDetail.plugColor = data.plugColor;\r\n                    embryoDetail.frozenBy = data.frozenBy;\r\n                    embryoDetail.thawedBy = data.thawedBy;\r\n                    embryoDetail.location = data.location;\r\n                    embryoDetail.freezerId = data.freezerId;\r\n                    // todo\r\n                    // embryoDetail.freezer = data\r\n                })\r\n                .finally(() => { });\r\n        }\r\n    };\r\n\r\n\r\n    const loadEmbryoDetail = (occId) => {\r\n        \r\n        store\r\n                .dispatch(\"fertilization/getFertlizationEmbryoDetail\", occId)\r\n                .then((data) => {                    \r\n                    embryoDetail.stage = data.stage;\r\n                    embryoDetail.grade = data.grade;\r\n                    embryoDetail.score = data.score;\r\n                    embryoDetail.time = data.time;\r\n                    embryoDetail.oocGroup = data.oocGroup;\r\n\r\n                    embryoDetail.clinician = data.clinician;\r\n                    embryoDetail.embryologist = data.embryologist;\r\n\r\n                    embryoDetail.uniformCells = data.uniformCells;\r\n                    embryoDetail.cellsMultinucleation = data.cellsMultinucleation;\r\n                    embryoDetail.fragmentation = data.fragmentation;\r\n                    embryoDetail.cellsCompaction = data.cellsCompaction;\r\n                    embryoDetail.asphericalForm = data.asphericalForm;\r\n                    embryoDetail.vacuolisation = data.vacuolisation;\r\n                    embryoDetail.granularCytoplasm = data.granularCytoplasm;\r\n                    embryoDetail.oocDiameter = data.oocDiameter;\r\n                    embryoDetail.thicknessZpN = data.thicknessZpN;\r\n                    embryoDetail.thicknessZpS = data.thicknessZpS;\r\n                    embryoDetail.thicknessZpE = data.thicknessZpE;\r\n                    embryoDetail.thicknessZpW = data.thicknessZpW;\r\n                    embryoDetail.incubator = data.incubator;\r\n\r\n                    embryoDetail.media = data.media;\r\n                    embryoDetail.lotNumber = data.lotNumber;\r\n                    embryoDetail.dateOpened = data.dateOpened\r\n                        ? new Date(data.dateOpened + TIME_0)\r\n                        : null;\r\n                    embryoDetail.media2 = data.media2;\r\n                    embryoDetail.lotNumber2 = data.lotNumber2;\r\n                    embryoDetail.dateOpened2 = data.dateOpened2\r\n                        ? new Date(data.dateOpened2 + TIME_0)\r\n                        : null;\r\n                    // embryoDetail.savedUser = data.savedUser;\r\n                    // embryoDetail.savedAt = data.savedAt;\r\n                    // embryoDetail.usersSignature = data.usersSignature;\r\n                    embryoDetail.description = data.description;\r\n                    // embryoDetail.newImage = null;\r\n                    // embryoDetail.images = data.images;\r\n                    embryoDetail.abnormalZona = data.abnormalZona;\r\n                    embryoDetail.fragmentedPolarBody = data.fragmentedPolarBody;\r\n                    embryoDetail.fragmentsInPus = data.fragmentsInPus;\r\n                    // embryoDetail.fate = data.fate;\r\n                    embryoDetail.straw = data.straw;\r\n                    embryoDetail.frozenDate = data.frozenDate\r\n                        ? new Date(data.frozenDate + TIME_0)\r\n                        : null;\r\n                    // embryoDetail.thawingDate = data.thawingDate\r\n                    //     ? new Date(data.thawingDate + TIME_0)\r\n                    //     : null;\r\n                    // embryoDetail.transferDate = data.transferDate\r\n                    //     ? new Date(data.transferDate + TIME_0)\r\n                    //     : null;\r\n                    // embryoDetail.discardingDate = data.discardingDate\r\n                    //     ? new Date(data.discardingDate + TIME_0)\r\n                    //     : null;\r\n                    embryoDetail.assistedHatching = data.assistedHatching;\r\n                    embryoDetail.biopsy = data.biopsy;\r\n                    embryoDetail.embryologistDoingBiopsy = data.embryologistDoingBiopsy;\r\n\r\n                    embryoDetail.embryologistDoingFreezing = data.embryologistDoingFreezing;\r\n                    embryoDetail.embryologistDoingThawing = data.embryologistDoingThawing;\r\n                    embryoDetail.embryologistDoingTransfer = data.embryologistDoingTransfer;\r\n                    embryoDetail.embryologistDoingScoring = data.embryologistDoingScoring;\r\n                    embryoDetail.embryoDoingColRemoval = data.embryoDoingColRemoval;\r\n\r\n                    embryoDetail.canisterNo = data.canisterNo;\r\n                    embryoDetail.cassetteId = data.cassetteId;\r\n                    embryoDetail.cassetteType = data.cassetteType;\r\n                    embryoDetail.cassetteColor = data.cassetteColor;\r\n                    embryoDetail.dewar = data.dewar;\r\n                    embryoDetail.embryoSurvived = data.embryoSurvived;\r\n                    embryoDetail.plugColor = data.plugColor;\r\n                    embryoDetail.frozenBy = data.frozenBy;\r\n                    embryoDetail.thawedBy = data.thawedBy;\r\n                    embryoDetail.location = data.location;\r\n                    embryoDetail.freezerId = data.freezerId;\r\n                })\r\n                .finally(() => { });\r\n        \r\n    };\r\n\r\n    const onCellClick = (fertDay, fertLine) => {\r\n        setSelectedEmbryo(fertDay, fertLine);\r\n    };\r\n\r\n    const openEmbryoDetailDialog = (fertDay, fertLine) => {\r\n        setSelectedEmbryo(fertDay, fertLine);\r\n        embryoDetailDialog.value = true;\r\n    };\r\n    const closeEmbryoDetailDialog = () => (embryoDetailDialog.value = false);\r\n\r\n    const getFertilization = () => {\r\n        if (store.state.artCycle.selectedCycle == null) {\r\n            problem.value = true;\r\n            return;\r\n        }\r\n        emitter.emit(\"app:show-page-loading\", true);\r\n\r\n        store\r\n            .dispatch(\r\n                \"fertilization/getFertilization\",\r\n                store.state.artCycle.selectedCycle.cycleId\r\n            )\r\n            .then(() => {\r\n                showGrid.value = true;\r\n            })\r\n            .catch(() => {\r\n                router.push(\"/fertilization/create\");\r\n                showGrid.value = false;\r\n            })\r\n            .finally(() => {\r\n                emitter.emit(\"app:show-page-loading\", false);\r\n            });\r\n    };\r\n\r\n    return {\r\n        store,\r\n        isBornCycle,\r\n        problem,\r\n        showGrid,\r\n        embryoDetailDialog,\r\n        openEmbryoDetailDialog,\r\n        closeEmbryoDetailDialog,\r\n        getFertilization,\r\n        selectedEmbryo,\r\n        setSelectedEmbryo,\r\n        embryoDetail,\r\n        getEmbryoDetail,\r\n        onCellClick,\r\n        embryoDetailV$,\r\n        embryoDetailSubmitted,\r\n        aspirationForm,\r\n        loadEmbryoDetail \r\n    };\r\n}\r\n\r\nexport function useFertilizationGridInit() {\r\n    const store = useStore();\r\n    const fertId = ref();\r\n    const confirm = useConfirm();\r\n\r\n    const gridDesc = ref(false);\r\n    const sortToggle = () => (gridDesc.value = !gridDesc.value);\r\n    const fertilizationGrid = computed(() => {\r\n        if (gridDesc.value == true) {\r\n            return store.state.fertilization.fertilizationLines.sort(\r\n                (a, b) => b.noEmbryo - a.noEmbryo\r\n            );\r\n        } else {\r\n            return store.state.fertilization.fertilizationLines.sort(\r\n                (a, b) => a.noEmbryo - b.noEmbryo\r\n            );\r\n        }\r\n    });\r\n    const createFertilizationLineDialog = ref(false);\r\n\r\n    const fertilizationGridDays = reactive([\r\n        { day: 0, date: null, editable: false },\r\n        { day: 1, date: null, editable: false },\r\n        { day: 2, date: null, editable: false },\r\n        { day: 3, date: null, editable: false },\r\n        { day: 4, date: null, editable: false },\r\n        { day: 5, date: null, editable: false },\r\n        { day: 6, date: null, editable: false },\r\n        { day: 7, date: null, editable: false }\r\n    ]);\r\n\r\n    const selectedEmbryo = inject(\"selectedEmbryo\");\r\n    const setSelectedEmbryo = inject(\"setSelectedEmbryo\");\r\n    const embryoDetailCreateConfirmDailog = inject(\r\n        \"embryoDetailCreateConfirmDailog\"\r\n    );\r\n\r\n    const moveGridCell = (direction) => {\r\n        const days = [...fertilizationGridDays];\r\n        const lineIdx = fertilizationGrid.value.findIndex(\r\n            (item) => item.lineId == selectedEmbryo.fertLineId\r\n        );\r\n        let line = fertilizationGrid.value[lineIdx];\r\n\r\n        const dayIdx = days.findIndex((item) => item.day == selectedEmbryo.day);\r\n        let day = days[dayIdx];\r\n\r\n        switch (direction) {\r\n            case \"up\":\r\n                line = fertilizationGrid.value[lineIdx - 1];\r\n                break;\r\n            case \"down\":\r\n                line = fertilizationGrid.value[lineIdx + 1];\r\n                break;\r\n            case \"left\":\r\n                if (dayIdx != 3) {\r\n                    day = days[dayIdx - 1];\r\n                } else {\r\n                    day = days[dayIdx - 2];\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (dayIdx != 1) {\r\n                    day = days[dayIdx + 1];\r\n                } else {\r\n                    day = days[dayIdx + 2];\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"error\");\r\n        }\r\n\r\n        if (line != undefined && day != undefined) {\r\n            setSelectedEmbryo(day, line);\r\n        } else if (line == undefined && direction === \"down\") {\r\n            embryoDetailCreateConfirmDailog.value = true;\r\n        } else {\r\n            console.log(line, day);\r\n        }\r\n    };\r\n\r\n    const fillDaysRow = (val) => {\r\n        fertilizationGridDays[0].date = val.fertDate0;\r\n        fertilizationGridDays[1].date = val.fertDate1;\r\n        fertilizationGridDays[2].date = val.fertDate2;\r\n        fertilizationGridDays[3].date = val.fertDate3;\r\n        fertilizationGridDays[4].date = val.fertDate4;\r\n        fertilizationGridDays[5].date = val.fertDate5;\r\n        fertilizationGridDays[6].date = val.fertDate6;\r\n        fertilizationGridDays[7].date = val.fertDate7;\r\n        getFertilizationLines(val.fertId);\r\n        fertId.value = val.fertId;\r\n    };\r\n\r\n    const embryoDetailDialog = inject(\"embryoDetailDialog\");\r\n\r\n    const openEmbryoDetailDialog = inject(\"openEmbryoDetailDialog\");\r\n    const closeEmbryoDetailDialog = inject(\"closeEmbryoDetailDialog\");\r\n\r\n    const ferilizationLine = reactive({\r\n        lineId: 0,\r\n        fate: null,\r\n        strawId: null,\r\n        frozenDate: null,\r\n        thawingDate: null,\r\n        comment: null,\r\n        noEmbryo: null,\r\n        cycleType: null,\r\n        comment: null,\r\n        exp: false\r\n    });\r\n    const isFertilizationEdit = ref(true);\r\n\r\n    const createFetilizationRow = () => {\r\n        ferilizationLine.lineId = 0;\r\n        ferilizationLine.fate = null;\r\n        ferilizationLine.strawId = null;\r\n        ferilizationLine.frozenDate = null;\r\n        ferilizationLine.thawingDate = null;\r\n        ferilizationLine.comment = null;\r\n        ferilizationLine.exp = false;\r\n        ferilizationLine.noEmbryo =\r\n            store.state.fertilization.fertilizationLines.length + 1;\r\n        ferilizationLine.cycleType = null;\r\n\r\n        createFertilizationLineDialog.value = true;\r\n\r\n        isFertilizationEdit.value = false;\r\n    };\r\n\r\n    const checkAll = ref(false);\r\n    const checkLine = ref([]);\r\n\r\n    const editFetilizationRow = (line) => {\r\n\r\n\r\n        ferilizationLine.lineId = line.lineId;\r\n        ferilizationLine.fate = line.fate;\r\n        ferilizationLine.strawId = line.strawId;\r\n        ferilizationLine.frozenDate = line.frozenDate\r\n            ? new Date(line.frozenDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.thawingDate = line.thawDate\r\n            ? new Date(line.thawDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.comment = line.comment;\r\n        ferilizationLine.exp = line.exp;\r\n        ferilizationLine.noEmbryo = line.noEmbryo;\r\n        ferilizationLine.cycleType = line.cycleType;\r\n\r\n        createFertilizationLineDialog.value = true;\r\n    };\r\n\r\n    const selectedLines = ref([]);\r\n\r\n    const editFetilizationRows = () => {\r\n        isFertilizationEdit.value = true;\r\n\r\n        checkLine.value.forEach((item, index) => {\r\n            if (item) {\r\n                selectedLines.value.push(fertilizationGrid.value[index]);\r\n            }\r\n        });\r\n\r\n        let line = selectedLines.value[0];\r\n\r\n        ferilizationLine.lineId = line.lineId;\r\n        ferilizationLine.fate = line.fate;\r\n        ferilizationLine.strawId = line.strawId;\r\n        ferilizationLine.frozenDate = line.frozenDate\r\n            ? new Date(line.frozenDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.thawingDate = line.thawDate\r\n            ? new Date(line.thawDate + \" 00:00:00\")\r\n            : null;\r\n        ferilizationLine.comment = line.comment;\r\n        ferilizationLine.exp = line.exp;\r\n        ferilizationLine.noEmbryo = line.noEmbryo;\r\n        ferilizationLine.cycleType = line.cycleType;\r\n\r\n        createFertilizationLineDialog.value = true;\r\n    };\r\n\r\n    const deleteLines = () => {\r\n        confirm.require({\r\n            message: \"Are you sure you want to proceed?\",\r\n            header: \"Confirmation\",\r\n            icon: \"pi pi-exclamation-triangle\",\r\n            accept: () => {\r\n                let lineIds = [];\r\n                checkLine.value.forEach((item, index) => {\r\n                    if (item) {\r\n                        // TODO - delete goes here\r\n                        // console.log(fertilizationGrid.value[index]);\r\n                        lineIds.push(fertilizationGrid.value[index].lineId);\r\n                    }\r\n                });\r\n                store.dispatch(\r\n                    \"fertilization/deleteFertilizationLines\",\r\n                    lineIds\r\n                );\r\n            },\r\n            reject: () => { }\r\n        });\r\n    };\r\n\r\n    const getFertilizationLines = (fertId) => {\r\n        store\r\n            .dispatch(\"fertilization/getFertilizationLines\", fertId)\r\n            .then(() => { })\r\n            .catch(() => { })\r\n            .finally(() => { });\r\n    };\r\n\r\n    const showFateInGrid = (line, col) => {\r\n        if (col.day != 1) {\r\n            return line[`day${col.day + 1}Stage`] == null ? line.fate : \"\";\r\n        } else {\r\n            return line[`day${col.day + 2}Stage`] == null ? line.fate : \"\";\r\n        }\r\n    };\r\n\r\n    const getFertilization = inject(\"getFertilization\");\r\n    const updateFertilization = (item) => {\r\n        const payload = { ...store.state.fertilization.fertilization };\r\n        payload[`fertDate${item.day}`] = format(item.date, DATE_FORMAT_STRING);\r\n        store\r\n            .dispatch(\"fertilization/updateFertlization\", payload)\r\n            .then(() => {\r\n                return getFertilization();\r\n            })\r\n            .then(() => {\r\n                item.editable = false;\r\n            });\r\n    };\r\n\r\n    const onGridCellClick = inject(\"onCellClick\");\r\n\r\n    const openPdfReport = () => {\r\n        // const params = {\r\n        //     cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n        //     ecId: fertId.value,\r\n        //     pDate: store.state.artCycle.selectedCycle.cycleDate\r\n        // };\r\n        // let url = buildPdfUrl(\"Fertilization_Report\", params);\r\n        // window.open(url);\r\n\r\n        let url =\r\n            `${NL_FORM_BASE}/cycles-reports/fert-print.php` +\r\n            `?cycleId=${store.state.artCycle.selectedCycle.cycleId}`;\r\n        // +  `&apiToken=${store.state.user.accessToken}`;\r\n        window.open(url, \"_blank\");\r\n    };\r\n\r\n    return {\r\n        store,\r\n        fertilizationGrid,\r\n        gridDesc,\r\n        sortToggle,\r\n        createFetilizationRow,\r\n        createFertilizationLineDialog,\r\n        editFetilizationRow,\r\n        ferilizationLine,\r\n        fertilizationGridDays,\r\n        getFertilizationLines,\r\n        moveGridCell,\r\n        embryoDetailDialog,\r\n        openEmbryoDetailDialog,\r\n        closeEmbryoDetailDialog,\r\n        fillDaysRow,\r\n        showFateInGrid,\r\n        updateFertilization,\r\n        onGridCellClick,\r\n        selectedEmbryo,\r\n        openPdfReport,\r\n        checkAll,\r\n        checkLine,\r\n        deleteLines,\r\n        editFetilizationRows,\r\n        isFertilizationEdit,\r\n        selectedLines\r\n    };\r\n}\r\n\r\nexport function useEmbryoDetailDialogInit() {\r\n    const store = useStore();\r\n    const toast = useToast();\r\n    const embryoDetailDialog = inject(\"embryoDetailDialog\");\r\n    const closeEmbryoDetailDialog = inject(\"closeEmbryoDetailDialog\");\r\n\r\n    const selectedEmbryo = inject(\"selectedEmbryo\");\r\n\r\n    const embryoDetail = inject(\"embryoDetail\");\r\n\r\n    const selectedFreezer = ref(null);\r\n\r\n\r\n    const loading = ref(false);\r\n\r\n    const cyroStorage = reactive({\r\n        source: null,\r\n        canisterNo: null,\r\n        cassetteId: null,\r\n        cassetteType: \"Standard\",\r\n        cassetteColor: null,\r\n        dewar: null,\r\n        embryoSurvived: null,\r\n        embryoDevelopment: null,\r\n        fertilizationId: null,\r\n        freezDate: null,\r\n        strawId: null,\r\n        plugColor: null,\r\n        thawDate: null,\r\n        cycleId: null,\r\n        patientId: null,\r\n        //  fate: null,\r\n        day7Stage: null,\r\n        day7Grade: null,\r\n        frozenBy: null,\r\n        thawedBy: null,\r\n        freezerId: null,\r\n        location: null\r\n    });\r\n\r\n    let rules = {\r\n        canisterNo: { required },\r\n        cassetteId: { required },\r\n        cassetteType: { required },\r\n        cassetteColor: { required },\r\n        strawId: { required },\r\n        plugColor: { required }\r\n    };\r\n    const cyroStorageV$ = useVuelidate(rules, cyroStorage);\r\n    const cyroStorageSubmitted = ref(false);\r\n\r\n    const embryoDetailV$ = inject(\"embryoDetailV$\");\r\n    const embryoDetailSubmitted = inject(\"embryoDetailSubmitted\");\r\n\r\n    \r\n    const loadStrawList = ref([]);\r\n    const getLoadaedStrwList = async () => {\r\n\r\n        let patientId = store.state.artCycle.patient.id;\r\n        const { data } = await $axios.get(`fert/frozen-straws/${ patientId }`);\r\n\r\n        loadStrawList.value = data; \r\n    };\r\n\r\n    const saveEmbryoDetail = () => {\r\n        // if (\r\n        //     embryoDetailV$.value.stage.$invalid ||\r\n        //     (embryoDetailV$.value.frozenDate.$invalid &&\r\n        //         embryoDetailV$.value.thawingDate.$invalid)\r\n        // ) {\r\n        //     embryoDetailSubmitted.value = true;\r\n        //     return;\r\n        // }\r\n\r\n        if (\r\n            embryoDetail.fate == \"Transfer\"\r\n            // || (embryoDetail.fate == \"Discard\" && embryoDetail.stage != \"Arrest\")\r\n        ) {\r\n            if (embryoDetailV$.value.straw.$invalid) {\r\n                // console.log(selectedEmbryo);\r\n                embryoDetailSubmitted.value = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (embryoDetail.fate == \"Frozen\" || embryoDetail.fate == \"Thawed\") {\r\n            if (cyroStorageV$.value.$invalid) {\r\n                cyroStorageSubmitted.value = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        //console.log([embryoDetail])\r\n        //console.log([cyroStorage])\r\n\r\n        embryoDetail.canisterNo = cyroStorage.canisterNo;\r\n        embryoDetail.cassetteId = cyroStorage.cassetteId;\r\n        embryoDetail.cassetteColor = cyroStorage.cassetteColor;\r\n        embryoDetail.cassetteType = cyroStorage.cassetteType;\r\n\r\n        embryoDetail.dewar = cyroStorage.dewar;\r\n        embryoDetail.embryoDevelopment = cyroStorage.embryoDevelopment;\r\n        embryoDetail.embryoSurvived = cyroStorage.embryoSurvived;\r\n        embryoDetail.frozenBy = cyroStorage.frozenBy;\r\n        embryoDetail.plugColor = cyroStorage.plugColor;\r\n        embryoDetail.straw = cyroStorage.strawId;\r\n        embryoDetail.thawedBy = cyroStorage.thawedBy;\r\n\r\n        embryoDetail.freezerId = cyroStorage.freezerId;\r\n        embryoDetail.location = cyroStorage.location;\r\n\r\n        const formData = {\r\n            ...embryoDetail,\r\n            //...cyroStorage,\r\n            fertLineId: selectedEmbryo.fertLineId,\r\n            dayNo: selectedEmbryo.day,\r\n            cultureDay: selectedEmbryo.date,\r\n            oocId: selectedEmbryo.occId,\r\n            embryoAge: selectedEmbryo.day,\r\n            media: embryoDetail.media,\r\n            lotNumber: embryoDetail.lotNumber,\r\n            dateOpened: embryoDetail.dateOpened\r\n                ? format(embryoDetail.dateOpened, DATE_FORMAT_STRING)\r\n                : null,\r\n            media2: embryoDetail.media2,\r\n            lotNumber2: embryoDetail.lotNumber2,\r\n            dateOpened2: embryoDetail.dateOpened2\r\n                ? format(embryoDetail.dateOpened2, DATE_FORMAT_STRING)\r\n                : null,\r\n            savedUser: embryoDetail.savedUser,\r\n            savedAt: embryoDetail.savedAt,\r\n            frozenDate: embryoDetail.frozenDate\r\n                ? format(embryoDetail.frozenDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            thawingDate: embryoDetail.thawingDate\r\n                ? format(embryoDetail.thawingDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            discardingDate: embryoDetail.discardingDate\r\n                ? format(embryoDetail.discardingDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            transferDate: embryoDetail.transferDate\r\n                ? format(embryoDetail.transferDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            straw: cyroStorage.strawId,\r\n            frozenBy: cyroStorage.frozenBy,\r\n            thawedBy: cyroStorage.thawedBy,\r\n            freezerId: cyroStorage.freezerId,\r\n            patientId: store.state.artCycle.selectedCycle.patientId,\r\n            selectedFrozenOocId: store.state.fertilization.selectedFrozenOocId,\r\n            location: cyroStorage.location\r\n        };\r\n\r\n        loading.value = true;\r\n\r\n        store\r\n            .dispatch(\"fertilization/saveFertlizationEmbryoDetail\", formData)\r\n            .then((data) => {\r\n                embryoDetail.newImage = null;\r\n                embryoDetail.occId = data.oocId;\r\n                selectedEmbryo.occId = data.oocId;\r\n\r\n                if (data.freezerId && data.location && (!embryoDetail.location || embryoDetail.location === '')) {\r\n                    embryoDetail.freezerId = data.freezerId;\r\n                    embryoDetail.location = data.location;\r\n                    selectedEmbryo.freezerId = data.freezerId;\r\n                    selectedEmbryo.location = data.location;\r\n                }\r\n\r\n                embryoDetail.images.push(data.image);\r\n\r\n                if (data.autoFreezId > 0) {\r\n                    // return store.dispatch(\"cryoStorage/editFreezingLine\", {\r\n                    //     ...cyroStorage,\r\n                    //     freezDate: formData.frozenDate,\r\n                    //     thawDate: formData.thawDate,\r\n                    //     cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n                    //     patientId: store.state.artCycle.selectedCycle.patientId,\r\n                    //     fertilizationId: selectedEmbryo.fertId,\r\n                    //     autoFreezId: data.autoFreezId\r\n                    // });\r\n                } else {\r\n                    toast.add({\r\n                        severity: \"success\",\r\n                        summary: \"Saved succefully\",\r\n                        life: 3000\r\n                    });\r\n\r\n                    store.dispatch(\"fertilization/getMediaInventoryOptions\");\r\n                }\r\n            })\r\n            .then(() => {\r\n                toast.add({\r\n                    severity: \"success\",\r\n                    summary: \"Saved succefully\",\r\n                    life: 3000\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n\r\n                let errorMsg = \"Error: PLease check log!\";\r\n\r\n                if (err.frResp != undefined) {\r\n                    if (err.frResp[0] != undefined && err.frResp[0].msg != undefined) {\r\n                        errorMsg = \"Error: \" + err.frResp[0].msg;\r\n                    }\r\n                }\r\n\r\n                selectedEmbryo.errorMsg = errorMsg;\r\n\r\n            })\r\n            .finally(() => {\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const getEmbryoDetail = inject(\"getEmbryoDetail\");\r\n\r\n    return {\r\n        embryoDetailDialog,\r\n        closeEmbryoDetailDialog,\r\n        embryoDetail,\r\n        saveEmbryoDetail,\r\n        selectedEmbryo,\r\n        selectedFreezer,\r\n        getEmbryoDetail,\r\n        loading,\r\n        loadStrawList,\r\n        getLoadaedStrwList,\r\n        cyroStorage,\r\n        cyroStorageV$,\r\n        cyroStorageSubmitted\r\n    };\r\n}\r\n\r\nexport function useTreeViewInit() {\r\n    const store = useStore();\r\n    const embryoDetail = inject(\"embryoDetail\");\r\n    const treeViewData = reactive([\r\n        {\r\n            key: \"stage\",\r\n            data: {\r\n                name: \"Stage\",\r\n                value: computed(() => embryoDetail.stage)\r\n            }\r\n        },\r\n        {\r\n            key: \"embryoCellD\",\r\n            data: {\r\n                name: \"Embryo Cell [d]\",\r\n                value: computed(() => {\r\n                    return embryoDetail.oocId != 0 ? embryoDetail.oocId : \"\";\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"cultureDay\",\r\n            data: {\r\n                name: \"Culture Day\",\r\n                value: computed(() => embryoDetail.cultureDay)\r\n            }\r\n        },\r\n        {\r\n            key: \"embryoAge\",\r\n            data: {\r\n                name: \"Embryo Age\",\r\n                value: computed(() => embryoDetail.embryoAge)\r\n            }\r\n        },\r\n        {\r\n            key: \"score\",\r\n            data: {\r\n                name: \"Score\",\r\n                value: computed(() => embryoDetail.score)\r\n            }\r\n        },\r\n        {\r\n            key: \"scoreTime\",\r\n            data: {\r\n                name: \"Score Time\",\r\n                value: computed(() => embryoDetail.time)\r\n            }\r\n        },\r\n        {\r\n            key: \"fate\",\r\n            data: {\r\n                name: \"Fate\",\r\n                value: computed(() => embryoDetail.fate)\r\n            }\r\n        },\r\n        {\r\n            key: \"physician\",\r\n            data: {\r\n                name: \"Physician\",\r\n                value: computed(() => {\r\n                    let index = store.state.provider.providers.findIndex(\r\n                        (item) => item.id == embryoDetail.clinician\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.provider.providers[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologist\",\r\n            data: {\r\n                name: \"Emb ICSI/IVF\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) => item.id == embryoDetail.embryologist\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistBiopsy\",\r\n            data: {\r\n                name: \"Emb biopsy\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingBiopsy\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistFreezing\",\r\n            data: {\r\n                name: \"Emb Freezing\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingFreezing\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistThawing\",\r\n            data: {\r\n                name: \"Emb Thaw\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingThawing\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistTransfer\",\r\n            data: {\r\n                name: \"Emb Transfer\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingTransfer\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryologistScoring\",\r\n            data: {\r\n                name: \"Emb Scoring\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryologistDoingScoring\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        {\r\n            key: \"embryoDoingColRemoval\",\r\n            data: {\r\n                name: \"Emb Scoring\",\r\n                value: computed(() => {\r\n                    let index = store.state.doctor.embryologists.findIndex(\r\n                        (item) =>\r\n                            item.id == embryoDetail.embryoDoingColRemoval\r\n                    );\r\n\r\n                    if (index >= 0) {\r\n                        return store.state.doctor.embryologists[index].name;\r\n                    } else {\r\n                        (\"\");\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        // {\r\n        //     key: \"note\",\r\n        //     data: {\r\n        //         name: \"Note\",\r\n        //         value: null\r\n        //     }\r\n        // },\r\n        {\r\n            key: \"incubator\",\r\n            data: {\r\n                name: \"Incubator\",\r\n                value: computed(() => embryoDetail.incubator)\r\n            }\r\n        }\r\n    ]);\r\n\r\n    const image = computed(() => {\r\n        if (embryoDetail.images.length == 0) {\r\n            return null;\r\n        } else {\r\n            let img = embryoDetail.images[embryoDetail.images.length - 1];\r\n            return `${ORIGIN}/${img}`;\r\n        }\r\n    });\r\n\r\n    const openImage = () => {\r\n        window.open(\r\n            image.value,\r\n            \"DescriptiveWindowName\",\r\n            \"left=100,top=100,width=1200,height=800\"\r\n        );\r\n    };\r\n\r\n    return { treeViewData, image, openImage };\r\n}\r\n\r\nexport function useCraeteFertilizationFromInit() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n\r\n    const selectedCycle = computed(() => store.state.artCycle.selectedCycle);\r\n\r\n    const form = reactive({\r\n        fertDate0: null,\r\n        fertTime0: null,\r\n        fertInit0: null,\r\n\r\n        fertDate1: null,\r\n        fertTime1: null,\r\n        fertInit1: null,\r\n\r\n        fertDate2: null,\r\n        fertTime2: null,\r\n        fertInit2: null,\r\n\r\n        fertDate3: null,\r\n        fertTime3: null,\r\n        fertInit3: null,\r\n\r\n        fertDate5: null,\r\n        fertTime5: null,\r\n        fertInit5: null,\r\n\r\n        fertDate6: null,\r\n        fertTime6: null,\r\n        fertInit6: null,\r\n\r\n        fertDate7: null,\r\n        fertTime7: null,\r\n        fertInit7: null,\r\n\r\n        comment: null,\r\n        expComment: null\r\n    });\r\n\r\n    const rules = {\r\n        fertDate0: { required },\r\n        fertDate1: { required },\r\n        fertDate2: { required },\r\n        fertDate3: { required },\r\n        fertDate4: { required },\r\n        fertDate5: { required },\r\n        fertDate6: { required },\r\n        fertDate7: { required }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n    const submitted = ref(false);\r\n\r\n    const createFertilization = () => {\r\n        if (store.state.artCycle.selectedCycle.cycleType !== \"FET\") {\r\n            submitted.value = true;\r\n        }\r\n        if (\r\n            v$.value.$invalid &&\r\n            store.state.artCycle.selectedCycle.cycleType !== \"FET\"\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        let formData = {\r\n            cycleId: selectedCycle.value.cycleId,\r\n            patientId: selectedCycle.value.patientId,\r\n            ...form,\r\n            fertDate0: form.fertDate0\r\n                ? format(form.fertDate0, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate1: form.fertDate1\r\n                ? format(form.fertDate1, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate2: form.fertDate2\r\n                ? format(form.fertDate2, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate3: form.fertDate3\r\n                ? format(form.fertDate3, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate4: form.fertDate4\r\n                ? format(form.fertDate4, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate5: form.fertDate5\r\n                ? format(form.fertDate5, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate6: form.fertDate6\r\n                ? format(form.fertDate6, DATE_FORMAT_STRING)\r\n                : null,\r\n            fertDate7: form.fertDate7\r\n                ? format(form.fertDate7, DATE_FORMAT_STRING)\r\n                : null\r\n        };\r\n        store\r\n            .dispatch(\"fertilization/createFertlization\", formData)\r\n            .then(() => {\r\n                router.push(\"/fertilization\");\r\n            })\r\n            .catch(() => { })\r\n            .finally(() => { });\r\n    };\r\n\r\n    const populateDates = (newValue) => {\r\n        if (!form.fertDate1) {\r\n            form.fertDate1 = addDays(form.fertDate0, 1);\r\n        }\r\n        if (!form.fertDate2) {\r\n            form.fertDate2 = addDays(form.fertDate0, 2);\r\n        }\r\n        if (!form.fertDate3) {\r\n            form.fertDate3 = addDays(form.fertDate0, 3);\r\n        }\r\n        if (!form.fertDate4) {\r\n            form.fertDate4 = addDays(form.fertDate0, 4);\r\n        }\r\n        if (!form.fertDate5) {\r\n            form.fertDate5 = addDays(form.fertDate0, 5);\r\n        }\r\n        if (!form.fertDate6) {\r\n            form.fertDate6 = addDays(form.fertDate0, 6);\r\n        }\r\n        if (!form.fertDate7) {\r\n            form.fertDate7 = addDays(form.fertDate0, 7);\r\n        }\r\n    };\r\n\r\n    return { form, createFertilization, populateDates, submitted, v$ };\r\n}\r\n\r\nexport function useFertilizationLineCreateDialog() {\r\n    const store = useStore();\r\n\r\n    const createFertilizationLineDialog = inject(\r\n        \"createFertilizationLineDialog\"\r\n    );\r\n\r\n    const loading = ref(false);\r\n    const form = inject(\"ferilizationLine\");\r\n\r\n    const isEdit = inject(\"isFertilizationEdit\");\r\n    const selectedLines = inject(\"selectedLines\");\r\n\r\n    const fateOptions = reactive([\r\n        \"Frozen\",\r\n        \"Discard\",\r\n        \"Culture\",\r\n        \"Donate\",\r\n        \"Thawed\",\r\n        \"Transfer\",\r\n        \"Sent Out\"\r\n    ]);\r\n\r\n    const cycleTypeOptions = computed(() =>\r\n        store.state.fertilization.cycleTypes.map((item) => item.value)\r\n    );\r\n\r\n    const save = () => {\r\n        let fertilization = store.state.fertilization.fertilization;\r\n        const formData = {\r\n            ...form,\r\n            lineId: form.lineId,\r\n            fertilizationId: fertilization.fertId,\r\n            cycleId: fertilization.cycleId,\r\n            noEmbryo: form.noEmbryo,\r\n            frozenDate: form.frozenDate\r\n                ? format(form.frozenDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            thawDate: form.thawingDate\r\n                ? format(form.thawingDate, DATE_FORMAT_STRING)\r\n                : null,\r\n            comment: form.comment,\r\n            exp: form.exp\r\n        };\r\n\r\n        if (isEdit.value) {\r\n            formData.lineIds = selectedLines.value.map((item) => item.lineId);\r\n            store\r\n                .dispatch(\"fertilization/editFertilizationLines\", formData)\r\n                .then(() => { })\r\n                .catch(() => {\r\n                    console.log(\"err\");\r\n                })\r\n                .finally(() => {\r\n                    createFertilizationLineDialog.value = false;\r\n                    loading.value = false;\r\n                });\r\n            return;\r\n        }\r\n\r\n        loading.value = true;\r\n        store\r\n            .dispatch(\"fertilization/createFertilizationLine\", formData)\r\n            .then(() => { })\r\n            .catch(() => {\r\n                console.log(\"err\");\r\n            })\r\n            .finally(() => {\r\n                createFertilizationLineDialog.value = false;\r\n                loading.value = false;\r\n            });\r\n    };\r\n\r\n    const deleteLoading = ref(false);\r\n    const deleteFertilizationLine = () => {\r\n        deleteLoading.value = true;\r\n        store\r\n            .dispatch(\"fertilization/deleteFertilizationLine\", {\r\n                lineId: form.lineId\r\n            })\r\n            .then(() => {\r\n                console.log(\"in then\");\r\n            })\r\n            .catch(() => { })\r\n            .finally(() => {\r\n                createFertilizationLineDialog.value = false;\r\n                deleteLoading.value = false;\r\n            });\r\n    };\r\n\r\n    return {\r\n        form,\r\n        fateOptions,\r\n        save,\r\n        loading,\r\n        createFertilizationLineDialog,\r\n        cycleTypeOptions,\r\n        deleteFertilizationLine,\r\n        deleteLoading,\r\n        isEdit,\r\n        selectedLines\r\n    };\r\n}\r\n\r\nconst primaryCycleValidator = (cycleType, otherPatient) =>\r\n    helpers.withParams({ type: \"cycleType\" }, (value) => {\r\n        if (otherPatient.value != null) {\r\n            return true;\r\n        }\r\n        if (cycleType.value == \"FET\") {\r\n            return helpers.req(value);\r\n        }\r\n        return true;\r\n    });\r\n\r\nexport function useEbmryoInfo() {\r\n    const store = useStore();\r\n    const form = reactive({\r\n        primaryCycleId: null,\r\n        otherPatient: null,\r\n        otherPrimaryCycleId: null,\r\n        fromOutside: false\r\n    });\r\n\r\n    const rules = {\r\n        primaryCycleId: {\r\n            validator: helpers.withMessage(\r\n                \"Value Required If cycle type is FET\",\r\n                primaryCycleValidator(\r\n                    computed(\r\n                        () => store.state.artCycle.selectedCycle.cycleType\r\n                    ),\r\n                    computed(() => form.otherPrimaryCycleId)\r\n                )\r\n            )\r\n        }\r\n    };\r\n\r\n    const v$ = useVuelidate(rules, form);\r\n\r\n    const primaryCycles = computed(\r\n        () => store.state.fertilization.primaryCycles\r\n    );\r\n\r\n    const filteredPatient = ref();\r\n    const patientFilter = (event) => {\r\n        Service.searchDemographic({\r\n            term: event.query.trim(),\r\n            sex: \"F\".toLowerCase()\r\n        }).then((resp) => {\r\n            filteredPatient.value = resp.data;\r\n        });\r\n    };\r\n\r\n    const otherPrimaryCycles = ref([]);\r\n    const getOtherPrimaryCycles = async () => {\r\n        const data = await getPrimaryCyclesService(\r\n            form.otherPatient.demographicNo,\r\n            store.state.artCycle.selectedCycle.cycleDate\r\n        );\r\n        if (data.length > 0) {\r\n            otherPrimaryCycles.value = data.map((item) => ({\r\n                ...item,\r\n                label: `${item.cycleId} (${item.cycleDate})`\r\n            }));\r\n        }\r\n    };\r\n\r\n    const emptyEbmryoAssignedTo = () => {\r\n        form.primaryCycleId = null;\r\n    };\r\n\r\n    const getDefaultFreshEbmryo = (cycelId) => {\r\n        let patientId = store.state.artCycle.patient.id;\r\n\r\n        if (form.otherPatient != null) {\r\n            patientId = form.otherPatient.demographicNo;\r\n        }\r\n\r\n        emitter.emit(\"embryo-info:assigned-to-change\", {\r\n            cycleId: cycelId,\r\n            patientId: patientId\r\n        });\r\n    };\r\n\r\n    const onEmbyroAssingedToChageHandler = (event) => {\r\n        getDefaultFreshEbmryo(event.value);\r\n        emptyDonor();\r\n    };\r\n\r\n    const onOtherCycleIdChangeHandler = (event) => {\r\n        getDefaultFreshEbmryo(event.value);\r\n        emptyEbmryoAssignedTo();\r\n    };\r\n\r\n    const emptyDonor = (event) => {\r\n        // getDefaultFreshEbmryo(event.value);\r\n        form.otherPatient = null;\r\n        form.otherPrimaryCycleId = null;\r\n    };\r\n\r\n    const save = () => {\r\n        let payload = {\r\n            ...form,\r\n            patientId: store.state.artCycle.patient.id,\r\n            cycleId: store.state.artCycle.selectedCycle.cycleId,\r\n            otherPatientId: form.otherPatient\r\n                ? form.otherPatient.demographicNo\r\n                : null,\r\n            fromOutside: form.fromOutside ? 1 : 0\r\n        };\r\n\r\n        delete payload.otherPatient;\r\n\r\n        updatePrimaryCycle(payload).then((resp) => {\r\n            if (resp.status == \"success\") {\r\n                console.log(\"success\");\r\n            }\r\n        });\r\n    };\r\n\r\n    return {\r\n        store,\r\n        form,\r\n        v$,\r\n        save,\r\n        primaryCycles,\r\n        filteredPatient,\r\n        patientFilter,\r\n        otherPrimaryCycles,\r\n        getOtherPrimaryCycles,\r\n        emptyEbmryoAssignedTo,\r\n        onEmbyroAssingedToChageHandler,\r\n        onOtherCycleIdChangeHandler\r\n    };\r\n}\r\n","'use strict';\nvar $ = require('../internals/export');\nvar aFunction = require('../internals/a-function');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar fails = require('../internals/fails');\nvar internalSort = require('../internals/array-sort');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar FF = require('../internals/engine-ff-version');\nvar IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');\nvar V8 = require('../internals/engine-v8-version');\nvar WEBKIT = require('../internals/engine-webkit-version');\n\nvar test = [];\nvar nativeSort = test.sort;\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD = arrayMethodIsStrict('sort');\n\nvar STABLE_SORT = !fails(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return String(x) > String(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aFunction(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort.call(array) : nativeSort.call(array, comparefn);\n\n    var items = [];\n    var arrayLength = toLength(array.length);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) items.push(array[index]);\n    }\n\n    items = internalSort(items, getSortCompare(comparefn));\n    itemsLength = items.length;\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) delete array[index++];\n\n    return array;\n  }\n});\n","var userAgent = require('../internals/engine-user-agent');\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nmodule.exports = !!webkit && +webkit[1];\n","// TODO: use something more complex like timsort?\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    mergeSort(array.slice(0, middle), comparefn),\n    mergeSort(array.slice(middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n  var result = [];\n\n  while (lindex < llength || rindex < rlength) {\n    if (lindex < llength && rindex < rlength) {\n      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);\n    } else {\n      result.push(lindex < llength ? left[lindex++] : right[rindex++]);\n    }\n  } return result;\n};\n\nmodule.exports = mergeSort;\n","var UA = require('../internals/engine-user-agent');\n\nmodule.exports = /MSIE|Trident/.test(UA);\n"],"sourceRoot":""}