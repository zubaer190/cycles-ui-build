{"version":3,"sources":["webpack:///./src/assets/women.png","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/views/barcodes/scan.vue?8352","webpack:///./src/views/barcodes/scan.vue","webpack:///./src/components/test/patient-scan-history.vue","webpack:///./src/components/test/patient-scan-history.vue?1005","webpack:///./src/views/barcodes/scan.vue?133f","webpack:///./src/assets/men.png","webpack:///./node_modules/vue-demi/lib/index.mjs","webpack:///./node_modules/core-js/modules/es.number.constructor.js"],"names":["module","exports","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","start","end","trim","style","class","for","src","type","scannedBarcode","placeholder","id","handleBarcodeScan","ref","fopcusOut","scan_person","key","index","patientPicture","gender","patientId","patientFirstName","patientLastName","patientDOB","label","showHistoryDialog","scannedAT","partnerId","partnerFirstName","partnerLastName","partnerDOB","partnerGender","partnerPicture","scan_items","item","title","firstName","lastName","dob","scannedAt","icon","closeBlockItem","resetScanItems","selectedOption","options","actionOptions","optionLabel","optionValue","showClear","saveScanItems","header","visible","historyDialogVisible","closeHistoryDialog","personId","value","historyData","field","props","Number","setup","fetchData","patient_id","get","params","data","__exports__","components","PatientScanHistory","store","inputRef","loading","focusing","toast","patient","partner","addScannedItem","barcodeExists","some","existingItem","push","processBarcodeData","barcode","isNaN","getProfilePictures","scannedItem","containerName","logo","sex","ldata","labBarcode","person","labPatient","photoBase64","splice","payload","action","scannedItems","post","console","log","add","severity","summary","detail","life","focusInput","focus","render","DESCRIPTORS","global","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","create","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","NUMBER","NativeNumber","NumberPrototype","prototype","BROKEN_CLASSOF","toNumber","argument","first","third","radix","maxCode","digits","length","code","it","charCodeAt","NaN","slice","parseInt","NumberWrapper","arguments","dummy","this","valueOf","call","keys","split","j","constructor"],"mappings":"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","file":"js/chunk-0a6390f2.06835330.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/women.f05f7bfb.png\";","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./scan.vue?vue&type=style&index=0&id=cf097122&scoped=true&lang=css\"","<template>\r\n    <div>\r\n        <div\r\n            style=\"display:flex; justify-content: space-between; background-color: #e8d8a7; padding: 10px; margin-bottom: 10px\"\r\n        >\r\n            <div class=\"title-and-input\" style=\"margin-bottom:5px;\">\r\n                <label for=\"barcode-scanner\">Please scan barcode here</label>\r\n                <input\r\n                    type=\"text\"\r\n                    class=\"p-inputtext\"\r\n                    v-model=\"scannedBarcode\"\r\n                    placeholder=\"Scan Barcode\"\r\n                    id=\"barcode-scanner\"\r\n                    @keyup.enter=\"handleBarcodeScan\"\r\n                    ref=\"inputRef\"\r\n                    v-on:blur=\"fopcusOut\"\r\n                    style=\"width:250px;\"\r\n                />\r\n            </div>\r\n            <div class=\"section\">\r\n                <div>\r\n                    <div\r\n                        style=\"display: inline-block;\"\r\n                        v-if=\"scan_person !== null\"\r\n                        :key=\"index\"\r\n                    >\r\n                        <div\r\n                            class=\"block-item1\"\r\n                            style=\"background-color:#FFFFFF;\"\r\n                        >\r\n                            <div style=\"margin-right: 15px; \">\r\n                                <img\r\n                                    v-if=\"patientPicture\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    :src=\"patientPicture\"\r\n                                />\r\n                                <img\r\n                                    v-else-if=\"scan_person.gender == 'F'\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                                <img\r\n                                    v-else\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                class=\"inner-block\"\r\n                                style=\"background-color:#d3D3D3;\"\r\n                            >\r\n                                <div\r\n                                    style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                                >\r\n                                    <div\r\n                                        style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                    >\r\n                                        <span\r\n                                            >{{ scan_person.patientId }}\r\n                                            {{ scan_person.patientFirstName }}\r\n                                            {{\r\n                                                scan_person.patientLastName\r\n                                            }}</span\r\n                                        >\r\n                                        <span\r\n                                            >{{ scan_person.patientDOB }}\r\n                                            {{ scan_person.gender }}</span\r\n                                        >\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        label=\"Show History\"\r\n                                        :style=\"{\r\n                                            width: 200 + 'px'\r\n                                        }\"\r\n                                        @click=\"showHistoryDialog\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                style=\"width: 100px; font-style: italic; display:flex; justify-items:center; align-items:center;\"\r\n                            >\r\n                                <center>{{ scan_person.scannedAT }}</center>\r\n                            </div>\r\n                            <div\r\n                                class=\"inner-block\"\r\n                                style=\"background-color:#d3D3D3;\"\r\n                                v-if=\"scan_person.partnerId !== null\"\r\n                            >\r\n                                <div\r\n                                    style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                                >\r\n                                    <div\r\n                                        style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                    >\r\n                                        <span\r\n                                            >{{ scan_person.partnerId }}\r\n                                            {{ scan_person.partnerFirstName }}\r\n                                            {{\r\n                                                scan_person.partnerLastName\r\n                                            }}</span\r\n                                        >\r\n                                        <span\r\n                                            >{{ scan_person.partnerDOB }}\r\n                                            {{\r\n                                                scan_person.partnerGender\r\n                                            }}</span\r\n                                        >\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        label=\"Show History\"\r\n                                        :style=\"{\r\n                                            width: 200 + 'px'\r\n                                        }\"\r\n                                        @click=\"showHistoryDialog\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"margin-left: 15px; \">\r\n                                <img\r\n                                    v-if=\"partnerPicture\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    :src=\"partnerPicture\"\r\n                                />\r\n                                <img\r\n                                    v-else-if=\"scan_person.partnerGender == 'F'\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                                <img\r\n                                    v-else\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/men.png\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"section\">\r\n                <div>\r\n                    <div\r\n                        style=\"display: inline-block;\"\r\n                        v-for=\"(item, index) in scan_items\"\r\n                        :key=\"index\"\r\n                    >\r\n                        <div\r\n                            class=\"block-item\"\r\n                            :style=\"{\r\n                                'background-color':\r\n                                    item.type !== 'person'\r\n                                        ? '#FC94AF'\r\n                                        : '#FFFFFF'\r\n                            }\"\r\n                        >\r\n                            <div style=\"margin-right: 15px; \">\r\n                                <p>{{ item.title }}</p>\r\n                                <img\r\n                                    v-if=\"item.type === 'person'\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                                <p\r\n                                    v-else\r\n                                    style=\"width: 100px; height: 100px; ;\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                class=\"inner-block\"\r\n                                :style=\"{\r\n                                    'background-color':\r\n                                        item.type !== 'person'\r\n                                            ? '#D4A373'\r\n                                            : '#d3D3D3'\r\n                                }\"\r\n                            >\r\n                                <div\r\n                                    style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                                >\r\n                                    <div\r\n                                        style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                    >\r\n                                        <span>{{ item.id }}</span>\r\n                                        <span>{{ item.firstName }}</span>\r\n                                        <span>{{ item.lastName }}</span>\r\n                                        <span>{{ item.dob }}</span>\r\n                                        <span>{{ item.gender }}</span>\r\n                                        <span>{{ item.scannedAt }}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p-button\r\n                                            icon=\"pi pi-times\"\r\n                                            class=\"p-button-sm\"\r\n                                            @click=\"closeBlockItem(item, index)\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        label=\"Show History\"\r\n                                        :style=\"{\r\n                                            width: 200 + 'px'\r\n                                        }\"\r\n                                        @click=\"showHistoryDialog\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style=\"display: flex; justify-content: space-between;\">\r\n            <div>          \r\n                <p-button label=\"Reset\" class=\"p-button-lg p-button-danger\" @click=\"resetScanItems\"/>\r\n            </div>\r\n            <div>\r\n                <p-dropdown\r\n                    v-model=\"selectedOption\"\r\n                    id=\"selectedOption\"\r\n                    :options=\"actionOptions\"\r\n                    optionLabel=\"label\"\r\n                    optionValue=\"value\"\r\n                    :showClear=\"true\"\r\n                    style=\"min-width: 400px; background-color: #e8d8a7; min-height: 38px;\"\r\n                />\r\n                <p-button label=\"Save\" class=\"p-button-lg\" style=\"margin-left: 10px;\" @click=\"saveScanItems\" />\r\n            </div>\r\n        </div>\r\n        <p-dialog\r\n            header=\"Scanned History\"\r\n            v-model:visible=\"historyDialogVisible\"\r\n            @onHide=\"closeHistoryDialog\"\r\n            style=\"width: 1000px;\"\r\n        >\r\n            <patient-scan-history :patientId=\"personId\" />\r\n        </p-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { onMounted, ref, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { serialize } from \"php-serialize\";\r\nimport { ZEBRA_PRING_URL, NL_FORM_BASE } from \"@/constants\";\r\nimport { ORIGIN } from \"./../../config\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { Dialog } from \"primevue/dialog\";\r\nimport PatientScanHistory from \"@/components/test/patient-scan-history.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        PatientScanHistory\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n        const inputRef = ref(null);\r\n        const loading = ref(false);\r\n        const patientPicture = ref(null);\r\n        const partnerPicture = ref(null);\r\n\r\n        const scannedBarcode = ref(null);\r\n        let focusing = false; // A flag to track if focusing is in progress\r\n        const toast = useToast();\r\n        const personId = ref(null);\r\n        const selectedOption = ref(null);\r\n        const patient = ref({});\r\n        const partner = ref({});\r\n        const historyDialogVisible = ref(false);\r\n        const historyData = ref([]);\r\n        const scan_items = ref([]);\r\n        const scan_person = ref(null);\r\n        const actionOptions = ref([\r\n            {\r\n                label: \"ICSI\",\r\n                value: \"ICSI\"\r\n            },\r\n            {\r\n                label: \"stripping\",\r\n                value: \"stripping\"\r\n            },\r\n            {\r\n                label: \"Ca++\",\r\n                value: \"Ca++\"\r\n            },\r\n            {\r\n                label: \"IVF\",\r\n                value: \"IVF\"\r\n            },\r\n            {\r\n                label: \"transfer to ET dish\",\r\n                value: \"transfer to ET dish\"\r\n            },\r\n            {\r\n                label: \"fertilization check\",\r\n                value: \"fertilization check\"\r\n            },\r\n            {\r\n                label: \"day 3\",\r\n                value: \"day 3\"\r\n            },\r\n            {\r\n                label: \"day 5\",\r\n                value: \"day 5\"\r\n            },\r\n            {\r\n                label: \"OPU\",\r\n                value: \"OPU\"\r\n            },\r\n            {\r\n                label: \"ET\",\r\n                value: \"ET\"\r\n            },\r\n            {\r\n                label: \"embryo glue\",\r\n                value: \"embryo glue\"\r\n            },\r\n            {\r\n                label: \"vitrify\",\r\n                value: \"vitrify\"\r\n            },\r\n            {\r\n                label: \"insemination\",\r\n                value: \"insemination\"\r\n            }\r\n        ]);\r\n\r\n        const showHistoryDialog = () => {\r\n            historyDialogVisible.value = true;\r\n        };\r\n\r\n        const closeHistoryDialog = () => {\r\n            historyDialogVisible.value = false;\r\n        };\r\n        // Function to add a scanned item to scan_items if it's not already present\r\n        const addScannedItem = (item) => {\r\n            const barcodeExists = scan_items.value.some(\r\n                (existingItem) => existingItem.id === item.id\r\n            );\r\n            if (!barcodeExists) {\r\n                scan_items.value.push(item);\r\n            }\r\n        };\r\n\r\n        // Function to handle barcode scanning\r\n        const handleBarcodeScan = () => {\r\n            // Process barcode data and create the item object\r\n            // Replace the following line with your barcode data processing logic\r\n            processBarcodeData(scannedBarcode.value);\r\n            scannedBarcode.value = \"\";\r\n        };\r\n\r\n        // Example function for processing barcode data\r\n        const processBarcodeData = async (barcode) => {\r\n            if (!isNaN(barcode)) {\r\n                if (scan_person.value === null) {\r\n                    try {\r\n                        // get person data axsios\r\n                        const { data } = await $axios.get(\r\n                            `lab-barcode/get-person-data/${barcode}`,\r\n                            {\r\n                                params: {}\r\n                            }\r\n                        );\r\n\r\n                        personId.value = data.patientId;\r\n                        scan_person.value = data;\r\n\r\n                        getProfilePictures(\r\n                            scan_person.patientId,\r\n                            scan_person.partnerId\r\n                        );\r\n                        // getProfilePictures(794531, 794531);\r\n                    } catch (err) {}\r\n                }\r\n            } else {\r\n                if (personId.value !== null) {\r\n                    // get barcode data axios\r\n                    const { data } = await $axios.get(\r\n                        `lab-barcode/get-patient-barcode-data/${personId.value}/${barcode}`,\r\n                        {\r\n                            params: {}\r\n                        }\r\n                    );\r\n\r\n                    const scannedItem = {\r\n                        id: data.barcode,\r\n                        type: \"container\",\r\n                        title: data.containerName,\r\n                        logo: \"logo1\",\r\n                        firstName: data.patientFirstName,\r\n                        lastName: data.patientLastName,\r\n                        dob: data.patientDOB,\r\n                        gender: data.sex,\r\n                        scannedAt: data.scannedAT\r\n                    };\r\n\r\n                    addScannedItem(scannedItem);\r\n\r\n                    getProfilePictures(\r\n                        scan_person.patientId,\r\n                        scan_person.partnerId\r\n                    );\r\n\r\n                    // getProfilePictures(794531, 794531);\r\n                } else {\r\n                    // get barcode data axios\r\n                    const { data } = await $axios.get(\r\n                        `lab-barcode/get-barcode-data/${barcode}`,\r\n                        {\r\n                            params: {}\r\n                        }\r\n                    );\r\n\r\n                    const ldata = data.labBarcode;\r\n\r\n                    const scannedItem = {\r\n                        id: ldata.barcode,\r\n                        type: \"container\",\r\n                        title: ldata.containerName,\r\n                        logo: \"logo1\",\r\n                        firstName: ldata.patientFirstName,\r\n                        lastName: ldata.patientLastName,\r\n                        dob: ldata.patientDOB,\r\n                        gender: ldata.sex,\r\n                        scannedAt: ldata.scannedAT\r\n                    };\r\n\r\n                    const person = data.labPatient;\r\n                    personId.value = person.patientId;\r\n                    scan_person.value = person;\r\n\r\n                    addScannedItem(scannedItem);\r\n                }\r\n            }\r\n        };\r\n\r\n        const getProfilePictures = async (patientId, partnerId) => {\r\n            if (patientId) {\r\n                try {\r\n                    const { data } = await $axios.get(\r\n                        `oscar/patient/pp?patientId=${patientId}`\r\n                    );\r\n\r\n                    patientPicture.value = data.photoBase64;\r\n                    //console.log(data);\r\n                } catch (err) {}\r\n            }\r\n\r\n            if (partnerId) {\r\n                try {\r\n                    const { data } = await $axios.get(\r\n                        `oscar/patient/pp?patientId=${partnerId}`\r\n                    );\r\n\r\n                    partnerPicture.value = data.photoBase64;\r\n                } catch (err) {}\r\n            }\r\n        };\r\n\r\n        const closeBlockItem = (item, index) => {\r\n            // Use splice to remove the item from scan_items by index\r\n\r\n            if (item.type === \"person\") scan_items.value = [];\r\n            else scan_items.value.splice(index, 1);\r\n        };\r\n\r\n        const saveScanItems = async () => {\r\n            // console.log('Scan items data:', scan_items.value);\r\n\r\n            if (selectedOption !== null || selectedOption !== \"\") {\r\n                // console.log(selectedOption.value)\r\n\r\n                const payload = {\r\n                    action: selectedOption.value,\r\n                    patientId: personId.value,\r\n                    scannedItems: scan_items.value\r\n                };\r\n\r\n                try {\r\n                    const { data } = await $axios.post(\r\n                        `lab-barcode/save-scans`,\r\n                        payload\r\n                    );\r\n                    console.log(data);\r\n\r\n                    toast.add({\r\n                        severity: \"success\",\r\n                        summary: \"Success\",\r\n                        detail: \"Scan items saved successfully\",\r\n                        life: 5000 // Adjust this value as needed\r\n                    });\r\n                } catch (err) {}\r\n            }\r\n        };\r\n\r\n        const resetScanItems = () => {\r\n            scan_items.value = [];\r\n            scan_person.value = null;\r\n            personId.value = null\r\n        }\r\n\r\n        onMounted(() => {\r\n            //console.log(store.state.artCycle.patient);\r\n            focusInput();\r\n        });\r\n\r\n        // Watch for changes in the \"scannedBarcode\" variable to trigger refocusing\r\n        watch(scannedBarcode, () => {\r\n            if (!focusing) {\r\n                // If the input loses focus and \"scannedBarcode\" changes, refocus it\r\n                focusInput();\r\n            }\r\n        });\r\n\r\n        // Function to focus the input field\r\n        const focusInput = () => {\r\n            focusing = true;\r\n            if (inputRef.value) {\r\n                inputRef.value.focus();\r\n            }\r\n            focusing = false;\r\n        };\r\n\r\n        const fopcusOut = () => {\r\n            focusing = false;\r\n            focusInput();\r\n        };\r\n\r\n        return {\r\n            loading,\r\n            patient,\r\n            partner,\r\n            partnerPicture,\r\n            patientPicture,\r\n            personId,\r\n            store,\r\n            scan_items,\r\n            scannedBarcode,\r\n            handleBarcodeScan,\r\n            closeBlockItem,\r\n            saveScanItems,\r\n            selectedOption,\r\n            toast,\r\n            inputRef,\r\n            fopcusOut,\r\n            historyDialogVisible,\r\n            historyData,\r\n            showHistoryDialog,\r\n            closeHistoryDialog,\r\n            scan_person,\r\n            actionOptions,\r\n            resetScanItems\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.p-card .p-card-content {\r\n    padding: 0;\r\n}\r\n\r\n.block-item1 {\r\n    display: flex;\r\n    border: 1px solid #8cb3d9;\r\n    padding: 10px;\r\n}\r\n\r\n.block-item {\r\n    display: flex;\r\n    border: 1px solid #8cb3d9;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.title-and-input {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    margin-left: 10px;\r\n    margin-top: 35px;\r\n}\r\n\r\n.inner-block {\r\n    padding: 10px;\r\n}\r\n\r\n.separator {\r\n    width: 1px;\r\n    background-color: #000; /* Set the color of the separator */\r\n    margin: 0 10px; /* Adjust the margin to control the spacing */\r\n}\r\n</style>\r\n","<template>\r\n     <div class=\"p-grid\">\r\n        <p-data-table :value=\"historyData\">\r\n            <p-column field=\"patiendId\" header=\"ID\" />\r\n            <p-column field=\"containerId\" header=\"Container Id\" />\r\n            <p-column field=\"containerName\" header=\"Container Name\" />\r\n            <p-column field=\"barcode\" header=\"Barcode\" />\r\n            <p-column field=\"generatedAt\" header=\"Generated At\" />\r\n            <p-column field=\"patientFirstName\" header=\"Patient First Name\" />\r\n            <p-column field=\"patientLastName\" header=\"Patient Last Name\" />\r\n            <p-column field=\"gender\" header=\"gender\" />\r\n            <p-column field=\"savedBy\" header=\"Saved By\" />\r\n        </p-data-table>                         \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref, onMounted } from \"vue\";\r\nimport { toRefs } from \"vue-demi\";\r\nimport { $axios } from \"@/service/app-http\";\r\n\r\nexport default {\r\n    props: {\r\n        patientId: Number\r\n    },\r\n    setup(props) {\r\n        const historyData = ref([]);\r\n        const { patientId } = toRefs(props);\r\n\r\n        const fetchData = async (patient_id) => {\r\n       \r\n           // try {\r\n                const { data } = await $axios.get(`lab-barcode/list-scan-items/${patient_id}`, {\r\n                    params: {}\r\n                });\r\n                                              \r\n                historyData.value = data.data;                 \r\n\r\n           // } catch (err) {}\r\n        }\r\n\r\n        // Call fetchData when the component is created\r\n        onMounted(() => {\r\n            fetchData(patientId.value);\r\n        });\r\n\r\n        return {\r\n            historyData \r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import { render } from \"./patient-scan-history.vue?vue&type=template&id=4a7940fa&scoped=true\"\nimport script from \"./patient-scan-history.vue?vue&type=script&lang=js\"\nexport * from \"./patient-scan-history.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a7940fa\"]])\n\nexport default __exports__","import { render } from \"./scan.vue?vue&type=template&id=cf097122&scoped=true\"\nimport script from \"./scan.vue?vue&type=script&lang=js\"\nexport * from \"./scan.vue?vue&type=script&lang=js\"\n\nimport \"./scan.vue?vue&type=style&index=0&id=cf097122&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cf097122\"]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/men.a5e81f19.png\";","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n"],"sourceRoot":""}