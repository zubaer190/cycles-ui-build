{"version":3,"sources":["webpack:///./src/views/lab-mon.vue?669a","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./src/views/lab-mon.vue","webpack:///./src/views/lab-mon.vue?ffcd"],"names":["collection","collectionStrong","module","exports","init","this","arguments","length","undefined","class","style","for","id","selectedDate","dateFormat","showIcon","label","fetchData","handleReview","reviewData","reviewed_by","reviewed_at","selectedNames","options","nameOptions","filter","optionLabel","optionValue","placeholder","fromDate","toDate","exportExcel","value","filteredLabMonForm","showGridlines","scrollable","scrollDirection","scrollHeight","field","header","frozen","alignFrozen","body","slotProps","data","name","val","ref","filteredColumns","column","index","disabled","val2","comment","time","initial","time2","initial2","timeComm","setup","toast","labMonForm","Date","columns","formattedDate","format","post","date","response","status","add","severity","summary","detail","life","head_titles","co2","temperature","water_level","ln_level","voc","emb_temp","andro_temp","liquid_usagae","ph","disableInput","vals","split","includes","toString","get","params","audit","Object","keys","console","error","updateValue","event","rowIndex","target","valtype","colName","valType","updateValue2","updateValueC","initialComm","formattedFromDate","formattedToDate","filePath","fileUrl","window","open","Array","from","Set","map","item","col","row","__exports__","render"],"mappings":"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","file":"js/chunk-1a5c1fc4.20e350d8.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./lab-mon.vue?vue&type=style&index=0&id=bb8d0f3a&scoped=true&lang=css\"","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","<template>\r\n    <div class=\"page-container\">\r\n        <div class=\"header\">\r\n            <!-- Your other content (calendars, buttons, etc.) -->\r\n            <div\r\n                class=\"p-mx-2 p-mb-3\"\r\n                style=\"display: flex; justify-content: space-between;\"\r\n            >\r\n                <div style=\"display: flex;\">\r\n                    <div class=\"p-field p-grid\">\r\n                        <label for=\"date\" class=\"p-col-fixed\">Date</label>\r\n                        <div>\r\n                            <p-calendar\r\n                                id=\"date\"\r\n                                v-model=\"selectedDate\"\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                :showIcon=\"true\"\r\n                                class=\"custom-calendar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <p-button\r\n                        label=\"Get Data\"\r\n                        class=\"p-ml-4\"\r\n                        @click=\"fetchData\"\r\n                    />\r\n                    <!-- <p-button\r\n                        label=\"Review\"\r\n                        class=\"p-ml-4\"\r\n                    />\r\n                    <div style=\"display: flex; flex-direction: column; margin-left: 10px;\">\r\n                        <span style=\"font-weight: bold; margin-bottom: 2px;\">Reviewed by: </span>\r\n                        <span style=\"font-weight: bold;\">At: </span>\r\n                    </div> -->\r\n                    <p-button\r\n                        label=\"Review\"\r\n                        class=\"p-ml-4\"\r\n                        @click=\"handleReview\"\r\n                    />\r\n                    <div\r\n                        v-if=\"reviewData.reviewed_by && reviewData.reviewed_at\"\r\n                        style=\"display: flex; flex-direction: column; margin-left: 10px;\"\r\n                    >\r\n                        <span style=\"font-weight: bold; margin-bottom: 2px;\">\r\n                            Reviewed by: {{ reviewData.reviewed_by }}\r\n                        </span>\r\n                        <span style=\"font-weight: bold;\">\r\n                            At: {{ reviewData.reviewed_at }}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div style=\"display: flex;\">\r\n                    <div class=\"p-field p-grid p-mr-4\">\r\n                        <label for=\"nameFilter\" class=\"p-col-fixed\"\r\n                            >Filter by Name</label\r\n                        >\r\n                        <p-multi-select\r\n                            v-model=\"selectedNames\"\r\n                            :options=\"nameOptions\"\r\n                            :filter=\"true\"\r\n                            optionLabel=\"label\"\r\n                            optionValue=\"value\"\r\n                            placeholder=\"Select Names\"\r\n                            style=\"width: 250px;\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"p-field p-grid p-mr-4\">\r\n                        <label for=\"fromDate\" class=\"p-col-fixed\"\r\n                            >From Date</label\r\n                        >\r\n                        <div>\r\n                            <p-calendar\r\n                                id=\"fromDate\"\r\n                                v-model=\"fromDate\"\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                :showIcon=\"true\"\r\n                                class=\"custom-calendar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-field p-grid\">\r\n                        <label for=\"toDate\" class=\"p-col-fixed\">To Date</label>\r\n                        <div>\r\n                            <p-calendar\r\n                                id=\"toDate\"\r\n                                v-model=\"toDate\"\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                :showIcon=\"true\"\r\n                                class=\"custom-calendar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <p-button\r\n                        label=\"Export XLS\"\r\n                        class=\"p-ml-4\"\r\n                        @click=\"exportExcel\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"table-container\">\r\n            <p-data-table\r\n                :value=\"filteredLabMonForm\"\r\n                showGridlines\r\n                class=\"p-datatable-sm p-mt-1 p-shadow-1\"\r\n                :scrollable=\"true\"\r\n                scrollDirection=\"both\"\r\n                scrollHeight=\"flex\"\r\n            >\r\n                <p-column\r\n                    field=\"name\"\r\n                    header=\"Name\"\r\n                    frozen\r\n                    alignFrozen=\"left\"\r\n                    :style=\"{\r\n                        width: '200px',\r\n                        background: '#D3D3D3',\r\n                        zIndex: 2\r\n                    }\"\r\n                >\r\n                    <template #body=\"slotProps\">\r\n                        <div class=\"cell-container\">\r\n                            <div class=\"cell-content\">\r\n                                <span class=\"static-text wrapped-text\">\r\n                                    {{ slotProps.data.name.val }}\r\n                                    {{\r\n                                        slotProps.data.name.ref\r\n                                            ? \"[\" +\r\n                                              slotProps.data.name.ref +\r\n                                              \"]\"\r\n                                            : \"\"\r\n                                    }}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div class=\"cell-content2\">\r\n                                <div>\r\n                                    <span class=\"static-texts\"> Val-1 :</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"static-texts\"> Val-2 :</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span class=\"static-texts\"> Comnt :</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </p-column>\r\n\r\n                <!-- Table Columns and Body -->\r\n                <template\r\n                    v-for=\"(column, index) in filteredColumns\"\r\n                    :key=\"index\"\r\n                >\r\n                    <p-column\r\n                        :field=\"column\"\r\n                        :header=\"\r\n                            head_titles[column]\r\n                                ? head_titles[column]\r\n                                : column.charAt(0).toUpperCase() +\r\n                                  column.slice(1)\r\n                        \"\r\n                        :style=\"{ width: '200px' }\"\r\n                    >\r\n                        <template #body=\"slotProps\">\r\n                            <div\r\n                                class=\"cell-container\"\r\n                                :class=\"{\r\n                                    'bg-grey': disableInput(\r\n                                        index + 1,\r\n                                        slotProps.data[columns[0]]\r\n                                            .disabled_fields\r\n                                    )\r\n                                }\"\r\n                            >\r\n                                <div class=\"cell-content\">\r\n                                    <p-input-text\r\n                                        :value=\"slotProps.data[column].val\"\r\n                                        :disabled=\"\r\n                                            disableInput(\r\n                                                index + 1,\r\n                                                slotProps.data[columns[0]]\r\n                                                    .disabled_fields\r\n                                            )\r\n                                        \"\r\n                                        class=\"custom-input-text small-input\"\r\n                                        @change=\"\r\n                                            updateValue(\r\n                                                $event,\r\n                                                column,\r\n                                                slotProps.index\r\n                                            )\r\n                                        \"\r\n                                    />\r\n                                    <p-input-text\r\n                                        :value=\"slotProps.data[column].val2\"\r\n                                        :disabled=\"\r\n                                            disableInput(\r\n                                                index + 1,\r\n                                                slotProps.data[columns[0]]\r\n                                                    .disabled_fields\r\n                                            )\r\n                                        \"\r\n                                        class=\"custom-input-text small-input\"\r\n                                        @change=\"\r\n                                            updateValue2(\r\n                                                $event,\r\n                                                column,\r\n                                                slotProps.index\r\n                                            )\r\n                                        \"\r\n                                    />\r\n                                    <p-input-text\r\n                                        :value=\"slotProps.data[column].comment\"\r\n                                        :disabled=\"\r\n                                            disableInput(\r\n                                                index + 1,\r\n                                                slotProps.data[columns[0]]\r\n                                                    .disabled_fields\r\n                                            )\r\n                                        \"\r\n                                        class=\"custom-input-text small-input\"\r\n                                        @change=\"\r\n                                            updateValueC(\r\n                                                $event,\r\n                                                column,\r\n                                                slotProps.index\r\n                                            )\r\n                                        \"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div class=\"cell-content2\">\r\n                                    <div>\r\n                                        <span class=\"static-text\">{{\r\n                                            slotProps.data[column].time\r\n                                        }}</span>\r\n                                        <span class=\"static-text\"\r\n                                            >{{\r\n                                                slotProps.data[column].initial\r\n                                            }}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"static-text\">{{\r\n                                            slotProps.data[column].time2\r\n                                        }}</span>\r\n                                        <span class=\"static-text\"\r\n                                            >{{\r\n                                                slotProps.data[column].initial2\r\n                                            }}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span class=\"static-text\">{{\r\n                                            slotProps.data[column].timeComm\r\n                                        }}</span>\r\n                                        <span class=\"static-text\"\r\n                                            >{{\r\n                                                slotProps.data[column]\r\n                                                    .initialComm\r\n                                            }}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </p-column>\r\n                </template>\r\n            </p-data-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch, computed } from \"vue\";\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { DATE_FORMAT_STRING, ORIGIN } from \"../config.js\";\r\nimport { TIME_0 } from \"@/constants.js\";\r\nimport { da } from \"date-fns/locale\";\r\nimport format from \"date-fns/format\";\r\nimport { useToast } from \"primevue/usetoast\";\r\n\r\nexport default {\r\n    setup() {\r\n        const toast = useToast();\r\n        const labMonForm = ref([]);\r\n        const selectedDate = ref(new Date());\r\n        const fromDate = ref(new Date());\r\n        const toDate = ref(new Date());\r\n\r\n        const columns = ref([]);\r\n        const selectedNames = ref([]);\r\n\r\n        const reviewData = ref({ reviewed_by: \"\", reviewed_at: \"\" });\r\n\r\n        const handleReview = async () => {\r\n            try {\r\n                const formattedDate = format(\r\n                    new Date(selectedDate.value),\r\n                    \"yyyy-MM-dd\"\r\n                );\r\n\r\n                await $axios.post(\"lab-mon/audit\", { date: formattedDate });\r\n\r\n                fetchData();\r\n            } catch (error) {\r\n                if (error.response.status == 403) {\r\n                    toast.add({\r\n                        severity: \"error\",\r\n                        summary: \"Permission denied\",\r\n                        detail: \"You don't have permisssion to review\",\r\n                        life: 3000\r\n                    });\r\n                }\r\n\r\n                // console.error(\"Error during review process:\", error);\r\n            }\r\n        };\r\n\r\n        const head_titles = ref({\r\n            co2: \"Co2 (Ref: 6% - 7%)\",\r\n            temperature: \"Temperature (Ref: 37+ - 0.5)\",\r\n            water_level: \"Water Level (Ref: => 40%)\",\r\n            ln_level: \"Ln Level\",\r\n            voc: \"Voc Temperature\",\r\n            emb_temp: \"Embryology Temperature\",\r\n            andro_temp: \"Andrology Temperature\",\r\n            liquid_usagae: \"Liquid Usage\",\r\n            ph: \"PH (Ref: 7.22 - 7.38)\"\r\n        });\r\n\r\n        // const formatDate = (date) => {\r\n        //     const d = new Date(date);\r\n        //     let month = \"\" + (d.getMonth() + 1);\r\n        //     let day = \"\" + d.getDate();\r\n        //     const year = d.getFullYear();\r\n\r\n        //     if (month.length < 2) month = \"0\" + month;\r\n        //     if (day.length < 2) day = \"0\" + day;\r\n\r\n        //     return [year, month, day].join(\"-\");\r\n        // };\r\n\r\n        const disableInput = (val, vals) => {\r\n            if (vals === null) return false;\r\n            return vals.split(\",\").includes(val.toString());\r\n        };\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const formattedDate = format(\r\n                    new Date(selectedDate.value),\r\n                    \"yyyy-MM-dd\"\r\n                ); // Format the date\r\n\r\n                const response = await $axios.get(\"lab-mon/data-v2\", {\r\n                    params: { date: formattedDate }\r\n                });\r\n\r\n                if (response.data) {\r\n                    labMonForm.value = response.data.data;\r\n\r\n                    if (response.data.audit) {\r\n                        reviewData.value = {\r\n                            reviewed_by: response.data.audit.reviewed_by,\r\n                            reviewed_at: response.data.audit.reviewed_at\r\n                        };\r\n                    } else {\r\n                        reviewData.value = {\r\n                            reviewed_by: null,\r\n                            reviewed_at: null\r\n                        };\r\n                    }\r\n                }\r\n\r\n                columns.value = Object.keys(labMonForm.value[0] || {});\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n\r\n        const updateValue = async (event, column, rowIndex) => {\r\n            if (rowIndex >= 0 && rowIndex < filteredLabMonForm.value.length) {\r\n                filteredLabMonForm.value[rowIndex][column].val =\r\n                    event.target.value;\r\n\r\n                const formattedDate = format(\r\n                    new Date(selectedDate.value),\r\n                    DATE_FORMAT_STRING\r\n                ); // Format the date\r\n\r\n                const valtype = 1;\r\n                const { data } = await $axios.post(\"lab-mon/save\", {\r\n                    name: filteredLabMonForm.value[rowIndex][\"name\"].val,\r\n                    value: filteredLabMonForm.value[rowIndex][column].val,\r\n                    colName: column,\r\n                    valType: valtype,\r\n                    date: formattedDate\r\n                });\r\n\r\n                filteredLabMonForm.value[rowIndex][column].time = data.time;\r\n                filteredLabMonForm.value[rowIndex][column].initial =\r\n                    data.initial;\r\n            } else {\r\n                console.error(`Invalid rowIndex: ${rowIndex}`);\r\n            }\r\n        };\r\n\r\n        const updateValue2 = async (event, column, rowIndex) => {\r\n            if (rowIndex >= 0 && rowIndex < filteredLabMonForm.value.length) {\r\n                filteredLabMonForm.value[rowIndex][column].val2 =\r\n                    event.target.value;\r\n\r\n                const formattedDate = format(\r\n                    new Date(selectedDate.value),\r\n                    DATE_FORMAT_STRING\r\n                ); // Format the date\r\n\r\n                const valtype = 2;\r\n                const { data } = await $axios.post(\"lab-mon/save\", {\r\n                    name: filteredLabMonForm.value[rowIndex][\"name\"].val,\r\n                    value: filteredLabMonForm.value[rowIndex][column].val2,\r\n                    colName: column,\r\n                    valType: valtype,\r\n                    date: formattedDate\r\n                });\r\n\r\n                filteredLabMonForm.value[rowIndex][column].time2 = data.time;\r\n                filteredLabMonForm.value[rowIndex][column].initial2 =\r\n                    data.initial;\r\n            } else {\r\n                console.error(`Invalid rowIndex: ${rowIndex}`);\r\n            }\r\n        };\r\n\r\n        const updateValueC = async (event, column, rowIndex) => {\r\n            if (rowIndex >= 0 && rowIndex < filteredLabMonForm.value.length) {\r\n                filteredLabMonForm.value[rowIndex][column].comment =\r\n                    event.target.value;\r\n\r\n                const formattedDate = format(\r\n                    new Date(selectedDate.value),\r\n                    DATE_FORMAT_STRING\r\n                ); // Format the date\r\n\r\n                const valtype = 3;\r\n                const { data } = await $axios.post(\"lab-mon/save\", {\r\n                    name: filteredLabMonForm.value[rowIndex][\"name\"].val,\r\n                    value: filteredLabMonForm.value[rowIndex][column].comment,\r\n                    colName: column,\r\n                    valType: valtype,\r\n                    date: formattedDate\r\n                });\r\n\r\n                filteredLabMonForm.value[rowIndex][column].timeComm = data.time;\r\n                filteredLabMonForm.value[rowIndex][column].initialComm =\r\n                    data.initial;\r\n            } else {\r\n                console.error(`Invalid rowIndex: ${rowIndex}`);\r\n            }\r\n        };\r\n\r\n        const exportExcel = async () => {\r\n            try {\r\n                const formattedFromDate = format(\r\n                    new Date(fromDate.value),\r\n                    DATE_FORMAT_STRING\r\n                );\r\n\r\n                const formattedToDate = format(\r\n                    new Date(toDate.value),\r\n                    DATE_FORMAT_STRING\r\n                );\r\n\r\n                const response = await $axios.get(\"lab-mon/export\", {\r\n                    params: {\r\n                        fromDate: formattedFromDate,\r\n                        toDate: formattedToDate,\r\n                        selectedNames: selectedNames.value\r\n                    }\r\n                });\r\n\r\n                if (response.data && response.data.filePath) {\r\n                    const fileUrl = `${ORIGIN}/${response.data.filePath}`;\r\n\r\n                    // Open the file in a new tab\r\n                    window.open(fileUrl, \"_blank\");\r\n                } else {\r\n                    console.error(\"Export link not found in response.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error exporting data:\", error);\r\n            }\r\n        };\r\n        const nameOptions = computed(() =>\r\n            Array.from(\r\n                new Set(labMonForm.value.map((item) => item.name.val))\r\n            ).map((name) => ({ label: name, value: name }))\r\n        );\r\n\r\n        // Filtered data based on selected names\r\n        const filteredColumns = computed(() => {\r\n            return columns.value\r\n                ? columns.value.filter((col) => col !== \"name\")\r\n                : [];\r\n        });\r\n\r\n        // Filtered data based on selected names\r\n        const filteredLabMonForm = computed(() => {\r\n            return selectedNames.value.length > 0\r\n                ? labMonForm.value.filter((row) =>\r\n                      selectedNames.value.includes(row.name.val)\r\n                  )\r\n                : labMonForm.value;\r\n        });\r\n\r\n        watch(selectedDate, fetchData);\r\n\r\n        onMounted(() => {\r\n            fetchData();\r\n        });\r\n\r\n        return {\r\n            labMonForm,\r\n            disableInput,\r\n            filteredLabMonForm,\r\n            columns,\r\n            filteredColumns,\r\n            head_titles,\r\n            selectedDate,\r\n            fromDate,\r\n            toDate,\r\n            fetchData,\r\n            updateValue,\r\n            updateValue2,\r\n            updateValueC,\r\n            exportExcel,\r\n            selectedNames,\r\n            nameOptions,\r\n            reviewData,\r\n            handleReview\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh; /* Full viewport height */\r\n}\r\n\r\n.header {\r\n    flex-shrink: 0; /* Prevents the header from shrinking */\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.table-container {\r\n    flex-grow: 1; /* Make the table container fill the remaining space */\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden; /* Ensure no overflow issues */\r\n}\r\n\r\n.p-datatable-sm {\r\n    flex-grow: 1; /* Allow the table to grow and fill available space */\r\n    overflow-y: auto; /* Enable scrolling within the table body */\r\n}\r\n\r\n.cell-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 200px;\r\n}\r\n\r\n/* .wrapped-text {\r\n    width: 100%;\r\n    word-wrap: break-word;\r\n    overflow-wrap: break-word;\r\n    white-space: normal;\r\n} */\r\n\r\n.cell-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    width: 120px; /* Fixed width for left content */\r\n    word-wrap: break-word;\r\n    overflow-wrap: break-word;\r\n    white-space: normal;\r\n}\r\n\r\n.cell-content2 {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    gap: 5px;\r\n    font-size: 12px;\r\n    width: 70px;\r\n}\r\n\r\n.cell-content2 div {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.cell-content2 div:last-child {\r\n    margin-bottom: 0;\r\n}\r\n\r\n.static-text {\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n}\r\n\r\n.static-texts {\r\n    font-weight: bold;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n}\r\n.custom-input-text {\r\n    background-color: transparent;\r\n    border: none;\r\n    max-width: 120px;\r\n}\r\n.small-input {\r\n    height: 24px !important;\r\n    font-size: 12px !important;\r\n    padding: 2px 5px !important;\r\n}\r\n.custom-calendar {\r\n    width: 130px;\r\n}\r\n\r\n.bg-grey {\r\n    background-color: #f0f0f0;\r\n}\r\n</style>\r\n","import { render } from \"./lab-mon.vue?vue&type=template&id=bb8d0f3a&scoped=true\"\nimport script from \"./lab-mon.vue?vue&type=script&lang=js\"\nexport * from \"./lab-mon.vue?vue&type=script&lang=js\"\n\nimport \"./lab-mon.vue?vue&type=style&index=0&id=bb8d0f3a&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bb8d0f3a\"]])\n\nexport default __exports__"],"sourceRoot":""}