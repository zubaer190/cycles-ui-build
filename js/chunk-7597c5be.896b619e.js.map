{"version":3,"sources":["webpack:///./src/assets/women.png","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./src/views/barcodes/scan.vue","webpack:///./src/components/test/patient-scan-history.vue","webpack:///./src/components/test/patient-scan-history.vue?1005","webpack:///./src/views/barcodes/scan.vue?133f","webpack:///./node_modules/vue-demi/lib/index.mjs","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./src/views/barcodes/scan.vue?3d68"],"names":["module","exports","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","String","replace","start","end","trim","class","style","src","value","type","scannedBarcode","placeholder","id","handleBarcodeScan","ref","fopcusOut","scan_items","item","index","key","title","firstName","lastName","dob","gender","scannedAt","icon","closeBlockItem","label","showHistoryDialog","selectedOption","saveScanItems","header","visible","historyDialogVisible","closeHistoryDialog","patientId","personId","historyData","field","props","Number","setup","fetchData","patient_id","get","params","data","__exports__","components","PatientScanHistory","store","inputRef","loading","focusing","toast","patient","partner","addScannedItem","barcodeExists","some","existingItem","push","processBarcodeData","barcode","length","scannedItem","logo","patientFirstName","patientLastName","patientDOB","sex","scannedAT","containerName","splice","payload","action","scannedItems","post","console","log","add","severity","summary","detail","life","focusInput","focus","render","DESCRIPTORS","global","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","create","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","NUMBER","NativeNumber","NumberPrototype","prototype","BROKEN_CLASSOF","toNumber","argument","first","third","radix","maxCode","digits","code","it","charCodeAt","NaN","slice","parseInt","NumberWrapper","arguments","dummy","this","valueOf","call","keys","split","j","constructor"],"mappings":"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","file":"js/chunk-7597c5be.896b619e.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/women.f05f7bfb.png\";","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","<template>\r\n<div>\r\n    <div class=\"title-and-input\" style=\"margin-bottom:5px;\">\r\n        <input\r\n            type=\"text\"\r\n            class=\"p-inputtext\"\r\n            v-model=\"scannedBarcode\"\r\n            placeholder=\"Scan Barcode\"\r\n            id=\"barcode-scanner\"\r\n            @keyup.enter=\"handleBarcodeScan\"\r\n            ref=\"inputRef\"\r\n            v-on:blur=\"fopcusOut\"\r\n            style=\"width:250px;\"\r\n        />\r\n    </div>\r\n    <div>\r\n        <div class=\"section\">\r\n            <div>\r\n                <div\r\n                    style=\"display: inline-block;\"\r\n                    v-for=\"(item, index) in scan_items\"\r\n                    :key=\"index\"\r\n                >\r\n                    <div\r\n                        class=\"block-item\"\r\n                        :style=\"{\r\n                            'background-color':\r\n                                item.type !== 'person' ? '#FC94AF' : '#FFFFFF'\r\n                        }\"\r\n                    >\r\n                        <div style=\"margin-right: 15px; \">\r\n                            <p>{{ item.title }}</p>\r\n                            <img\r\n                                v-if=\"item.type === 'person'\"\r\n                                style=\"width: 100px; height: 100px;\"\r\n                                src=\"../../assets/women.png\"\r\n                            />\r\n                            <p v-else style=\"width: 100px; height: 100px; ;\" />\r\n                        </div>\r\n                        <div\r\n                            class=\"inner-block\"\r\n                            :style=\"{\r\n                                'background-color':\r\n                                    item.type !== 'person'\r\n                                        ? '#D4A373'\r\n                                        : '#d3D3D3'\r\n                            }\"\r\n                        >\r\n                            <div\r\n                                style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                            >\r\n                                <div\r\n                                    style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                >\r\n                                    <span>{{ item.id }}</span>\r\n                                    <span>{{ item.firstName }}</span>\r\n                                    <span>{{ item.lastName }}</span>\r\n                                    <span>{{ item.dob }}</span>\r\n                                    <span>{{ item.gender }}</span>\r\n                                    <span>{{ item.scannedAt }}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        icon=\"pi pi-times\"\r\n                                        class=\"p-button-sm\"\r\n                                        @click=\"closeBlockItem(item, index)\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <p-button\r\n                                    label=\"Show History\"\r\n                                    :style=\"{\r\n                                        width: 200 + 'px'\r\n                                    }\"\r\n                                    @click=\"showHistoryDialog\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"bottom-right\">\r\n        <select v-model=\"selectedOption\" style=\"width: 200px; height: 40px; margin-right: 10px; border-radius: 3px;\">\r\n            <option value=\"option1\">Option 1</option>\r\n            <option value=\"option2\">Option 2</option>\r\n            <!-- Add more options as needed -->\r\n        </select>\r\n        <p-button\r\n            label=\"Save\"\r\n            class=\"p-button-lg\"\r\n            @click=\"saveScanItems\"\r\n        />              \r\n    </div>\r\n    <p-dialog\r\n        header=\"Scanned History\" \r\n        v-model:visible=\"historyDialogVisible\"  \r\n        @onHide=\"closeHistoryDialog\"\r\n        style=\"width: 1000px;\"\r\n    >\r\n       <patient-scan-history :patientId =\"personId\"/>\r\n    </p-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { onMounted, ref, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { serialize } from \"php-serialize\";\r\nimport { ZEBRA_PRING_URL, NL_FORM_BASE } from \"@/constants\";\r\nimport { ORIGIN } from \"./../../config\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { Dialog } from 'primevue/dialog';\r\nimport PatientScanHistory from \"@/components/test/patient-scan-history.vue\";\r\n\r\nexport default {\r\n    components: {\r\n        PatientScanHistory\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n        const inputRef = ref(null);\r\n        const loading = ref(false);\r\n        const scannedBarcode = ref(null);\r\n        let focusing = false; // A flag to track if focusing is in progress\r\n        const toast = useToast();\r\n        const personId = ref(null);\r\n        const selectedOption =  ref(null);\r\n        const patient = ref({});\r\n        const partner = ref({});\r\n        const historyDialogVisible = ref(false);\r\n        const historyData = ref([]);\r\n        const scan_items = ref([]);\r\n\r\n\r\n        const showHistoryDialog = () => {\r\n            historyDialogVisible.value = true;\r\n        };\r\n\r\n        const closeHistoryDialog = () => {\r\n            historyDialogVisible.value = false;\r\n        };\r\n        // Function to add a scanned item to scan_items if it's not already present\r\n        const addScannedItem = (item) => {\r\n            const barcodeExists = scan_items.value.some(\r\n                (existingItem) => existingItem.id === item.id\r\n            );\r\n            if (!barcodeExists) {\r\n                scan_items.value.push(item);\r\n            }\r\n        };\r\n\r\n        // Function to handle barcode scanning\r\n        const handleBarcodeScan = () => {\r\n   \r\n            // Process barcode data and create the item object\r\n            // Replace the following line with your barcode data processing logic\r\n            processBarcodeData(scannedBarcode.value);\r\n            scannedBarcode.value = \"\";\r\n        };\r\n\r\n        // Example function for processing barcode data\r\n        const processBarcodeData = async (barcode) => {\r\n            if(scan_items.value.length == 0) {\r\n\r\n                try {\r\n                    // get person data axsios\r\n                    const { data } = await $axios.get(`lab-barcode/get-person-data/${barcode}`, {\r\n                        params: {}\r\n                    });\r\n\r\n                    personId.value = data.barcode;\r\n                    const scannedItem = {\r\n                        id: data.barcode,\r\n                        type: \"person\",\r\n                        title: \"_\",\r\n                        logo: \"logo1\",\r\n                        firstName: data.patientFirstName,\r\n                        lastName: data.patientLastName,\r\n                        dob: data.patientDOB,\r\n                        gender: data.sex,\r\n                        scannedAt: data.scannedAT\r\n                    };\r\n                \r\n                    addScannedItem(scannedItem);\r\n\r\n                 } catch (err) {}\r\n\r\n            } else {\r\n                try {\r\n                    if(personId.value !== null) {\r\n\r\n                        // get barcode data axios\r\n                        const { data } = await $axios.get(`lab-barcode/get-barcode-data/${personId.value}/${barcode}`, {\r\n                            params: {}\r\n                        });\r\n\r\n                        const scannedItem = {\r\n                            id: data.barcode,\r\n                            type: \"container\",\r\n                            title: data.containerName,\r\n                            logo: \"logo1\",\r\n                            firstName: data.patientFirstName,\r\n                            lastName: data.patientLastName,\r\n                            dob: data.patientDOB,\r\n                            gender: data.sex,\r\n                            scannedAt: data.scannedAT\r\n                        };\r\n                        \r\n                        addScannedItem(scannedItem);\r\n                    }\r\n\r\n                } catch (err) {}\r\n                \r\n\r\n            }\r\n        };\r\n\r\n        const closeBlockItem = (item, index) => {\r\n            // Use splice to remove the item from scan_items by index\r\n            \r\n            if(item.type === \"person\") scan_items.value = [];\r\n            else scan_items.value.splice(index, 1);\r\n        };\r\n\r\n        const saveScanItems = async () => {\r\n            // console.log('Scan items data:', scan_items.value);\r\n\r\n            if(selectedOption !== null || selectedOption !== '') {\r\n                // console.log(selectedOption.value)\r\n\r\n                const payload = {\r\n                    action: selectedOption.value,\r\n                    patientId: personId.value,\r\n                    scannedItems: scan_items.value,\r\n                };\r\n\r\n                 try {\r\n                    const { data } = await $axios.post(`lab-barcode/save-scans`, payload);\r\n                    console.log(data);\r\n\r\n                    toast.add({\r\n                        severity: 'success',\r\n                        summary: 'Success',\r\n                        detail: 'Scan items saved successfully',\r\n                        life: 5000, // Adjust this value as needed\r\n                    });\r\n                } catch (err) {}\r\n            }\r\n        }\r\n            \r\n\r\n        onMounted(() => {\r\n            //console.log(store.state.artCycle.patient);\r\n            focusInput();\r\n        });\r\n\r\n        // Watch for changes in the \"scannedBarcode\" variable to trigger refocusing\r\n        watch(scannedBarcode, () => {\r\n            if (!focusing) {\r\n                // If the input loses focus and \"scannedBarcode\" changes, refocus it\r\n                focusInput();\r\n            }\r\n        });\r\n\r\n        // Function to focus the input field\r\n        const focusInput = () => {\r\n            focusing = true;\r\n            if (inputRef.value) {\r\n                inputRef.value.focus();\r\n            }\r\n            focusing = false;\r\n        };\r\n\r\n        const fopcusOut = () => {\r\n           focusing = false; \r\n           focusInput();\r\n        }\r\n\r\n        return {\r\n            loading,\r\n            patient,\r\n            partner,\r\n            personId,\r\n            store,\r\n            scan_items,\r\n            scannedBarcode,\r\n            handleBarcodeScan,\r\n            closeBlockItem,\r\n            saveScanItems,\r\n            selectedOption,\r\n            toast,\r\n            inputRef,\r\n            fopcusOut,\r\n            historyDialogVisible,\r\n            historyData,\r\n            showHistoryDialog,\r\n            closeHistoryDialog,\r\n\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.p-card .p-card-content {\r\n    padding: 0;\r\n}\r\n\r\n.block-item {\r\n    display: flex;\r\n    border: 1px solid #8cb3d9;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.title-and-input {\r\n    display: flex;\r\n    gap: 5px;\r\n    align-items: center; /* Vertically center the elements */\r\n}\r\n\r\n.inner-block {\r\n    padding: 10px;\r\n}\r\n\r\n.bottom-right {\r\n  position: fixed;\r\n  bottom: 50px;\r\n  right: 50px;\r\n}\r\n</style>\r\n","<template>\r\n     <div class=\"p-grid\">\r\n        <p-data-table :value=\"historyData\">\r\n            <p-column field=\"patiendId\" header=\"ID\" />\r\n            <p-column field=\"containerId\" header=\"Container Id\" />\r\n            <p-column field=\"containerName\" header=\"Container Name\" />\r\n            <p-column field=\"barcode\" header=\"Barcode\" />\r\n            <p-column field=\"generatedAt\" header=\"Generated At\" />\r\n            <p-column field=\"patientFirstName\" header=\"Patient First Name\" />\r\n            <p-column field=\"patientLastName\" header=\"Patient Last Name\" />\r\n            <p-column field=\"gender\" header=\"gender\" />\r\n            <p-column field=\"savedBy\" header=\"Saved By\" />\r\n        </p-data-table>                         \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref, onMounted } from \"vue\";\r\nimport { toRefs } from \"vue-demi\";\r\nimport { $axios } from \"@/service/app-http\";\r\n\r\nexport default {\r\n    props: {\r\n        patientId: Number\r\n    },\r\n    setup(props) {\r\n        const historyData = ref([]);\r\n        const { patientId } = toRefs(props);\r\n\r\n        const fetchData = async (patient_id) => {\r\n       \r\n           // try {\r\n                const { data } = await $axios.get(`lab-barcode/list-scan-items/${patient_id}`, {\r\n                    params: {}\r\n                });\r\n                                              \r\n                historyData.value = data.data;                 \r\n\r\n           // } catch (err) {}\r\n        }\r\n\r\n        // Call fetchData when the component is created\r\n        onMounted(() => {\r\n            fetchData(patientId.value);\r\n        });\r\n\r\n        return {\r\n            historyData \r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import { render } from \"./patient-scan-history.vue?vue&type=template&id=4a7940fa&scoped=true\"\nimport script from \"./patient-scan-history.vue?vue&type=script&lang=js\"\nexport * from \"./patient-scan-history.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a7940fa\"]])\n\nexport default __exports__","import { render } from \"./scan.vue?vue&type=template&id=1e18d2d3&scoped=true\"\nimport script from \"./scan.vue?vue&type=script&lang=js\"\nexport * from \"./scan.vue?vue&type=script&lang=js\"\n\nimport \"./scan.vue?vue&type=style&index=0&id=1e18d2d3&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1e18d2d3\"]])\n\nexport default __exports__","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./scan.vue?vue&type=style&index=0&id=1e18d2d3&scoped=true&lang=css\""],"sourceRoot":""}