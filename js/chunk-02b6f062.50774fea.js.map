{"version":3,"sources":["webpack:///./src/views/lab-mon.vue?8a30","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./src/views/lab-mon.vue","webpack:///./src/views/lab-mon.vue?ffcd"],"names":["$","IndexedObject","toIndexedObject","arrayMethodIsStrict","nativeJoin","join","ES3_STRINGS","Object","STRICT_METHOD","target","proto","forced","separator","call","this","undefined","class","style","for","id","selectedDate","dateFormat","showIcon","label","fetchData","fromDate","toDate","exportExcel","value","labMonForm","showGridlines","scrollable","scrollDirection","scrollHeight","columns","column","index","field","header","body","includes","slotProps","data","val","ref","time","initial","setup","Date","toISOString","split","head_titles","co2","temperature","water_level","ln_level","liquid_usagae","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","length","formattedDate","get","params","response","keys","console","error","updateValue","event","rowIndex","post","name","colName","formattedFromDate","formattedToDate","filePath","fileUrl","window","open","__exports__","render"],"mappings":"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","file":"js/chunk-02b6f062.50774fea.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./lab-mon.vue?vue&type=style&index=0&id=731fcaa0&scoped=true&lang=css\"","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.es/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","<template>\r\n    <div class=\"page-container\">\r\n        <div class=\"header\">\r\n            <!-- Your other content (calendars, buttons, etc.) -->\r\n            <div\r\n                class=\"p-mx-2 p-mb-3\"\r\n                style=\"display: flex; justify-content: space-between;\"\r\n            >\r\n                <div style=\"display: flex;\">\r\n                    <div class=\"p-field p-grid\">\r\n                        <label for=\"date\" class=\"p-col-fixed\">Date</label>\r\n                        <div>\r\n                            <p-calendar\r\n                                id=\"date\"\r\n                                v-model=\"selectedDate\"\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                :showIcon=\"true\"\r\n                                class=\"custom-calendar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <p-button\r\n                        label=\"Get Data\"\r\n                        class=\"p-ml-4\"\r\n                        @click=\"fetchData\"\r\n                    />\r\n                </div>\r\n                <div style=\"display: flex;\">\r\n                    <div class=\"p-field p-grid p-mr-4\">\r\n                        <label for=\"fromDate\" class=\"p-col-fixed\"\r\n                            >From Date</label\r\n                        >\r\n                        <div>\r\n                            <p-calendar\r\n                                id=\"fromDate\"\r\n                                v-model=\"fromDate\"\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                :showIcon=\"true\"\r\n                                class=\"custom-calendar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"p-field p-grid\">\r\n                        <label for=\"toDate\" class=\"p-col-fixed\">To Date</label>\r\n                        <div>\r\n                            <p-calendar\r\n                                id=\"toDate\"\r\n                                v-model=\"toDate\"\r\n                                dateFormat=\"yy-mm-dd\"\r\n                                :showIcon=\"true\"\r\n                                class=\"custom-calendar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <p-button\r\n                        label=\"Export XLS\"\r\n                        class=\"p-ml-4\"\r\n                        @click=\"exportExcel\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"table-container\">\r\n            <p-data-table\r\n                :value=\"labMonForm\"\r\n                showGridlines\r\n                class=\"p-datatable-sm p-mt-1 p-shadow-1\"\r\n                :scrollable=\"true\"\r\n                scrollDirection=\"both\"\r\n                scrollHeight=\"flex\"\r\n            >\r\n                <!-- Table Columns and Body -->\r\n                <template v-for=\"(column, index) in columns\" :key=\"index\">\r\n                    <p-column\r\n                        :field=\"column\"\r\n                        :header=\"\r\n                            head_titles[column]\r\n                                ? head_titles[column]\r\n                                : column.charAt(0).toUpperCase() +\r\n                                  column.slice(1)\r\n                        \"\r\n                        :style=\"{ width: '220px' }\"\r\n                    >\r\n                        <template #body=\"slotProps\">\r\n                            <div class=\"cell-content\">\r\n                                <span\r\n                                    v-if=\"['name'].includes(column)\"\r\n                                    class=\"static-text\"\r\n                                >\r\n                                    {{ slotProps.data[column].val }}\r\n                                    {{\r\n                                        slotProps.data[column].ref\r\n                                            ? \"[\" +\r\n                                              slotProps.data[column].ref +\r\n                                              \"]\"\r\n                                            : \"\"\r\n                                    }}\r\n                                </span>\r\n\r\n                                <p-input-text\r\n                                    v-else\r\n                                    :value=\"slotProps.data[column].val\"\r\n                                    class=\"custom-input-text\"\r\n                                    @change=\"\r\n                                        updateValue(\r\n                                            $event,\r\n                                            column,\r\n                                            slotProps.index\r\n                                        )\r\n                                    \"\r\n                                />\r\n                                <div\r\n                                    v-if=\"!['name'].includes(column)\"\r\n                                    class=\"cell-content2\"\r\n                                >\r\n                                    <span class=\"static-text\">{{\r\n                                        slotProps.data[column].time\r\n                                    }}</span>\r\n                                    <span class=\"static-text\">{{\r\n                                        slotProps.data[column].initial\r\n                                    }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </p-column>\r\n                </template>\r\n            </p-data-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, watch } from \"vue\";\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { BASE_URL } from \"../config.js\";\r\n\r\nexport default {\r\n    setup() {\r\n        const labMonForm = ref([]);\r\n        const selectedDate = ref(new Date().toISOString().split(\"T\")[0]); // Initialize in 'yyyy-mm-dd' format\r\n        const fromDate = ref(new Date().toISOString().split(\"T\")[0]);\r\n        const toDate = ref(new Date().toISOString().split(\"T\")[0]);\r\n        const columns = ref([]);\r\n        const head_titles = ref({\r\n            co2: \"Co2 (Ref: 6% - 7%)\",\r\n            temperature: \"Temperature (Ref: 37+ - 0.5)\",\r\n            water_level: \"Water Level (Ref: => 40%)\",\r\n            ln_level: \"Ln Level\",\r\n            liquid_usagae: \"Liquid Usage (Ref: 7.22 - 7.38)\"\r\n        });\r\n\r\n        const formatDate = (date) => {\r\n            const d = new Date(date);\r\n            let month = \"\" + (d.getMonth() + 1);\r\n            let day = \"\" + d.getDate();\r\n            const year = d.getFullYear();\r\n\r\n            if (month.length < 2) month = \"0\" + month;\r\n            if (day.length < 2) day = \"0\" + day;\r\n\r\n            return [year, month, day].join(\"-\");\r\n        };\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n                const formattedDate = formatDate(selectedDate.value); // Format the date\r\n                const formattedFromDate = formatDate(fromDate.value);\r\n                const formattedToDate = formatDate(toDate.value);\r\n\r\n                const response = await $axios.get(\"lab-mon/data\", {\r\n                    params: { date: formattedDate }\r\n                });\r\n\r\n                labMonForm.value = response.data;\r\n                columns.value = Object.keys(labMonForm.value[0] || {});\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n\r\n        const updateValue = async (event, column, rowIndex) => {\r\n            if (rowIndex >= 0 && rowIndex < labMonForm.value.length) {\r\n                labMonForm.value[rowIndex][column].val = event.target.value;\r\n\r\n                const formattedDate = formatDate(selectedDate.value);\r\n                const formattedFromDate = formatDate(fromDate.value);\r\n                const formattedToDate = formatDate(toDate.value);\r\n\r\n                const { data } = await $axios.post(\"lab-mon/save\", {\r\n                    name: labMonForm.value[rowIndex][\"name\"].val,\r\n                    value: labMonForm.value[rowIndex][column].val,\r\n                    colName: column,\r\n                    date: formattedDate\r\n                });\r\n\r\n                labMonForm.value[rowIndex][column].time = data.time;\r\n                labMonForm.value[rowIndex][column].initial = data.initial;\r\n            } else {\r\n                console.error(`Invalid rowIndex: ${rowIndex}`);\r\n            }\r\n        };\r\n\r\n        const exportExcel = async () => {\r\n            try {\r\n                const formattedFromDate = formatDate(fromDate.value);\r\n                const formattedToDate = formatDate(toDate.value);\r\n\r\n                const response = await $axios.get(\"lab-mon/export\", {\r\n                    params: {\r\n                        fromDate: formattedFromDate,\r\n                        toDate: formattedToDate\r\n                    }\r\n                });\r\n\r\n                if (response.data && response.data.filePath) {\r\n                    const fileUrl = `${BASE_URL}/${response.data.filePath}`;\r\n\r\n                    // Open the file in a new tab\r\n                    window.open(fileUrl, \"_blank\");\r\n                } else {\r\n                    console.error(\"Export link not found in response.\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error exporting data:\", error);\r\n            }\r\n        };\r\n\r\n        watch(selectedDate, fetchData);\r\n\r\n        onMounted(() => {\r\n            fetchData();\r\n        });\r\n\r\n        return {\r\n            labMonForm,\r\n            columns,\r\n            head_titles,\r\n            selectedDate,\r\n            fromDate,\r\n            toDate,\r\n            fetchData,\r\n            updateValue,\r\n            exportExcel\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh; /* Full viewport height */\r\n}\r\n\r\n.header {\r\n    flex-shrink: 0; /* Prevents the header from shrinking */\r\n    padding: 10px;\r\n    background-color: #f0f0f0;\r\n}\r\n\r\n.table-container {\r\n    flex-grow: 1; /* Make the table container fill the remaining space */\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden; /* Ensure no overflow issues */\r\n}\r\n\r\n.p-datatable-sm {\r\n    flex-grow: 1; /* Allow the table to grow and fill available space */\r\n    overflow-y: auto; /* Enable scrolling within the table body */\r\n}\r\n\r\n.cell-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n}\r\n\r\n.cell-content2 {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 4px;\r\n    font-size: 0.85rem;\r\n}\r\n\r\n.static-text {\r\n    margin-left: 6px;\r\n}\r\n.custom-input-text {\r\n    background-color: transparent;\r\n    border: none;\r\n    width: 100%;\r\n}\r\n.custom-calendar {\r\n    width: 130px;\r\n}\r\n</style>\r\n","import { render } from \"./lab-mon.vue?vue&type=template&id=731fcaa0&scoped=true\"\nimport script from \"./lab-mon.vue?vue&type=script&lang=js\"\nexport * from \"./lab-mon.vue?vue&type=script&lang=js\"\n\nimport \"./lab-mon.vue?vue&type=style&index=0&id=731fcaa0&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-731fcaa0\"]])\n\nexport default __exports__"],"sourceRoot":""}