{"version":3,"sources":["webpack:///./src/views/message-inbox.vue","webpack:///./src/views/message-inbox.vue?0841","webpack:///./src/service/patient-message-log.js"],"names":["class","for","selectAll","binary","selectAllChangeHandler","label","archiveMessageHandler","legend","value","messages","responsiveLayout","showGridlines","loading","dataKey","selection","selectedMessages","selectionMode","headerStyle","header","field","style","body","data","unRead","openReplyDialog","visible","replyDialog","closable","footer","closeReplyDialog","send","isMessageThred","relatedMessages","disabled","rows","showMessageThread","replyTo","form","subject","message","setup","store","sendTo","sentBy","state","user","providerNo","senderType","parent","mId","sendBy","pid","id","relatedMsg","newVal","websocket","sendLoading","newMessage","JSON","stringify","sender_id","receiver_id","artCycle","patient","terminal","getMessages","messageRecords","emit","toast","setupWebsocket","onmessage","event","parse","onerror","add","severity","summary","detail","life","ids","map","item","status","ok","__exports__","render","registerPatient","payload","$axios","post","getPatientInformation","get","patientDetails","searchAllPatient","term","params","getPatient","getAllMessages","getPatientMessage","name","limit","patientId","composeMessage","composeMessageV2","getRelatedMessges","parentMsgId","archiveMesage","archiveList","STATSUS","error"],"mappings":"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","file":"js/chunk-57dd1ec6.2f1da7e7.js","sourcesContent":["<template>\r\n    <div class=\"p-d-flex p-jc-end\">\r\n        <div class=\"p-field-checkbox p-mr-2 p-mt-2\">\r\n            <p-checkbox\r\n                v-model=\"selectAll\"\r\n                :binary=\"true\"\r\n                @change=\"selectAllChangeHandler\"\r\n            />\r\n            <label for=\"\">Select All</label>\r\n        </div>\r\n        <p-button\r\n            label=\"Archive\"\r\n            class=\"p-mr-2\"\r\n            @click=\"archiveMessageHandler\"\r\n        />\r\n        <p-button label=\"Appointment Stat\" />\r\n    </div>\r\n\r\n    <p-fieldset legend=\"All Messages\">\r\n        <p-data-table\r\n            :value=\"messages\"\r\n            responsiveLayout=\"scroll\"\r\n            showGridlines\r\n            class=\"p-datatable-sm p-mb-1\"\r\n            :loading=\"loading\"\r\n            dataKey=\"id\"\r\n            v-model:selection=\"selectedMessages\"\r\n        >\r\n            <p-column\r\n                selectionMode=\"multiple\"\r\n                headerStyle=\"width: 3em\"\r\n            ></p-column>\r\n            <p-column header=\"Date\" field=\"sentdate\" style=\"width: 150px\" />\r\n            <p-column header=\"Subject\" field=\"subject\" />\r\n            <p-column header=\"From\" field=\"sendBy\" />\r\n            <p-column header=\"Message\" field=\"message\" />\r\n            <p-column header=\"#\">\r\n                <template #body=\"{data}\">\r\n                    <p-badge v-if=\"data.unRead == 1\" />\r\n                </template>\r\n            </p-column>\r\n            <p-column header=\"Action\" field=\"action\" style=\"width: 150px\">\r\n                <template #body=\"{data}\">\r\n                    <p-button\r\n                        label=\"Reply\"\r\n                        class=\"p-button-sm p-mr-1\"\r\n                        @click=\"openReplyDialog(data)\"\r\n                    />\r\n                    <p-button label=\"ENG\" class=\"p-button-sm\" />\r\n                </template>\r\n            </p-column>\r\n        </p-data-table>\r\n    </p-fieldset>\r\n\r\n    <p-dialog\r\n        v-model:visible=\"replyDialog\"\r\n        :closable=\"false\"\r\n        style=\"width: 600px\"\r\n    >\r\n        <p-fieldset legend=\"Previous Conversation\">\r\n            <p-textarea\r\n                v-model=\"relatedMessages\"\r\n                disabled\r\n                rows=\"10\"\r\n                class=\"p-mt-1\"\r\n                style=\"width: 100%\"\r\n                v-if=\"isMessageThred\"\r\n            />\r\n            <p-button\r\n                label=\"Show Message Thread\"\r\n                v-else\r\n                @click=\"showMessageThread\"\r\n            />\r\n        </p-fieldset>\r\n        <p-fieldset :legend=\"replyTo\" class=\"p-mt-2\">\r\n            <div class=\"p-field\">\r\n                <label>Subject - {{ form.subject }}</label>\r\n                <p-textarea\r\n                    v-model=\"form.message\"\r\n                    rows=\"4\"\r\n                    class=\"p-mt-1\"\r\n                    style=\"width: 100%\"\r\n                />\r\n            </div>\r\n        </p-fieldset>\r\n\r\n        <template #footer>\r\n            <p-button label=\"Cancel\" @click=\"closeReplyDialog\" />\r\n            <p-button label=\"Send\" @click=\"send\" :loading=\"loading\" />\r\n        </template>\r\n    </p-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { inject, onMounted, reactive, ref, watch } from \"vue\";\r\nimport {\r\n    getAllMessages,\r\n    composeMessageV2,\r\n    getRelatedMessges,\r\n    archiveMesage\r\n} from \"@/service/patient-message-log\";\r\nimport { useStore } from \"vuex\";\r\nimport { emitter } from \"@/event-bus\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { STATSUS } from \"@/constants\";\r\nexport default {\r\n    setup() {\r\n        const store = useStore();\r\n        const messages = ref([]);\r\n        const selectedMessages = ref([]);\r\n        const loading = ref(false);\r\n        const replyDialog = ref(false);\r\n        const selectAll = ref(false);\r\n\r\n        const form = reactive({\r\n            subject: null,\r\n            message: null,\r\n            sendTo: null,\r\n            sentBy: store.state.user.providerNo,\r\n            senderType: 1,\r\n            parent: null,\r\n            mId: null\r\n        });\r\n\r\n        const replyTo = ref();\r\n\r\n        const openReplyDialog = (data) => {\r\n            replyTo.value = `Reply To ${data.sendBy}`;\r\n\r\n            form.subject = data.subject;\r\n            form.sendTo = data.pid;\r\n            form.parent = data.parent;\r\n            form.mId = data.id;\r\n\r\n            replyDialog.value = true;\r\n            relatedMessages.value = null;\r\n            isMessageThred.value = false;\r\n        };\r\n\r\n        const isMessageThred = ref(false);\r\n\r\n        const relatedMessages = ref();\r\n        const showMessageThread = async () => {\r\n            isMessageThred.value = true;\r\n            const { relatedMsg } = await getRelatedMessges(form.parent);\r\n            relatedMessages.value = relatedMsg;\r\n        };\r\n\r\n        watch(replyDialog, (newVal) => {\r\n            showMessageThread();\r\n        });\r\n\r\n        const websocket = inject(\"websocket\");\r\n        const sendLoading = ref(false);\r\n        const send = async () => {\r\n            sendLoading.value = true;\r\n            const { newMessage } = await composeMessageV2({\r\n                ...form\r\n            });\r\n\r\n            websocket.send(\r\n                JSON.stringify({\r\n                    sender_id: store.state.user.id,\r\n                    receiver_id: store.state.artCycle.patient.id,\r\n                    terminal: \"cycle\"\r\n                })\r\n            );\r\n\r\n            form.subject = null;\r\n            form.message = null;\r\n            replyDialog.value = false;\r\n            sendLoading.value = false;\r\n            getMessages();\r\n        };\r\n\r\n        const getMessages = async () => {\r\n            loading.value = true;\r\n            try {\r\n                const { messageRecords } = await getAllMessages();\r\n                messages.value = messageRecords;\r\n                emitter.emit(\"message-inbox:get-all-messgae\");\r\n            } catch (err) {\r\n                messages.value = [];\r\n            } finally {\r\n                loading.value = false;\r\n            }\r\n        };\r\n\r\n        const toast = useToast();\r\n\r\n        const setupWebsocket = () => {\r\n            const websocket = inject(\"websocket\");\r\n            websocket.onmessage = (event) => {\r\n                const data = JSON.parse(event.data);\r\n                if (typeof data.data == \"string\") {\r\n                    const message = JSON.parse(data.data);\r\n                    if (message.terminal == \"nlp\") {\r\n                        getMessages();\r\n                    }\r\n                }\r\n            };\r\n\r\n            websocket.onerror = () => {\r\n                toast.add({\r\n                    severity: \"warn\",\r\n                    summary: \"Chat Server Down\",\r\n                    detail: \"Instant chat is off at the moment\",\r\n                    life: 3000\r\n                });\r\n            };\r\n        };\r\n\r\n        const archiveMessageHandler = async () => {\r\n            loading.value = true;\r\n            let ids = selectedMessages.value.map((item) => item.id);\r\n            let { status } = await archiveMesage(ids);\r\n            if (status == STATSUS.ok) {\r\n                getMessages();\r\n            }\r\n        };\r\n\r\n        onMounted(() => {\r\n            getMessages();\r\n            setupWebsocket();\r\n            emitter.emit(\"message-nofication:has-seen\");\r\n        });\r\n\r\n        return {\r\n            messages,\r\n            selectedMessages,\r\n            loading,\r\n            selectAll,\r\n            replyDialog,\r\n            openReplyDialog,\r\n            replyTo,\r\n            isMessageThred,\r\n            relatedMessages,\r\n            showMessageThread,\r\n            form,\r\n            send,\r\n            sendLoading,\r\n            archiveMessageHandler,\r\n            closeReplyDialog: () => {\r\n                replyDialog.value = false;\r\n            },\r\n            selectAllChangeHandler: (event) => {\r\n                if (selectAll.value) {\r\n                    selectedMessages.value = [...messages.value];\r\n                } else {\r\n                    selectedMessages.value = [];\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n</script>\r\n","import { render } from \"./message-inbox.vue?vue&type=template&id=14e8da98\"\nimport script from \"./message-inbox.vue?vue&type=script&lang=js\"\nexport * from \"./message-inbox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { STATSUS } from \"@/constants\";\r\nimport axios from \"axios\";\r\nimport { $axios } from \"./app-http\";\r\n\r\nexport async function registerPatient(payload) {\r\n    const { data } = await $axios.post(\r\n        \"patient-msg-log/register-patient\",\r\n        payload\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function getIsPatientRegistered(id) {\r\n    const { data } = await $axios.get(\r\n        `patient-msg-log/is-patient-registered/${id}`\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function getPatientInformation(id) {\r\n    const {\r\n        data: { patientDetails }\r\n    } = await $axios.get(`patient-msg-log/patient-data/${id}`);\r\n    return patientDetails;\r\n}\r\n\r\nexport async function searchAllPatient(term) {\r\n    const { data } = await $axios.get(\"demographics/search-all\", {\r\n        params: {\r\n            term\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function getPatient(id) {\r\n    const { data } = await $axios.get(`demographics/${id}`);\r\n    return data;\r\n}\r\n\r\nexport async function getAllMessages() {\r\n    const { data } = await $axios.get(\"patient-msg-log/all-messages\");\r\n    return data;\r\n}\r\n\r\nexport async function getPatientMessage(id, name, limit = 50) {\r\n    const { data } = await $axios.get(\"patient-msg-log/patient-messages\", {\r\n        params: {\r\n            patientId: id,\r\n            name: name,\r\n            limit\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function composeMessage(payload) {\r\n    const { data } = await $axios.post(\"patient-msg-log/compose-sms\", payload);\r\n    return data;\r\n}\r\n\r\nexport async function composeMessageV2(payload) {\r\n    const { data } = await $axios.post(\r\n        \"patient-msg-log/compose-sms-v2\",\r\n        payload\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function getRelatedMessges(id) {\r\n    const { data } = await $axios.get(\"patient-msg-log/related-msg\", {\r\n        params: { parentMsgId: id }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function archiveMesage(archiveList) {\r\n    try {\r\n        const { data } = await $axios.post(\r\n            \"patient-msg-log/archive-message-for-staff\",\r\n            {\r\n                archiveList\r\n            }\r\n        );\r\n        return {\r\n            status: STATSUS.ok\r\n        };\r\n    } catch (err) {\r\n        return {\r\n            status: STATSUS.error\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}