{"version":3,"sources":["webpack:///./src/assets/women.png","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/assets/men.png","webpack:///./src/views/barcodes/patient-barcodes.vue?7cc0","webpack:///./src/views/barcodes/patient-barcodes.vue","webpack:///./src/views/barcodes/patient-barcodes.vue?a90a"],"names":["module","exports","_arrayWithHoles","r","Array","isArray","_iterableToArrayLimit","l","t","Symbol","iterator","e","n","i","u","a","f","o","call","next","Object","done","push","value","length","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","class","style","src","alt","patient","id","label","severity","raised","goToBarcodePage","patientPhoto","sex","firstName","lastName","showBarcodeV2","icon","printToZebraPrinter","partner","partnerPhoto","patientLabTests","item","name","getIconUrl","printLabelJSPDF","partnerLabTests","setup","base","url","chart","year","month","day","window","open","store","logsData","loading","router","loadPhotos","Promise","all","get","resolve","data","photo","content_type","patientRes","partnerRes","console","log","error","payload","bar_id","encodeURIComponent","createBarcodeJasper","post","patient_id","container_id","labTestId","container_name","model","barcode","createBarcodeZebra","printCitizenLabel","barcodelbl","htmlc","iframec","document","createElement","display","body","appendChild","doc","contentWindow","write","close","onload","script","JsBarcode","format","width","height","lineColor","displayValue","margin","setTimeout","print","fullName","svg","removeAttribute","canvas","ctx","getContext","svgString","XMLSerializer","serializeToString","from","canvgInstance","render","pngDataUrl","toDataURL","orientation","unit","setFontSize","text","String","addImage","pdfBlob","output","blobUrl","URL","createObjectURL","iframe","position","right","bottom","border","focus","getPatientLabtests","gender","params","getPartnerLabtests","state","artCycle","path","__exports__"],"mappings":"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","file":"js/chunk-fb476622.4b556cd5.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/women.f05f7bfb.png\";","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","module.exports = __webpack_public_path__ + \"img/men.a5e81f19.png\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./patient-barcodes.vue?vue&type=style&index=0&id=8f8506e8&scoped=true&lang=css\"","<template>\r\n    <div v-if=\"patient.id\">\r\n        <div>\r\n            <p-button\r\n                label=\"Back\"\r\n                class=\"p-button-sm p-button-outlined\"\r\n                severity=\"info\"\r\n                raised\r\n                style=\"margin-bottom: 20px;\"\r\n                @click=\"goToBarcodePage\"\r\n            />\r\n        </div>\r\n        <!-- First Section -->\r\n        <div class=\"section\">\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-12 block-container\">\r\n                    <div class=\"block-item\">\r\n                        <div style=\"margin-right: 15px;\">\r\n                            <img\r\n                                v-if=\"patientPhoto\"\r\n                                :src=\"patientPhoto\"\r\n                                alt=\"Patient Photo\"\r\n                                style=\"height: 100px;\"\r\n                            />\r\n                            <img\r\n                                v-else-if=\"patient.sex === 'F'\"\r\n                                src=\"../../assets/women.png\"\r\n                                style=\"width: 100px; height: 100px;\"\r\n                                alt=\"Default Female\"\r\n                            />\r\n                            <img\r\n                                v-else\r\n                                src=\"../../assets/men.png\"\r\n                                style=\"width: 100px; height: 100px;\"\r\n                                alt=\"Default Male\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <div style=\"margin-bottom: 10px;\">\r\n                                <div class=\"title\">\r\n                                    PATIENT\r\n                                </div>\r\n                                <span\r\n                                    >{{ patient.firstName }}\r\n                                    {{ patient.lastName }}</span\r\n                                ><br />\r\n                                <span class=\"p-id\">{{ patient.id }}</span>\r\n                            </div>\r\n\r\n                            <span class=\"p-buttonset\">\r\n                                <p-button\r\n                                    label=\"Barcode\"\r\n                                    class=\"p-button-sm\"\r\n                                    @click=\"showBarcodeV2(patient)\"\r\n                                />\r\n                                <p-button\r\n                                    class=\"p-button-sm\"\r\n                                    icon=\"pi pi-print\"\r\n                                    @click=\"printToZebraPrinter(patient)\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"block-item\" v-if=\"partner.id\">\r\n                        <div style=\"margin-right: 15px;\">\r\n                            <div style=\"margin-bottom: 10px;\">\r\n                                <div class=\"title\">\r\n                                    PARTNER\r\n                                </div>\r\n                                <span\r\n                                    >{{ partner.firstName }}\r\n                                    {{ partner.lastName }}</span\r\n                                ><br />\r\n                                <span class=\"p-id\">{{ partner.id }}</span>\r\n                            </div>\r\n                            <span class=\"p-buttonset\">\r\n                                <p-button\r\n                                    label=\"Barcode\"\r\n                                    class=\"p-button-sm\"\r\n                                    @click=\"showBarcodeV2(partner)\"\r\n                                />\r\n                                <p-button\r\n                                    class=\"p-button-sm\"\r\n                                    icon=\"pi pi-print\"\r\n                                    @click=\"printToZebraPrinter(partner)\"\r\n                                />\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            <!-- Partner Image -->\r\n                            <img\r\n                                v-if=\"partnerPhoto\"\r\n                                :src=\"partnerPhoto\"\r\n                                alt=\"Partner Photo\"\r\n                                style=\"height: 100px;\"\r\n                            />\r\n                            <img\r\n                                v-else-if=\"partner.sex === 'F'\"\r\n                                src=\"../../assets/women.png\"\r\n                                style=\"width: 100px; height: 100px;\"\r\n                                alt=\"Default Female\"\r\n                            />\r\n                            <img\r\n                                v-else\r\n                                src=\"../../assets/men.png\"\r\n                                style=\"width: 100px; height: 100px;\"\r\n                                alt=\"Default Male\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Second Section -->\r\n        <div class=\"section\" style=\"margin-top: 20px;\">\r\n            <div class=\"container\" style=\"background: ;\">\r\n                <!-- Left Box -->\r\n                <div\r\n                    class=\"left-box\"\r\n                    style=\"display: inline-block; width: 50%; border-right: dashed 1px grey; min-height: 400px;\"\r\n                >\r\n                    <div v-for=\"item in patientLabTests\" class=\"inline-box\">\r\n                        <div>\r\n                            <div\r\n                                style=\"margin-bottom: 10px; font-weight: bold; display: flex; justify-content: center; align-content: center;\"\r\n                            >\r\n                                <span> {{ item.name }} </span><br />\r\n                            </div>\r\n                            <div\r\n                                style=\"display: flex; justify-content: center; align-content: center;\"\r\n                            >\r\n                                <img\r\n                                    :src=\"getIconUrl(item)\"\r\n                                    alt=\"Image\"\r\n                                    style=\"width: 50px; height: 50px\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span\r\n                                    class=\"p-buttonset\"\r\n                                    style=\"display: flex;\"\r\n                                >\r\n                                    <p-button\r\n                                        label=\"Barcode\"\r\n                                        class=\"p-button-sm\"\r\n                                        @click=\"printLabelJSPDF(patient, item)\"\r\n                                    />\r\n                                    <p-button\r\n                                        class=\"p-button-sm\"\r\n                                        icon=\"pi pi-print\"\r\n                                        @click=\"printLabelJSPDF(patient, item)\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Right Box -->\r\n                <div\r\n                    class=\"right-box\"\r\n                    style=\"display: inline-block;  width: 50%; min-height: 400px;\"\r\n                >\r\n                    <div v-for=\"item in partnerLabTests\" class=\"inline-box\">\r\n                        <div>\r\n                            <div\r\n                                style=\"margin-bottom: 10px; font-weight: bold; display: flex; justify-content: center; align-content: center;\"\r\n                            >\r\n                                <span> {{ item.name }} </span><br />\r\n                            </div>\r\n                            <div\r\n                                style=\"display: flex; justify-content: center; align-content: center;\"\r\n                            >\r\n                                <img\r\n                                    :src=\"getIconUrl(item)\"\r\n                                    alt=\"Image\"\r\n                                    style=\"width: 50px; height: 50px\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <span\r\n                                    class=\"p-buttonset\"\r\n                                    style=\"display: flex;\"\r\n                                >\r\n                                    <p-button\r\n                                        label=\"Barcode\"\r\n                                        class=\"p-button-sm\"\r\n                                        @click=\"printLabelJSPDF(partner, item)\"\r\n                                    />\r\n                                    <p-button\r\n                                        class=\"p-button-sm\"\r\n                                        icon=\"pi pi-print\"\r\n                                        @click=\"printLabelJSPDF(patient, item)\"\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <h2>No patient selected</h2>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { onMounted, ref, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { serialize } from \"php-serialize\";\r\nimport { ZEBRA_PRING_URL, NL_FORM_BASE } from \"@/constants\";\r\nimport { ORIGIN } from \"./../../config\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nimport JsBarcode from \"jsbarcode\";\r\nimport jsPDF from \"jspdf\";\r\nimport { Canvg } from \"canvg\";\r\n\r\nexport default {\r\n    setup() {\r\n        const printToZebraPrinter = (patient) => {\r\n            let base = `${ZEBRA_PRING_URL}/patient_zpl_print.php`;\r\n\r\n            let url =\r\n                `${base}` +\r\n                `?first_name=${patient.firstName}` +\r\n                `&last_name=${patient.lastName}` +\r\n                `&chart=${patient.chart}` +\r\n                `&dob=${patient.year}-${patient.month}-${patient.day}` +\r\n                `&gender=${patient.sex}`;\r\n\r\n            window.open(url);\r\n        };\r\n        const store = useStore();\r\n        const logsData = ref([]);\r\n\r\n        const patientLabTests = ref([]);\r\n        const partnerLabTests = ref([]);\r\n\r\n        const loading = ref(false);\r\n\r\n        const patient = ref({});\r\n        const partner = ref({});\r\n\r\n        const patientPhoto = ref(null);\r\n        const partnerPhoto = ref(null);\r\n\r\n        const router = useRouter();\r\n\r\n        const loadPhotos = async () => {\r\n            try {\r\n                if (patient.value.id) {\r\n                    const [patientRes, partnerRes] = await Promise.all([\r\n                        $axios.get(`photo/by-patient/${patient.value.id}`),\r\n                        partner.value.id\r\n                            ? $axios.get(`photo/by-patient/${partner.value.id}`)\r\n                            : Promise.resolve({\r\n                                  data: { photo: null, content_type: null }\r\n                              })\r\n                    ]);\r\n\r\n                    patientPhoto.value = patientRes.data?.photo\r\n                        ? `data:${patientRes.data.content_type};base64,${patientRes.data.photo}`\r\n                        : null;\r\n\r\n                    partnerPhoto.value = partnerRes.data?.photo\r\n                        ? `data:${partnerRes.data.content_type};base64,${partnerRes.data.photo}`\r\n                        : null;\r\n\r\n                    console.log(\"Loaded photos:\", {\r\n                        patientPhoto: patientPhoto.value,\r\n                        partnerPhoto: partnerPhoto.value\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error loading photos:\", error);\r\n                patientPhoto.value = null;\r\n                partnerPhoto.value = null;\r\n            }\r\n        };\r\n\r\n        const showBarcodeV2 = (patient) => {\r\n            const payload = {\r\n                bar_id: patient.id\r\n            };\r\n\r\n            let url = `${NL_FORM_BASE}/jrsPHPclientV2/jrs/generate_reportn1.php?report_name=TESTS_1&report_type=pdf&report_params=${encodeURIComponent(\r\n                serialize(payload)\r\n            )}`;\r\n            window.open(url);\r\n        };\r\n\r\n        const createBarcodeJasper = async (patient, item) => {\r\n            try {\r\n                const { data } = await $axios.post(`lab-barcode/create`, {\r\n                    patient_id: patient.id,\r\n                    container_id: item.labTestId,\r\n                    container_name: item.name\r\n                });\r\n\r\n                const payload = {\r\n                    bar_id: data.model.barcode\r\n                };\r\n                let url = `${NL_FORM_BASE}/jrsPHPclientV2/jrs/generate_reportn1.php?report_name=TESTS_1_1&report_type=pdf&report_params=${encodeURIComponent(\r\n                    serialize(payload)\r\n                )}`;\r\n                window.open(url);\r\n            } catch (err) {}\r\n        };\r\n\r\n        const createBarcodeZebra = async (patient, item) => {\r\n            try {\r\n                const { data } = await $axios.post(`lab-barcode/create`, {\r\n                    patient_id: patient.id,\r\n                    container_id: item.labTestId,\r\n                    container_name: item.name\r\n                });\r\n\r\n                let base = `${ZEBRA_PRING_URL}/labContainer_zpl_print.php`;\r\n\r\n                let url =\r\n                    `${base}` +\r\n                    `?barcode=${data.model.barcode}&label=${item.name}&chartid=${patient.id}`;\r\n\r\n                window.open(url);\r\n            } catch (err) {}\r\n        };\r\n\r\n        const printCitizenLabel = async (patient, item) => {\r\n            try {\r\n                const { data } = await $axios.post(`lab-barcode/create`, {\r\n                    patient_id: patient.id,\r\n                    container_id: item.labTestId,\r\n                    container_name: item.name\r\n                });\r\n\r\n                const barcodelbl = data.model.barcode;\r\n\r\n                const htmlc = `\r\n<html>\r\n<head>\r\n  <style>\r\n    @page {\r\n    size: 10mm 38mm;\r\n    margin: 0;\r\n  }\r\n\r\n  html, body {\r\n    width: 10mm;\r\n    height: 38mm;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .label {\r\n    width: 10mm;        /* original height */\r\n    height: 38mm;       /* original width */\r\n    transform: rotate(-90deg);\r\n    transform-origin: top left;\r\n    position: absolute;\r\n    top: 0;\r\n    left: -38mm; /* ← shift left so rotated label appears in view */\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    font-family: Arial, sans-serif;\r\n  }\r\n\r\n  .top-text {\r\n    height: 5mm;\r\n    padding-left: 1mm;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .text1 {\r\n    font-size: 7pt;\r\n    line-height: 1;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  .text2 {\r\n    font-size: 5pt;\r\n    line-height: 1;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  .barcode {\r\n    height: 5mm;\r\n    padding: 0 1mm;\r\n  }\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n  }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"label\">\r\n    <div class=\"top-text\">\r\n        <div class=\"text1\">${item.name} ${patient.firstName} ${patient.lastName}</div>\r\n        <div class=\"text2\">${patient.id}</div>\r\n    </div>\r\n    <div class=\"barcode\">\r\n      <svg id=\"barcode\"></svg>\r\n    </div>\r\n  </div>\r\n</body>\r\n</html>\r\n`;\r\n\r\n                const iframec = document.createElement(\"iframe\");\r\n                iframec.style.display = \"none\";\r\n                document.body.appendChild(iframec);\r\n\r\n                const doc = iframec.contentWindow.document;\r\n                doc.open();\r\n                doc.write(htmlc);\r\n                doc.close();\r\n\r\n                iframec.onload = () => {\r\n                    const script = doc.createElement(\"script\");\r\n                    script.src =\r\n                        \"https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js\";\r\n                    script.onload = () => {\r\n                        iframec.contentWindow.JsBarcode(\r\n                            \"#barcode\",\r\n                            barcodelbl,\r\n                            {\r\n                                format: \"CODE128\",\r\n                                width: 2.4, // May need tuning for this printer\r\n                                height: 38, // ~5mm\r\n                                lineColor: \"#000\",\r\n                                displayValue: false,\r\n                                margin: 0\r\n                            }\r\n                        );\r\n\r\n                        setTimeout(() => iframec.contentWindow.print(), 300);\r\n                    };\r\n                    doc.body.appendChild(script);\r\n                };\r\n            } catch (err) {\r\n                console.error(\"Print label error:\", err);\r\n            }\r\n        };\r\n\r\n        const printLabelJSPDF = async (patient, item) => {\r\n            try {\r\n                const { data } = await $axios.post(`lab-barcode/create`, {\r\n                    patient_id: patient.id,\r\n                    container_id: item.labTestId,\r\n                    container_name: item.name\r\n                });\r\n\r\n                const barcodelbl = data.model.barcode;\r\n\r\n                const fullName = `${item.name} ${patient.firstName} ${patient.lastName}`;\r\n\r\n                const svg = document.createElement(\"svg\");\r\n                JsBarcode(svg, barcodelbl, {\r\n                    format: \"CODE128\",\r\n                    width: 4,\r\n                    height: 40,\r\n                    displayValue: false,\r\n                    margin: 0\r\n                });\r\n\r\n                // Remove duplicate xmlns\r\n                svg.removeAttribute(\"xmlns\");\r\n\r\n                // Render SVG to Canvas\r\n                const canvas = document.createElement(\"canvas\");\r\n                canvas.width = 200;\r\n                canvas.height = 40;\r\n                const ctx = canvas.getContext(\"2d\");\r\n\r\n                const svgString = new XMLSerializer().serializeToString(svg);\r\n                const canvgInstance = await Canvg.from(ctx, svgString);\r\n                await canvgInstance.render();\r\n\r\n                const pngDataUrl = canvas.toDataURL(\"image/png\");\r\n\r\n                // Create PDF\r\n                const doc = new jsPDF({\r\n                    orientation: \"landscape\",\r\n                    unit: \"mm\",\r\n                    format: [38, 10] // Label size\r\n                });\r\n\r\n                doc.setFontSize(6);\r\n                doc.text(fullName, 1, 2);\r\n                doc.setFontSize(5);\r\n                doc.text(String(patient.id), 1, 4);\r\n                doc.addImage(pngDataUrl, \"PNG\", 1, 6, 36, 3.5);\r\n\r\n                // Generate PDF blob\r\n                const pdfBlob = doc.output(\"blob\");\r\n                const blobUrl = URL.createObjectURL(pdfBlob);\r\n\r\n                // Create hidden iframe\r\n                const iframe = document.createElement(\"iframe\");\r\n                iframe.style.position = \"fixed\";\r\n                iframe.style.right = \"0\";\r\n                iframe.style.bottom = \"0\";\r\n                iframe.style.width = \"0\";\r\n                iframe.style.height = \"0\";\r\n                iframe.style.border = \"0\";\r\n                iframe.src = blobUrl;\r\n\r\n                document.body.appendChild(iframe);\r\n\r\n                iframe.onload = () => {\r\n                    iframe.contentWindow.focus();\r\n                    iframe.contentWindow.print();\r\n                };\r\n            } catch (err) {\r\n                console.error(\"Print label error:\", err);\r\n            }\r\n        };\r\n\r\n        const getIconUrl = (data) => {\r\n            if (data.icon) {\r\n                return `${ORIGIN}/${data.icon}`;\r\n            } else {\r\n                return \"https://via.placeholder.com/300\";\r\n            }\r\n        };\r\n\r\n        const getPatientLabtests = async (gender) => {\r\n            if (gender == \"M\" || gender == \"m\") gender = \"male\";\r\n            if (gender == \"F\" || gender == \"f\") gender = \"female\";\r\n\r\n            const { data } = await $axios.get(`lab-tests/list/${gender}`, {\r\n                params: {}\r\n            });\r\n\r\n            patientLabTests.value = data;\r\n        };\r\n\r\n        const getPartnerLabtests = async (gender) => {\r\n            if (gender == \"M\" || gender == \"m\") gender = \"male\";\r\n            if (gender == \"F\" || gender == \"f\") gender = \"female\";\r\n\r\n            const { data } = await $axios.get(`lab-tests/list/${gender}`, {\r\n                params: {}\r\n            });\r\n\r\n            partnerLabTests.value = data;\r\n        };\r\n\r\n        // const onFilterHandler = () => {\r\n        //     getLogs();\r\n        // };\r\n\r\n        onMounted(() => {\r\n            console.log(store.state.artCycle.patient);\r\n            // getLogs();\r\n            if (store.state.artCycle.patient) {\r\n                patient.value = store.state.artCycle.patient;\r\n\r\n                getPatientLabtests(patient.value.sex);\r\n            }\r\n            if (store.state.artCycle.partner) {\r\n                partner.value = store.state.artCycle.partner;\r\n\r\n                getPartnerLabtests(partner.value.sex);\r\n            }\r\n\r\n            loadPhotos();\r\n        });\r\n\r\n        return {\r\n            logsData,\r\n            loading,\r\n            patient,\r\n            partner,\r\n            patientPhoto,\r\n            partnerPhoto,\r\n            store,\r\n            patientLabTests,\r\n            partnerLabTests,\r\n            showBarcodeV2,\r\n            getIconUrl,\r\n            printToZebraPrinter,\r\n            createBarcodeJasper,\r\n            createBarcodeZebra,\r\n            printCitizenLabel,\r\n            printLabelJSPDF,\r\n            goToBarcodePage: () => {\r\n                router.push({ path: \"/barcodes\" });\r\n            }\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.p-card .p-card-content {\r\n    padding: 0;\r\n}\r\n\r\n.block-item {\r\n    display: flex;\r\n    border: 1px solid #8cb3d9;\r\n    padding: 10px;\r\n    background-color: white;\r\n}\r\n.block-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n.title {\r\n    margin-bottom: 10px;\r\n    color: brown;\r\n    font-weight: bolder;\r\n}\r\n.p-id {\r\n    color: darkblue;\r\n    font-weight: bolder;\r\n}\r\n\r\n/* Inline boxes */\r\n.inline-box {\r\n    margin: 4px 4px; /* Add margin for spacing between boxes */\r\n    border: 1px solid #8cb3d9;\r\n    display: inline-block;\r\n}\r\n\r\n/* Align left box content */\r\n.left-box {\r\n    text-align: left;\r\n    vertical-align: top;\r\n}\r\n\r\n/* Align right box content */\r\n.right-box {\r\n    text-align: right;\r\n    vertical-align: top;\r\n}\r\n\r\n.inline-box img {\r\n    width: 100px;\r\n    border-radius: 50%; /* Make the image a circle */\r\n}\r\n</style>\r\n","import { render } from \"./patient-barcodes.vue?vue&type=template&id=8f8506e8&scoped=true\"\nimport script from \"./patient-barcodes.vue?vue&type=script&lang=js\"\nexport * from \"./patient-barcodes.vue?vue&type=script&lang=js\"\n\nimport \"./patient-barcodes.vue?vue&type=style&index=0&id=8f8506e8&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8f8506e8\"]])\n\nexport default __exports__"],"sourceRoot":""}