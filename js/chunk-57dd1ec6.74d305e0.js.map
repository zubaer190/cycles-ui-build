{"version":3,"sources":["webpack:///./src/views/message-inbox.vue","webpack:///./src/views/message-inbox.vue?f694","webpack:///./src/service/patient-message-log.js"],"names":["class","for","label","legend","value","messages","responsiveLayout","showGridlines","loading","header","field","style","setup","messageRecords","render","registerPatient","payload","$axios","post","data","getPatientInformation","id","get","patientDetails","searchAllPatient","term","params","getAllMessages","getPatientMessage","name","patientId"],"mappings":"4IACSA,MAAM,qB,GACFA,MAAM,kC,EAEP,eAAgC,SAAzBC,IAAI,IAAG,cAAU,G,yOAHhC,eAOM,MAPN,EAOM,CANF,eAGM,MAHN,EAGM,CAFF,eAAc,GACd,IAEJ,eAA2C,GAAjCC,MAAM,UAAUF,MAAM,WAChC,eAAqC,GAA3BE,MAAM,uBAGpB,eAca,GAdDC,OAAO,gBAAc,C,wBAC7B,iBAYe,CAZf,eAYe,GAXVC,MAAO,EAAAC,SACRC,iBAAiB,SACjBC,cAAA,GACAP,MAAM,wBACLQ,QAAS,EAAAA,S,yBAEV,iBAAgE,CAAhE,eAAgE,GAAtDC,OAAO,OAAOC,MAAM,WAAWC,MAAA,kBACzC,eAA6C,GAAnCF,OAAO,UAAUC,MAAM,YACjC,eAAyC,GAA/BD,OAAO,OAAOC,MAAM,WAC9B,eAA6C,GAAnCD,OAAO,UAAUC,MAAM,YACjC,eAA2C,GAAjCD,OAAO,SAASC,MAAM,e,mFAQ7B,GACXE,MADW,WAEP,IAAMP,EAAW,eAAI,IACfG,EAAU,gBAAI,GAapB,OAXA,eAAS,wCAAC,6GACNA,EAAQJ,OAAQ,EADV,kBAG+B,iBAH/B,gBAGMS,EAHN,EAGMA,eACRR,EAASD,MAAQS,EAJf,4EAOFL,EAAQJ,OAAQ,EAPd,6EAWH,CACHC,WACAG,aC7CZ,EAAOM,OAASA,EAED,gB,oPCHR,SAAeC,EAAtB,kC,8DAAO,WAA+BC,GAA/B,yGACoBC,OAAOC,KAC1B,mCACAF,GAHD,uBACKG,EADL,EACKA,KADL,kBAKIA,GALJ,2C,wBAeA,SAAeC,EAAtB,kC,8DAAO,WAAqCC,GAArC,yGAGOJ,OAAOK,IAAP,uCAA2CD,IAHlD,uBAESE,EAFT,EAECJ,KAAQI,eAFT,kBAIIA,GAJJ,2C,wBAOA,SAAeC,EAAtB,kC,8DAAO,WAAgCC,GAAhC,yGACoBR,OAAOK,IAAI,0BAA2B,CACzDI,OAAQ,CACJD,UAHL,uBACKN,EADL,EACKA,KADL,kBAMIA,GANJ,2C,wBASA,SAAeQ,IAAtB,+B,8DAAO,sHACoBV,OAAOK,IAAI,gCAD/B,uBACKH,EADL,EACKA,KADL,kBAEIA,GAFJ,2C,wBAKA,SAAeS,EAAtB,oC,8DAAO,WAAiCP,EAAIQ,GAArC,yGACoBZ,OAAOK,IAAI,mCAAoC,CAClEI,OAAQ,CACJI,UAAWT,EACXQ,KAAMA,KAJX,uBACKV,EADL,EACKA,KADL,kBAOIA,GAPJ,2C","file":"js/chunk-57dd1ec6.74d305e0.js","sourcesContent":["<template>\n    <div class=\"p-d-flex p-jc-end\">\n        <div class=\"p-field-checkbox p-mr-2 p-mt-2\">\n            <p-checkbox />\n            <label for=\"\">Select All</label>\n        </div>\n        <p-button label=\"Archive\" class=\"p-mr-2\" />\n        <p-button label=\"Appointment Stat\" />\n    </div>\n\n    <p-fieldset legend=\"All Messages\">\n        <p-data-table\n            :value=\"messages\"\n            responsiveLayout=\"scroll\"\n            showGridlines\n            class=\"p-datatable-sm p-mb-1\"\n            :loading=\"loading\"\n        >\n            <p-column header=\"Date\" field=\"sentdate\" style=\"width: 150px\" />\n            <p-column header=\"Subject\" field=\"subject\" />\n            <p-column header=\"From\" field=\"sendBy\" />\n            <p-column header=\"Message\" field=\"message\" />\n            <p-column header=\"Action\" field=\"action\" />\n        </p-data-table>\n    </p-fieldset>\n</template>\n\n<script>\nimport { onMounted, ref } from \"vue\";\nimport { getAllMessages } from \"@/service/patient-message-log\";\nexport default {\n    setup() {\n        const messages = ref([]);\n        const loading = ref(false);\n\n        onMounted(async () => {\n            loading.value = true;\n            try {\n                const { messageRecords } = await getAllMessages();\n                messages.value = messageRecords;\n            } catch (err) {\n            } finally {\n                loading.value = false;\n            }\n        });\n\n        return {\n            messages,\n            loading\n        };\n    }\n};\n</script>\n","import { render } from \"./message-inbox.vue?vue&type=template&id=18828cf4\"\nimport script from \"./message-inbox.vue?vue&type=script&lang=js\"\nexport * from \"./message-inbox.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { $axios } from \"./app-http\";\n\nexport async function registerPatient(payload) {\n    const { data } = await $axios.post(\n        \"patient-msg-log/register-patient\",\n        payload\n    );\n    return data;\n}\n\nexport async function getIsPatientRegistered(id) {\n    const { data } = await $axios.get(\n        `patient-msg-log/is-patient-registered/${id}`\n    );\n    return data;\n}\n\nexport async function getPatientInformation(id) {\n    const {\n        data: { patientDetails }\n    } = await $axios.get(`patient-msg-log/patient-data/${id}`);\n    return patientDetails;\n}\n\nexport async function searchAllPatient(term) {\n    const { data } = await $axios.get(\"demographics/search-all\", {\n        params: {\n            term\n        }\n    });\n    return data;\n}\n\nexport async function getAllMessages() {\n    const { data } = await $axios.get(\"patient-msg-log/all-messages\");\n    return data;\n}\n\nexport async function getPatientMessage(id, name) {\n    const { data } = await $axios.get(\"patient-msg-log/patient-messages\", {\n        params: {\n            patientId: id,\n            name: name\n        }\n    });\n    return data;\n}\n"],"sourceRoot":""}