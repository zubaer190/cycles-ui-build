{"version":3,"sources":["webpack:///./src/components/blood-tests/dialog.vue","webpack:///./src/components/blood-tests/patient-info.vue","webpack:///./src/components/blood-tests/patient-info.vue?0c81","webpack:///./src/components/blood-tests/dialog-test-info.vue","webpack:///./src/components/blood-tests/dialog-test-info.vue?a6b4","webpack:///./src/components/blood-tests/dialog-barcode.vue","webpack:///./src/components/blood-tests/dialog-barcode.vue?ea73","webpack:///./src/components/blood-tests/dialog-blood-test.vue","webpack:///./src/components/blood-tests/dialog-blood-test.vue?12ba","webpack:///./src/components/blood-tests/dialog.vue?d1e3","webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./src/composable/blood-tests.js","webpack:///./src/components/blood-tests/confirm-dialog.vue","webpack:///./src/components/blood-tests/confirm-dialog.vue?5eed","webpack:///./src/components/blood-tests/dialog.vue?a6b4","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./src/components/blood-tests/dialog-barcode.vue?6ec5","webpack:///./src/components/blood-tests/dialog-blood-test.vue?b32b","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js","webpack:///./node_modules/core-js/modules/es.array.includes.js"],"names":["class","for","header","visible","orderBloodTestDialog","style","modal","form","btComments","id","rows","label","bloodMachine","options","bloodMachineOptions","save","data-scrollselectors","role","colspan","cycleLabel","patient","firstName","lastName","day","month","year","age","hin","sex","phone","setup","store","state","artCycle","isCycle","value","selectedCycle","cycleId","render","legend","physicianId","doctorOptions","optionLabel","optionValue","filter","site","locationOptions","option","slotProps","name","testPriority","testPriorityOptions","barcode","collapsed","disabled","carrierNumber","positionInCarrier","system","__scopeId","testGroup","testGroupsOptions","multiple","listStyle","submitted","isInvalidTests","testSelectionTable","responsiveLayout","showGridlines","selection","seletedTests","dataKey","scrollable","scrollHeight","field","selectionMode","newVal","testIdArray","map","item","itemId","testId","testName","components","BloodTestDialogPatientInfo","BloodTestDialogTestInfo","BloodTestDialogBarcode","BloodTestDialogTestSelection","dispatch","$","notARegExp","requireObjectCoercible","correctIsRegExpLogic","target","proto","forced","includes","searchString","String","this","indexOf","arguments","length","undefined","useBloodTestsReportInit","useStore","orderBloodTestConfirmDialog","inject","editDailogVisible","testResults","ref","selectedBloodTest","loading","getBloodTestResults","then","data","finally","getBloodTestResultsWithOpenBarcode","test","barcodeDailogVisible","showBarcode","pdfUrl","width","height","left","screen","top","window","open","showBarcodeV2","obj","bar_id","testOrderId","pCodesLine","testItems","url","encodeURIComponent","serialize","useBloodTestDailogInit","toast","useToast","reactive","doctorId","date","format","Date","DATE_FORMAT_STRING","stat","serverId","deviceId","reqBody","getters","add","severity","summary","detail","life","emitter","emit","useBloodTestBarcodeInit","computed","useBloddTestInfoInit","provider","providers","locations","useBloodTestGroupSelectionInit","booodTests","bloodTest","bloodGroups","group","push","Map","values","curGroup","useBloodTestEditDialogInit","isCanceled","bloodTestOrderDate","patientId","bloodTestResultDate","etwo","etwoStat","lh","lhStat","prog","progStat","fsh","fshStat","tsh","tshStat","prl","prlStat","bhcg","bhcgStat","dheas","dheasStat","testo","testoStat","amh","amhStat","emptyFrom","getBloodTest","catch","saveAll","deleteResult","deleteOrder","cancelBloodTest","testCode","onHide","onOK","onCancel","isRegExp","module","exports","it","TypeError","wellKnownSymbol","MATCH","METHOD_NAME","regexp","error1","error2","$includes","addToUnscopables","el"],"mappings":"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","file":"js/chunk-afbb7e50.5f5224ba.js","sourcesContent":["<template>\n    <p-dialog\n        header=\"Add\"\n        v-model:visible=\"orderBloodTestDialog\"\n        :style=\"{ width: '960px' }\"\n        :modal=\"true\"\n        class=\"p-inputtext-sm p-input-filled\"\n    >\n        <div class=\"p-grid\">\n            <div class=\"p-md-7\">\n                <blood-test-dialog-patient-info />\n                <blood-test-dialog-test-info />\n                <blood-test-dialog-barcode />\n\n                <div class=\"p-fluid p-formgrid p-grid p-mt-2\">\n                    <div class=\"p-field p-col\">\n                        <label for=\"bt-comments\">BT Commnents</label>\n                        <p-textarea\n                            v-model=\"form.btComments\"\n                            id=\"bt-comments\"\n                            rows=\"5\"\n                        />\n                    </div>\n                    <div class=\"p-field p-col\">\n                        <label for=\"label\">Label</label>\n                        <p-input-text v-model=\"form.label\" id=\"label\" />\n                        <label for=\"blood-machine\" class=\"p-mt-2\">\n                            Blood Machine\n                        </label>\n                        <p-dropdown\n                            v-model=\"form.bloodMachine\"\n                            id=\"blood-machine\"\n                            :options=\"bloodMachineOptions\"\n                        />\n                    </div>\n                </div>\n            </div>\n            <div class=\"p-md-5\">\n                <blood-test-dialog-test-selection />\n            </div>\n        </div>\n\n        <p-button\n            label=\"Order Test\"\n            class=\"p-button-success p-mr-2\"\n            @click=\"save\"\n        />\n\n        <p-button\n            label=\"Cancel\"\n            class=\"p-button-danger\"\n            @click=\"orderBloodTestDialog = false\"\n        />\n    </p-dialog>\n</template>\n\n<script>\nimport { onMounted, provide } from \"vue\";\nimport { useBloodTestDailogInit } from \"@/composable/blood-tests\";\n\nimport BloodTestDialogPatientInfo from \"@/components/blood-tests/patient-info.vue\";\nimport BloodTestDialogTestInfo from \"@/components/blood-tests/dialog-test-info.vue\";\nimport BloodTestDialogBarcode from \"@/components/blood-tests/dialog-barcode.vue\";\nimport BloodTestDialogTestSelection from \"@/components/blood-tests/dialog-blood-test.vue\";\n\nexport default {\n    components: {\n        BloodTestDialogPatientInfo,\n        BloodTestDialogTestInfo,\n        BloodTestDialogBarcode,\n        BloodTestDialogTestSelection\n    },\n    setup() {\n        const {\n            store,\n            orderBloodTestDialog,\n            form,\n            save,\n            submitted,\n            isInvalidTests,\n            bloodMachineOptions\n        } = useBloodTestDailogInit();\n\n        provide(\"form\", form);\n        provide(\"submitted\", submitted);\n        provide(\"isInvalidTests\", isInvalidTests);\n\n        onMounted(() => {\n            store.dispatch(\"bloodTest/getBloodGroupTests\");\n            store.dispatch(\"provider/getProviders\");\n            store.dispatch(\"provider/getProviderLocations\");\n        });\n\n        return { orderBloodTestDialog, form, save, bloodMachineOptions };\n    }\n};\n</script>\n\n<style scoped>\n:deep() .p-fieldset .p-fieldset-legend {\n    padding: 0.5rem;\n    background-color: transparent;\n}\n</style>\n","<template>\n    <div\n        class=\"p-datatable p-component p-datatable-responsive-scroll p-datatable-sm p-mt-1\"\n        data-scrollselectors=\".p-datatable-wrapper\"\n    >\n        <div class=\"p-datatable-wrapper\">\n            <table role=\"table\" class=\"p-datatable-table\">\n                <thead class=\"p-datatable-thead\" role=\"rowgroup\">\n                    <tr role=\"row\">\n                        <th style=\"width: 120px;\">\n                            <div class=\"p-column-header-content\">\n                                <span class=\"p-column-title\">\n                                    Cycle\n                                </span>\n                            </div>\n                        </th>\n                        <th colspan=\"4\">\n                            <div class=\"p-column-header-content\">\n                                <span class=\"p-column-title\">\n                                    {{ cycleLabel }}\n                                </span>\n                            </div>\n                        </th>\n                    </tr>\n                </thead>\n\n                <tbody class=\"p-datatable-tbody\" role=\"rowgroup\">\n                    <tr class=\"\" role=\"row\">\n                        <td style=\"width: 120px;\">\n                            First Name\n                        </td>\n                        <td colspan=\"4\">{{ patient.firstName }}</td>\n                    </tr>\n                    <tr class=\"\" role=\"row\">\n                        <td style=\"width: 120px;\">\n                            Last Name\n                        </td>\n                        <td colspan=\"4\">{{ patient.lastName }}</td>\n                    </tr>\n                    <tr class=\"\" role=\"row\">\n                        <td style=\"width: 120px;\">\n                            Birth Date\n                        </td>\n                        <td>\n                            {{ patient.day }}-{{ patient.month }}-{{\n                                patient.year\n                            }}\n                        </td>\n                        <td style=\"width: 80px;\">\n                            Age\n                        </td>\n                        <td>\n                            {{ patient.age }}\n                        </td>\n                    </tr>\n                    <tr class=\"\" role=\"row\">\n                        <td style=\"width: 120px;\">\n                            Health Card\n                        </td>\n                        <td>{{ patient.hin }}</td>\n                        <td style=\"width: 80px;\">\n                            Gender\n                        </td>\n                        <td>\n                            {{ patient.sex }}\n                        </td>\n                    </tr>\n                    <tr class=\"\" role=\"row\">\n                        <td style=\"width: 120px;\">\n                            Tel\n                        </td>\n                        <td colspan=\"4\">{{ patient.phone }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"p-column-resizer-helper\" style=\"display: none;\"></div>\n    </div>\n</template>\n\n<script>\nimport { computed, inject } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n    setup() {\n        const store = useStore();\n        const patient = computed(() => store.state.artCycle.patient);\n        const isCycle = inject(\"isCycle\");\n\n        const cycleLabel = computed(() => {\n            if (isCycle.value == 1) {\n                return store.state.artCycle.selectedCycle.cycleId;\n            } else {\n                return \"No Cycle\";\n            }\n        });\n\n        return { patient, cycleLabel };\n    }\n};\n</script>\n","import { render } from \"./patient-info.vue?vue&type=template&id=7daa5483\"\nimport script from \"./patient-info.vue?vue&type=script&lang=js\"\nexport * from \"./patient-info.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <p-fieldset legend=\"Test Info\" class=\"p-inputtext-sm p-input-filled\">\n        <div class=\"p-fluid\">\n            <div class=\"p-field p-grid\">\n                <label class=\"p-col-fixed p-mb-2 p-md-2 p-mb-md-0\">\n                    Doctor\n                </label>\n                <div class=\"p-col-fixed\">\n                    <p-dropdown\n                        v-model=\"form.physicianId\"\n                        :options=\"doctorOptions\"\n                        optionLabel=\"name\"\n                        optionValue=\"id\"\n                        :filter=\"true\"\n                    />\n                </div>\n            </div>\n            <div class=\"p-field p-grid\">\n                <label class=\"p-col-fixed p-mb-2 p-md-2 p-mb-md-0\">\n                    Location\n                </label>\n                <div class=\"p-col-fixed\">\n                    <p-dropdown\n                        v-model=\"form.site\"\n                        :options=\"locationOptions\"\n                        optionLabel=\"name\"\n                        optionValue=\"id\"\n                    >\n                        <template #option=\"slotProps\">\n                            <div\n                                :style=\"{\n                                    padding: '5px',\n                                    'background-color': `${slotProps.option.color}`\n                                }\"\n                            >\n                                {{ slotProps.option.name }}\n                            </div>\n                        </template>\n                    </p-dropdown>\n                </div>\n                <label class=\"p-col-fixed p-mb-2 p-md-2 p-mb-md-0\">\n                    Test Priority\n                </label>\n                <div class=\"p-col-fixed\">\n                    <p-dropdown\n                        v-model=\"form.testPriority\"\n                        :options=\"testPriorityOptions\"\n                        optionLabel=\"label\"\n                        optionValue=\"value\"\n                    />\n                </div>\n            </div>\n        </div>\n    </p-fieldset>\n</template>\n\n<script>\nimport { useBloddTestInfoInit } from \"@/composable/blood-tests\";\nexport default {\n    setup() {\n        const {\n            form,\n            doctorOptions,\n            locationOptions,\n            testPriorityOptions\n        } = useBloddTestInfoInit();\n\n        return { form, doctorOptions, locationOptions, testPriorityOptions };\n    }\n};\n</script>\n","import { render } from \"./dialog-test-info.vue?vue&type=template&id=f8a333d6\"\nimport script from \"./dialog-test-info.vue?vue&type=script&lang=js\"\nexport * from \"./dialog-test-info.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n    <p-fieldset legend=\"Barcode\" class=\"p-inputtext-sm p-input-filled p-mt-2\">\n        <div class=\"p-formgroup-inline\">\n            <strong class=\"p-mt-1 p-mr-4\">Barocde</strong>\n            <div class=\"p-field-checkbox\">\n                <p-radio-button\n                    name=\"barcode\"\n                    value=\"yes\"\n                    v-model=\"form.barcode\"\n                />\n                <label>Yes</label>\n            </div>\n            <div class=\"p-field-checkbox\">\n                <p-radio-button\n                    name=\"barcode\"\n                    value=\"no\"\n                    v-model=\"form.barcode\"\n                />\n                <label>No</label>\n            </div>\n        </div>\n\n        <p-fieldset\n            legend=\"Sample Position Info\"\n            class=\"p-inputtext-sm p-input-filled p-mt-0\"\n            :collapsed=\"disabled\"\n        >\n            <div class=\"p-grid\">\n                <div class=\"p-md-8 carrier-box\">\n                    <div class=\"p-fluid\">\n                        <div class=\"p-field p-grid\">\n                            <label class=\"p-col-fixed p-mb-2 p-md-5 p-mb-md-0\">\n                                Carrier Number\n                            </label>\n                            <div class=\"p-col-fixed\" style=\"width: 50px\">\n                                <p-input-number\n                                    v-model=\"form.carrierNumber\"\n                                    :disabled=\"disabled\"\n                                />\n                            </div>\n                        </div>\n                        <div class=\"p-field p-grid\">\n                            <label class=\"p-col-fixed p-mb-2 p-md-5 p-mb-md-0\">\n                                Position in Carrier\n                            </label>\n                            <div class=\"p-col-fixed\" style=\"width: 50px\">\n                                <p-input-number\n                                    v-model=\"form.positionInCarrier\"\n                                    :disabled=\"disabled\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"p-md-4\">\n                    <div class=\"p-field-radiobutton\">\n                        <p-radio-button\n                            name=\"system\"\n                            value=\"rack\"\n                            v-model=\"form.system\"\n                            :disabled=\"disabled\"\n                        />\n                        <label>Rack System</label>\n                    </div>\n                    <div class=\"p-field-radiobutton\">\n                        <p-radio-button\n                            name=\"system\"\n                            value=\"disk\"\n                            v-model=\"form.system\"\n                            :disabled=\"disabled\"\n                        />\n                        <label>Disk System</label>\n                    </div>\n                </div>\n            </div>\n        </p-fieldset>\n    </p-fieldset>\n</template>\n\n<script>\nimport { useBloodTestBarcodeInit } from \"@/composable/blood-tests\";\nexport default {\n    setup() {\n        const { form, disabled } = useBloodTestBarcodeInit();\n        return {\n            form,\n            disabled\n        };\n    }\n};\n</script>\n\n<style scoped>\n.p-field-checkbox,\n.p-field-radiobutton {\n    margin-bottom: 0;\n}\n.carrier-box {\n    border: 1px solid #dee2e6;\n    border-radius: 3px;\n}\n</style>\n","import { render } from \"./dialog-barcode.vue?vue&type=template&id=f9ca91b8&scoped=true\"\nimport script from \"./dialog-barcode.vue?vue&type=script&lang=js\"\nexport * from \"./dialog-barcode.vue?vue&type=script&lang=js\"\n\nimport \"./dialog-barcode.vue?vue&type=style&index=0&id=f9ca91b8&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-f9ca91b8\"\n\nexport default script","<template>\n    <p-fieldset legend=\"Test Group\" class=\"p-inputtext-sm p-input-filled\">\n        <p-listbox\n            v-model=\"testGroup\"\n            :options=\"testGroupsOptions\"\n            optionLabel=\"groupName\"\n            optionValue=\"curGroup\"\n            :multiple=\"true\"\n            listStyle=\"height: 200px\"\n        />\n    </p-fieldset>\n\n    <p-fieldset\n        legend=\"Test Selectiion\"\n        class=\"p-inputtext-sm p-input-filled p-mt-2\"\n        :class=\"[submitted && isInvalidTests ? 'invalid' : '']\"\n    >\n        <span v-if=\"submitted && isInvalidTests\" style=\"color: red\">\n            Select at least 1\n        </span>\n\n        <p-data-table\n            :value=\"testSelectionTable\"\n            responsiveLayout=\"scroll\"\n            showGridlines\n            class=\"p-datatable-sm p-mb-1\"\n            v-model:selection=\"seletedTests\"\n            dataKey=\"testId\"\n            :scrollable=\"true\"\n            scrollHeight=\"200px\"\n        >\n            <p-column field=\"testId\" header=\"Code\" style=\"max-width: 60px\" />\n            <p-column field=\"testName\" header=\"Name\" />\n            <p-column selectionMode=\"multiple\" style=\"max-width: 3rem\" />\n        </p-data-table>\n    </p-fieldset>\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useBloodTestGroupSelectionInit } from \"@/composable/blood-tests\";\nexport default {\n    setup() {\n        const {\n            form,\n            testGroup,\n            testGroupsOptions,\n            testSelectionTable,\n            seletedTests,\n            submitted,\n            isInvalidTests\n        } = useBloodTestGroupSelectionInit();\n\n        watch(seletedTests, (newVal) => {\n            form.testIdArray = newVal.map((item) => ({\n                itemId: item.testId,\n                name: item.testName\n            }));\n            isInvalidTests.value = false;\n        });\n\n        watch(testSelectionTable, (newVal) => {\n            seletedTests.value = newVal;\n        });\n\n        return {\n            seletedTests,\n            testGroup,\n            testGroupsOptions,\n            testSelectionTable,\n            submitted,\n            isInvalidTests\n        };\n    }\n};\n</script>\n\n<style scoped>\n.invalid {\n    border: 1px solid red;\n}\n</style>\n","import { render } from \"./dialog-blood-test.vue?vue&type=template&id=ed80d67a&scoped=true\"\nimport script from \"./dialog-blood-test.vue?vue&type=script&lang=js\"\nexport * from \"./dialog-blood-test.vue?vue&type=script&lang=js\"\n\nimport \"./dialog-blood-test.vue?vue&type=style&index=0&id=ed80d67a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-ed80d67a\"\n\nexport default script","import { render } from \"./dialog.vue?vue&type=template&id=6acf4064&scoped=true\"\nimport script from \"./dialog.vue?vue&type=script&lang=js\"\nexport * from \"./dialog.vue?vue&type=script&lang=js\"\n\nimport \"./dialog.vue?vue&type=style&index=0&id=6acf4064&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-6acf4064\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~String(requireObjectCoercible(this))\n      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","import { DATE_FORMAT_STRING } from \"@/config\";\nimport { emitter } from \"@/event-bus\";\nimport { format } from \"date-fns\";\nimport { useToast } from \"primevue/usetoast\";\nimport { computed, inject, reactive, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { serialize } from \"php-serialize\";\n\nexport function useBloodTestsReportInit() {\n    const store = useStore();\n    const orderBloodTestConfirmDialog = inject(\"orderBloodTestConfirmDialog\");\n    const editDailogVisible = inject(\"editDailogVisible\");\n\n    const testResults = ref();\n    const selectedBloodTest = inject(\"selectedBloodTest\");\n    const loading = ref(false);\n    const getBloodTestResults = () => {\n        loading.value = true;\n        store\n            .dispatch(\"bloodTest/getBloodTestResults\")\n            .then((data) => {\n                testResults.value = data;\n            })\n            .finally(() => (loading.value = false));\n    };\n\n    const getBloodTestResultsWithOpenBarcode = (test) => {\n        loading.value = true;\n        store\n            .dispatch(\"bloodTest/getBloodTestResults\")\n            .then((data) => {\n                testResults.value = data;\n            })\n            .finally(() => (loading.value = false));\n    };\n\n    const barcodeDailogVisible = ref(false);\n\n    const showBarcode = (id) => {\n        store.dispatch(\"bloodTest/printBarcodePDF\", id).then((pdfUrl) => {\n            let width = 520;\n            let height = 580;\n            let left = screen.width / 2 - width / 2;\n            let top = screen.height / 2 - height / 2;\n\n            window.open(\n                pdfUrl,\n                \"_blank\",\n                `height=${height},width=${width},top=${top},left=${left}`\n            );\n        });\n    };\n\n    const showBarcodeV2 = (data) => {\n        const obj = {\n            bar_id: data.testOrderId,\n            pCodesLine: data.testItems\n        };\n\n        let url = `http://tablet.nlf.clinic:3280/jrsPHPclientV2/jrs/generate_reportn1.php?report_name=TESTS&report_type=pdf&report_params=${encodeURIComponent(\n            serialize(obj)\n        )}`;\n        window.open(url);\n    };\n\n    return {\n        store,\n        testResults,\n        loading,\n        getBloodTestResults,\n        getBloodTestResultsWithOpenBarcode,\n        orderBloodTestConfirmDialog,\n        editDailogVisible,\n        barcodeDailogVisible,\n        selectedBloodTest,\n        showBarcode,\n        showBarcodeV2\n    };\n}\n\nexport function useBloodTestReportInit() {\n    const dialogVisible = inject(\"dialogVisible\");\n    return { dialogVisible };\n}\n\nexport function useBloodTestDailogInit() {\n    const store = useStore();\n    const toast = useToast();\n    const orderBloodTestDialog = inject(\"orderBloodTestDialog\");\n    const isCycle = inject(\"isCycle\");\n\n    const form = reactive({\n        testOrderId: null,\n        physicianId: store.state.artCycle.patient.doctorId,\n        date: format(new Date(), DATE_FORMAT_STRING),\n        site: null,\n        isCycle: null,\n        testIdArray: [],\n        stat: null,\n        serverId: null,\n        deviceId: null,\n        testPriority: null,\n        btComments: null,\n        label: null,\n        bloodMachine: null\n    });\n\n    const bloodMachineOptions = reactive([1, 2, 3, 4]);\n\n    const submitted = ref(false);\n    const isInvalidTests = ref(false);\n\n    const showBarcode = (test) => {\n        const obj = {\n            bar_id: test.barcode,\n            pCodesLine: test.testItems\n        };\n\n        let url = `http://tablet.nlf.clinic:3280/jrsPHPclientV2/jrs/generate_reportn1.php?report_name=TESTS&report_type=pdf&report_params=${encodeURIComponent(\n            serialize(obj)\n        )}`;\n        window.open(url);\n    };\n\n    const save = () => {\n        submitted.value = true;\n        if (form.testIdArray.length == 0) {\n            isInvalidTests.value = true;\n            return;\n        } else {\n            isInvalidTests.value = false;\n        }\n\n        const reqBody = {\n            ...form,\n            ...store.getters[\"artCycle/getSelectedCycleAndPatientId\"],\n            testIdArray: [...form.testIdArray],\n            isCycle: isCycle.value\n        };\n\n        store\n            .dispatch(\"bloodTest/addBloodTestOrderItems\", reqBody)\n            .then((data) => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n\n                emitter.emit(\n                    \"blood-test-edit-dailog:reload-test-results-with-open-barcode\",\n                    data\n                );\n\n                showBarcode(data);\n            })\n            .finally(() => {\n                submitted.value = false;\n                orderBloodTestDialog.value = false;\n            });\n    };\n\n    return {\n        store,\n        orderBloodTestDialog,\n        form,\n        save,\n        submitted,\n        isInvalidTests,\n        bloodMachineOptions\n    };\n}\n\nexport function useBloodTestBarcodeInit() {\n    const form = reactive({\n        barcode: \"yes\",\n        carrierNumber: 1,\n        positionInCarrier: 1,\n        system: \"rack\"\n    });\n\n    const disabled = computed(() => form.barcode === \"yes\");\n\n    return {\n        form,\n        disabled\n    };\n}\n\nexport function useBloddTestInfoInit() {\n    const store = useStore();\n\n    const form = inject(\"form\");\n\n    const doctorOptions = computed(() => store.state.provider.providers);\n    const locationOptions = computed(() => store.state.provider.locations);\n    const testPriorityOptions = reactive([\n        { value: \"R\", label: \"Routine\" },\n        { value: \"S\", label: \"Stat\" },\n        { value: \"A\", label: \"As Soon As Possible\" },\n        { value: \"T\", label: \"In Time\" },\n        { value: \"P\", label: \"Preoperative\" }\n    ]);\n\n    return { form, doctorOptions, locationOptions, testPriorityOptions };\n}\n\nexport function useBloodTestGroupSelectionInit() {\n    const store = useStore();\n\n    const form = inject(\"form\");\n    const submitted = inject(\"submitted\");\n    const isInvalidTests = inject(\"isInvalidTests\");\n\n    const testGroup = ref([]);\n    const testGroupsOptions = computed(\n        () => store.getters[\"bloodTest/getBloodGroups\"]\n    );\n    const testSelectionTable = computed(() => {\n        if (testGroup.value.length == 0) return [];\n        else if (testGroup.value.includes(\"all\")) {\n            const booodTests = [];\n            for (const group of store.state.bloodTest.bloodGroups) {\n                booodTests.push(...group.testItems);\n            }\n            return [\n                ...new Map(\n                    booodTests.map((item) => [item[\"testId\"], item])\n                ).values()\n            ];\n        } else {\n            const booodTests = [];\n            for (const group of store.state.bloodTest.bloodGroups) {\n                if (testGroup.value.includes(group.curGroup)) {\n                    booodTests.push(...group.testItems);\n                }\n            }\n            return [\n                ...new Map(\n                    booodTests.map((item) => [item[\"testId\"], item])\n                ).values()\n            ];\n        }\n    });\n    const seletedTests = ref([]);\n\n    return {\n        form,\n        testSelectionTable,\n        seletedTests,\n        testGroup,\n        testGroupsOptions,\n        submitted,\n        isInvalidTests\n    };\n}\n\nexport function useBloodTestEditDialogInit() {\n    const store = useStore();\n    const toast = useToast();\n    const editDailogVisible = inject(\"editDailogVisible\");\n    const selectedBloodTest = inject(\"selectedBloodTest\");\n    const isCanceled = ref(false);\n\n    const form = reactive({\n        cycleId: null,\n        bloodTestOrderDate: null,\n        patientId: null,\n        testOrderId: null,\n        bloodTestResultDate: null,\n        etwo: null,\n        etwoStat: null,\n        lh: null,\n        lhStat: null,\n        prog: null,\n        progStat: null,\n        fsh: null,\n        fshStat: null,\n        tsh: null,\n        tshStat: null,\n        prl: null,\n        prlStat: null,\n        bhcg: null,\n        bhcgStat: null,\n        dheas: null,\n        dheasStat: null,\n        testo: null,\n        testoStat: null,\n        amh: null,\n        amhStat: null\n    });\n\n    const emptyFrom = () => {\n        form.cycleId = null;\n        form.bloodTestOrderDate = null;\n        form.patientId = null;\n        form.testOrderId = null;\n        form.bloodTestResultDate = null;\n        form.etwo = null;\n        form.etwoStat = null;\n        form.lh = null;\n        form.lhStat = null;\n        form.prog = null;\n        form.progStat = null;\n        form.fsh = null;\n        form.fshStat = null;\n        form.tsh = null;\n        form.tshStat = null;\n        form.prl = null;\n        form.prlStat = null;\n        form.bhcg = null;\n        form.bhcgStat = null;\n        form.dheas = null;\n        form.dheasStat = null;\n        form.testo = null;\n        form.testoStat = null;\n        form.amh = null;\n        form.amhStat = null;\n    };\n\n    const getBloodTest = () => {\n        isCanceled.value = false;\n        store\n            .dispatch(\n                \"bloodTest/getBloodTest\",\n                selectedBloodTest.value.testOrderId\n            )\n            .then((data) => {\n                form.cycleId = data.cycleId;\n                form.bloodTestOrderDate = data.bloodTestOrderDate;\n                form.patientId = data.patientId;\n                form.testOrderId = data.testOrderId;\n                form.bloodTestResultDate = data.bloodTestResultDate;\n                form.etwo = data.etwo;\n                form.etwoStat = data.etwoStat;\n                form.lh = data.lh;\n                form.lhStat = data.lhStat;\n                form.prog = data.prog;\n                form.progStat = data.progStat;\n                form.fsh = data.fsh;\n                form.fshStat = data.fshStat;\n                form.tsh = data.tsh;\n                form.tshStat = data.tshStat;\n                form.prl = data.prl;\n                form.prlStat = data.prlStat;\n                form.bhcg = data.bhcg;\n                form.bhcgStat = data.bhcgStat;\n                form.dheas = data.dheas;\n                form.dheasStat = data.dheasStat;\n                form.testo = data.testo;\n                form.testoStat = data.testoStat;\n                form.amh = data.amh;\n                form.amhStat = data.amhStat;\n            })\n            .catch(() => {\n                emptyFrom();\n            });\n    };\n\n    const saveAll = () => {\n        store\n            .dispatch(\"bloodTest/saveAllBloodTest\", { ...form })\n            .then((data) => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"Successful\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n                editDailogVisible.value = false;\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\n            })\n            .catch(() => {});\n    };\n\n    const deleteResult = () => {\n        store\n            .dispatch(\n                \"bloodTest/deleteResult\",\n                selectedBloodTest.value.testOrderId\n            )\n            .then((data) => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"Successful\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n                editDailogVisible.value = false;\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\n            })\n            .catch(() => {});\n    };\n\n    const deleteOrder = () => {\n        store\n            .dispatch(\n                \"bloodTest/deleteOrder\",\n                selectedBloodTest.value.testOrderId\n            )\n            .then((data) => {\n                toast.add({\n                    severity: \"success\",\n                    summary: \"Successful\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n                editDailogVisible.value = false;\n                emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\n            })\n            .catch(() => {});\n    };\n\n    const cancelBloodTest = (testCode) => {\n        store\n            .dispatch(\"bloodTest/cancelBloodTest\", {\n                testOrderId: selectedBloodTest.value.testOrderId,\n                testCode\n            })\n            .then((data) => {\n                isCanceled.value = true;\n                toast.add({\n                    severity: \"success\",\n                    summary: \"Successful\",\n                    detail: \"Save Successful\",\n                    life: 3000\n                });\n            })\n            .catch(() => {});\n    };\n\n    const onHide = () => {\n        if (isCanceled.value) {\n            emitter.emit(\"blood-test-edit-dailog:reload-test-results\");\n        }\n    };\n\n    return {\n        editDailogVisible,\n        form,\n        getBloodTest,\n        saveAll,\n        deleteOrder,\n        deleteResult,\n        cancelBloodTest,\n        onHide\n    };\n}\n","<template>\n    <p-dialog\n        header=\"Order Blood Test\"\n        v-model:visible=\"orderBloodTestConfirmDialog\"\n        :style=\"{ width: '460px' }\"\n        :modal=\"true\"\n        class=\"p-inputtext-sm p-input-filled\"\n    >\n        <div class=\"p-grid\">\n            <p>This Blood test will not be attced to the cycle!</p>\n            <p>\n                If you want this blood test to be attched to cycle, please\n                create it from cycle monitoring page\n            </p>\n        </div>\n\n        <p-button label=\"Ok\" class=\"p-button-success p-mr-2\" @click=\"onOK\" />\n\n        <p-button label=\"Cancel\" class=\"p-button-danger\" @click=\"onCancel\" />\n    </p-dialog>\n</template>\n\n<script>\nimport { inject } from \"vue\";\nexport default {\n    setup() {\n        const orderBloodTestDialog = inject(\"orderBloodTestDialog\");\n        const orderBloodTestConfirmDialog = inject(\"orderBloodTestConfirmDialog\");\n        const isCycle = inject(\"isCycle\");\n\n        const onOK = () => {\n            isCycle.value = 0;\n            orderBloodTestDialog.value = true;\n            orderBloodTestConfirmDialog.value = false;\n        };\n\n        const onCancel = () => {\n            orderBloodTestConfirmDialog.value = false;\n        };\n\n\n        return { orderBloodTestConfirmDialog, onOK, onCancel };\n    }\n};\n</script>\n","import { render } from \"./confirm-dialog.vue?vue&type=template&id=5bc0e5b7\"\nimport script from \"./confirm-dialog.vue?vue&type=script&lang=js\"\nexport * from \"./confirm-dialog.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dialog.vue?vue&type=style&index=0&id=6acf4064&scoped=true&lang=css\"","var isRegExp = require('../internals/is-regexp');\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dialog-barcode.vue?vue&type=style&index=0&id=f9ca91b8&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./dialog-blood-test.vue?vue&type=style&index=0&id=ed80d67a&scoped=true&lang=css\"","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n"],"sourceRoot":""}