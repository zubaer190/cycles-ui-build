{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/layouts/defalut.vue?de22","webpack:///./src/App.vue","webpack:///./src/App.vue?889f","webpack:///./src/service/auth.js","webpack:///./src/service/utils.js","webpack:///./src/store/options.js","webpack:///./src/store/art-cycle.js","webpack:///./src/service/cycle-monitoring.js","webpack:///./src/store/cyccle-monitoring.js","webpack:///./src/service/opu.js","webpack:///./src/store/opu.js","webpack:///./src/service/semen.js","webpack:///./src/store/semen.js","webpack:///./src/service/pregnancy.js","webpack:///./src/store/pregnancy.js","webpack:///./src/service/born.js","webpack:///./src/store/born.js","webpack:///./src/store/utils.js","webpack:///./src/service/semen-cryo-storage.js","webpack:///./src/store/semen-cryo-storage.js","webpack:///./src/service/cycle-report.js","webpack:///./src/store/cycle-report.js","webpack:///./src/service/fertilization.js","webpack:///./src/store/fertilization.js","webpack:///./src/service/doctor.js","webpack:///./src/store/doctor.js","webpack:///./src/service/embryo-transfer.js","webpack:///./src/store/embryo-transfer.js","webpack:///./src/service/provider.js","webpack:///./src/store/provider.js","webpack:///./src/service/cyro-storage.js","webpack:///./src/store/cryo-storage.js","webpack:///./src/service/daily-report.js","webpack:///./src/store/daily-report.js","webpack:///./src/service/blood-test.js","webpack:///./src/store/blood-test.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/service/art-cycle.js","webpack:///./src/event-bus.js","webpack:///./src/components/layouts/defalut.vue","webpack:///./src/components/shared/header-info.vue","webpack:///./src/components/shared/header-info.vue?8a20","webpack:///./src/components/layouts/defalut.vue?7693","webpack:///./src/router/index.js","webpack:///./src/service/app-http.js","webpack:///./src/config.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","render","login","user","axios","post","BASE_URL","username","password","crossDomain","resp","localStorage","setItem","JSON","stringify","accessToken","api_key","logged_user","email","authoreizeAxios","logout","removeItem","register","getBornOptions","state","born","complications","treatmentOutcome","typeOfPregnancy","chorionicity","electiveFetalReduction","pregnancyBirthOutcome","priorBirths","priorFreshCyclesStarted","priorETsOwnOocytes","priorETsDonorOocytes","typeOfFunding","reasonsForTreatmentCycle","reasonsForMaleFactor","typeOfStimulationProtocol","medicationForCOS","triggerMedication","reasonCancelled","oocyteOrigin","donorProviderstatus","oocyteCryoMethod","spermOrigin","spermDonorStatus","spermSource","inseminationMethod","reasonsForNoUse","embryoStageFreezing","reasonEmbryoCryopreservation","embryoFreshCryoMethod","embryoStageThawing","reasonsNoET","preparationUterineLining","assistedZonaHatching","sourceTransferredEmbryos","transferInseminationMethod","charTransferredEmbryo","numberThaws","sitePGTembryo","actions","commit","utilService","log","mutations","SET_BORN_OPTIONS","namespaced","CYCYLE_SUMMARY_KEY","PATIENT_KEY","SELECTED_CYCLE_KEY","CYCLE_TYPE_OPTIONS_KEY","patient","getItem","parse","cyclesSummary","selectedCycle","cycleTypeOptions","partner","cycleTypes","selectedCycleNo","spermSourceOptions","eggSourceOptions","SET_SELECTED_CYCLE","payload","SET_SELECTED_CYCLE_TO_FIRST","index","findIndex","item","cycleNo","SET_BORN_CYCLE","cycleId","bornCycleId","getters","getSelectedCycle","isBornCycle","isCreateBornCycle","getSelectedCycleAndPatientId","patientId","isIVFCycle","cycleType","isFETCycle","getCyclesDetails","demographicNo","artCycleService","petientDetails","partnerDetails","cyclesSummery","map","eggDonor","eggDoner","updateSelectedCycle","cycle","updateCycle","nextCycle","previsouCycle","getCycleFormFieldOptions","spermSources","eggSource","createNewCycle","newCycle","id","cycleNoType","cycleDate","format","Date","DATE_FORMAT_STRING","cycleSucceeded","cycleExpired","deleteCycle","cycelId","createNewBornCycle","mergeCycle","getCouplesReport","reslult","CYCLE_MONITORING_DETAIL_ENDPOINT","DRUG_1_OPTIONS_ENDPOINT","DRUG_2_OPTIONS_ENDPOINT","PROTOCOL_OPTIONS_ENDPOINT","DIAGNOSIS_OPTIONS_ENDPOINT","CREATE_NEW_MONITOR_LINE_ENDPOINT","UPDATE_MONITOR_LINE_ENDPOINT","UPDATE_COMMMENT_ENDPIONT","SAVE_MONITORING_SUMMARY_ENDPOINT","getCycleMonitoringDetails","$axios","params","getDaignosisOptions","diagnosis","getProtocolOptions","protocols","getDrug1Options","drugs1","getDrug2Options","drugs2","createMonitorLine","formData","updateMonitorLine","updateComment","saveMonitoringSummary","diagnosisOptions","protocolOptions","drugs1Options","drugs2Options","details","lines","comments","selectedMonitorLine","bloodTests","fsh","tsh","prl","bhcg","testo","dheas","amh","selectedComment","SET_SELECTED_MONITOR_LINE","SET_SELECTED_COMMMENT","monitoringService","monitorDetails","monitorLines","monitorLineComments","getFormFieldOptions","curUser","editMonitorLine","OPU_ENDPOINT","SAVE_OPU_ENDPOINT","getOPUSummary","saveOpuSummary","formatToLineObject","lineStr","split","obj","reduce","acc","assign","timeLineFormatter","part1","part2","bpLineFormatter","o2LineFormatter","opuId","docDate","md","ivStart","ativanLine","versedLine","fentanylLine","narcanLine","atropineLine","gravolLine","xylocaineLine","other1Line","other2Line","other3Line","other4Line","other5Line","other6Line","other1Name","other2Name","other3Name","other4Name","other5Name","other6Name","preTimeLine","preBPLine","preO2Line","postTimeLine","postBPLine","postO2Line","prePulseLine","postPulseLine","o2","o2via","comment","eggsNum","recovery","bpSummary","pulseSummary","upToVoid","fluidsPo","cramps","bleeding","nausea","discharged","accompanied","rnRpn","mdSummary","ivDisconnect","fluidGiven","getDrugChart","getPrePatientChart","commnet","getPostPatientChart","getBottomForm","getMiddleForm","getTopForm","by","_cycleId","rootState","opuService","preBpLine","postBpLine","prePLine","postPLine","artCycle","saveSummary","rnRna","SET_NEW_OPU","SET_OPU","SEMEN_LIST_ENDPOINT","SEMEN_UPDATE_ENDPOINT","SEMEN_CREATE_ENDPOINT","SEMEN_DELETE_ENDPOINT","getSemenList","updateSemen","semen","createSemen","delteSemen","semenList","selectedSemen","semenService","response","deleteSemen","SET_SEMEN_LIST","list","SET_SELECTED_SEMEN","getPatient","person","firstName","lastName","dateOfBirth","year","month","day","getPartner","GET_PREGNANCY_DETAILS_EDNPOINT","CREATE_NEW_ENDPOINT","SAVE_PREGNANCY_ENDPOINT","CRATE_FETUS_HISTORY_ENDPOINT","GET_FETUS_HISTORY_ENDPOINT","DELETE_FETUS_HISTORY_ENDPOINT","UPDATE_FETUS_HISTORY_ENPOINT","GET_LIVE_BIRTH_HISTORY_ENDPOINT","CREATE_LIVE_BIRTH_ENDPOINT","DELETE_LIVE_BIRTH_ENPOINT","UPDATE_LIVE_BIRTH_ENDPOINT","getPregnancyDetails","createNew","savePregnancyOutcome","createNewFetusHistory","getFetusHistory","pregnancyId","fetusesList","deleteFetus","fetusHistoryId","updateFetus","getLiveBirthHisory","birthsList","createLiveBirth","deletLiveBirthHistory","liveBirthHistoryId","updateLiveBirth","pregnancyDetails","fetusHistories","pregnancyTests","liveBirthHisotory","pregnancyService","createNewPregnancy","dispatch","getLiveBirthHistory","liveBirthId","SET_PREGNANCY_DETAILS","SET_FETUS_HISTORIES","SET_LIVE_BIRTH_HISTORY","UPDATE_FETUS","CANCEL_FETUS_UPDATE","CANCEL_LIVE_BIRTH_UPDATE","GET_BORN_ENPOINT","UPDATE_COMPLICATION_ENDPOINT","UPDATE_OOCYTE_COLLECTION_ENDPOINT","UPDATE_OBSTETRICAL_HISTORY_ENDPOINT","UPDATE_EMBRYOLOGY","getBorn","updateComplication","updatePregnancyOutcome","updateOocyteCollection","updateObstetricalHistory","updateEmbryology","updateFreshEmbryo","updateFrozenEmbryo","updateEmbryoTransfer","updateObstetricalHistoryV2","updateOvarian","obstetricalHistory","ovarian","oocyteCollections","pregnancyOutcome","freshEmbryos","frozenEmbryos","embryoTransfer","bornService","getBronV2","SET_BORN","embryology","SET_EMPTY_BORN","bornOptions","getComplicationsOptions","getTreatmentOutcomeOptions","getTypeOfPregnancyOptions","getChorionicityOptions","getElectiveFetalReductionOptions","getPregnancyBirthOutcomeOptions","getPriorBirthsOptions","getPriorFreshCyclesStartedOptions","getPriorETsOwnOocytesOptions","getPriorETsDonorOocytesOptions","getTypeOfFundingOptions","getReasonsForTreatmentCycleOptions","getReasonsForMaleFactorOptions","getTypeOfStimulationProtocolOptions","getMedicationForCosOptions","getTriggerMedicationOptions","getReasonCancelledOptions","getOocyteOriginOptions","getDonorProviderstatusOptions","getOocyteCryoMethodOptions","getSpermOriginOptions","getSpermDonorStatusOptions","getSpermSourceOptions","getInseminationMethodOptions","getReasonsForNoUseOptions","getEmbryoStageFreezingOptions","getReasonEmbryoCryopreservationOptions","getEmbryoFreshCryoMethodOptions","getEmbryoStageThawingOptions","getReasonsNoEtOptions","getPreparationUterineLiningOptions","getAssistedZonaHatchingOptions","getSourceTransferredEmbryosOptions","getTransferInseminationMethodOptions","getCharTransferredEmbryoOptions","getNumberThawsOptions","getSitePgTembryoOptions","GET_PROVIDERS_ENDPOINT","GET_SEMEN_CRYO_STORAGE_ENDPOINT","SAVE_SEMEN_CRYO_STORAGE_ENDPOINT","getProviders","getSemenCryoStorage","semenCryoStorageHeader","save","deleteSemenCryoStorage","ecId","providers","semenCryoStorage","semenCryoStorageService","saveSemenCryoStorage","SET_SEMEN_CYRO_STORAGE","SET_PROVIDERS","getAllCycleType","allCycleTypes","getCycleRport","cycleRecords","getLocationOption","getCycleReportExcel","report","locationOptions","getAllCycleTypes","cycleReportService","getCycleReport","lenght","getFertilizationByCycleId","fertilization","createFertlization","updateFertlization","getFertilizationLine","fertId","fertilizationLines","createFertilizationLine","fertLine","getOocyteEmbryoOptions","maturityList","stageList","gradeList","saveFertlizationEmbryoDetail","getFertlizationEmbryoDetail","oocId","fertilizationEmbryoDetails","getFertilization","fertilizationService","getFertilizationLines","getOccyteEmbryoDialogOptions","SET_FERTILIZATION","EMPTY_FERTILIZAION_LINE","getDoctors","doctors","getDoctorList","doctorService","getEmbryoTranasfer","updateEmbryoTrasfer","createEmbryoTransfer","getDaysPostORList","daysPostORList","getCatheterList","catheterList","embryoTransferService","getFeildOptions","locations","providerServcie","getProviderLocations","getCryoStorageList","getCyroStorageByPatient","getFertilizationLineByCycle","saveFreezingLine","getCryoStorageOptions","pugColorList","cassetteTypeList","cassetteColorList","dewarList","getCryoStorageListFiltered","queryParams","embryoStorageList","receivedEmbryos","cryoStorageService","plugColor","label","cassetteType","cassetteColor","getTotalPatient","fromDate","toDate","totalPatients","getTotalOrders","totalOrders","getCycleData","autoTestOrderId","getPersonalCycle","testId","getOrderList","providerNo","ordersList","assignCycleToBloodTest","saveCheckedSigleRecord","getFundedBloodBillingList","fundedBloodBilling","getBloodBillingList","bloodBillingList","form","reportList","selectedReport","billingList","context","dailyReportService","getPendingOrderList","getPersonalCycles","personalCycles","SET_SELECTED_REPORT","isAnyReportSelected","getBloodTestResults","btdisplay","getBloodGroupTests","bloodGroups","addBloodTestOrderItems","getBloodTest","testOrderId","saveAllBloodTest","printBarcodePDF","url","pdf","reqBody","getBloodGroups","groupName","curGroup","getAllBloodTest","booodTests","group","testItems","Map","values","initialState","status","loggedIn","createStore","AuthService","loginSuccess","loginFailure","registerSuccess","registerFailure","options","cycleMonitoring","opu","pregnancy","utils","cycleReport","doctor","provider","cryoStorage","dailyReport","bloodTest","app","createApp","App","use","store","router","PrimeVue","ConfirmationService","ToastService","mount","provide","component","AutoComplete","Calendar","Checkbox","Dropdown","InputMask","InputNumber","InputText","MultiSelect","Listbox","Password","RadioButton","Textarea","ToggleButton","Button","DataTable","Column","ColumnGroup","Row","TreeTable","Card","Divider","Fieldset","Panel","ScrollPanel","Splitter","SplitterPanel","TabPanel","TabView","Toolbar","ConfirmDialog","Dialog","OverlayPanel","TabMenu","InlineMessage","Message","Toast","Avatar","Badge","Chip","ProgressSpinner","ProgressBar","BlockUI","DEMOGRAPHIC_SEARCH_ENDPOINT","FORM_FIELD_OPTIONS_ENDOINT","PATIENT_CYCLES_ENDPOINT","CYCLE_SUMMARY_DETAIL","CYCLE_CREATE_ENDPOINT","CYCLE_DELETE_ENDPOINT","CYCLE_UPDATE_ENDPOINT","BORN_CYCLE_CREATE","getCycleSummaryDetail","parseInt","craetNewBorn","cycle1","cycle2","dryRun","cycleId1","cycleId2","isDryRun","cycleMergeResult","searchDemographic","term","sex","getCycles","emitter","mitt","EVENT_STRINGS","LOGOUT","class","blocked","loading","fullScreen","left","right","icon","showUserOverlay","model","menu","ref","style","layout","chart","age","setup","components","HeaderInfo","to","visible","userOverlay","toggle","on","val","__scopeId","routes","path","DefaultLayout","children","redirect","createRouter","history","createWebHashHistory","process","beforeEach","from","next","isAuthenticated","baseURL","auth","defaults","headers","common","Authorization"],"mappings":"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","file":"js/app.606635e3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0efb54e6\":\"5ff4d280\",\"chunk-11955d49\":\"d7d1166e\",\"chunk-2d0b30b7\":\"613cee3a\",\"chunk-2d0c0341\":\"9605bd48\",\"chunk-2d0cf8e4\":\"2a822404\",\"chunk-2d0d7a65\":\"7659f484\",\"chunk-2d229481\":\"3a5eb4c9\",\"chunk-40365b49\":\"fc2b31a4\",\"chunk-0d8bf69c\":\"605f1546\",\"chunk-2545fb13\":\"9e880623\",\"chunk-3fbb524a\":\"8a45143c\",\"chunk-5f657682\":\"df0ba304\",\"chunk-6f0588c4\":\"d368528a\",\"chunk-6deae13b\":\"174da7ab\",\"chunk-7e1885c4\":\"78dbe767\",\"chunk-3ec8bf50\":\"9217430d\",\"chunk-c997a810\":\"4d8e5f4f\",\"chunk-13c60e0a\":\"689caacb\",\"chunk-ce38ba9a\":\"42c0a09b\",\"chunk-7850a3f5\":\"c0d1b36f\",\"chunk-96510aa0\":\"0f34e89c\",\"chunk-69ccd6b1\":\"e5659056\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0efb54e6\":1,\"chunk-11955d49\":1,\"chunk-0d8bf69c\":1,\"chunk-3fbb524a\":1,\"chunk-5f657682\":1,\"chunk-6f0588c4\":1,\"chunk-6deae13b\":1,\"chunk-3ec8bf50\":1,\"chunk-c997a810\":1,\"chunk-13c60e0a\":1,\"chunk-ce38ba9a\":1,\"chunk-96510aa0\":1,\"chunk-69ccd6b1\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0efb54e6\":\"f2d4f881\",\"chunk-11955d49\":\"ba64f52f\",\"chunk-2d0b30b7\":\"31d6cfe0\",\"chunk-2d0c0341\":\"31d6cfe0\",\"chunk-2d0cf8e4\":\"31d6cfe0\",\"chunk-2d0d7a65\":\"31d6cfe0\",\"chunk-2d229481\":\"31d6cfe0\",\"chunk-40365b49\":\"31d6cfe0\",\"chunk-0d8bf69c\":\"1b83564b\",\"chunk-2545fb13\":\"31d6cfe0\",\"chunk-3fbb524a\":\"5e95dc4e\",\"chunk-5f657682\":\"897ac698\",\"chunk-6f0588c4\":\"d47bfe49\",\"chunk-6deae13b\":\"2aa605c3\",\"chunk-7e1885c4\":\"31d6cfe0\",\"chunk-3ec8bf50\":\"c988b5aa\",\"chunk-c997a810\":\"c19920c8\",\"chunk-13c60e0a\":\"a00895c7\",\"chunk-ce38ba9a\":\"1dae755f\",\"chunk-7850a3f5\":\"31d6cfe0\",\"chunk-96510aa0\":\"dcc14340\",\"chunk-69ccd6b1\":\"be1f6144\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/cycles-ui/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./defalut.vue?vue&type=style&index=0&id=574d640e&scoped=true&lang=css\"","<template>\n    <router-view />\n</template>\n\n","import { render } from \"./App.vue?vue&type=template&id=541cbe0e\"\nconst script = {}\nscript.render = render\n\nexport default script","import { BASE_URL } from \"../config.js\";\nimport axios from \"axios\";\nimport { authoreizeAxios } from \"./app-http\";\n\nexport default {\n    login(user) {\n        return axios\n            .post(\n                `${BASE_URL}/login`,\n                {\n                    username: user.username,\n                    password: user.password\n                },\n                { crossDomain: true }\n            )\n            .then((resp) => {\n                localStorage.setItem(\n                    \"user\",\n                    JSON.stringify({\n                        user: user.username,\n                        accessToken: resp.data.api_key,\n                        username: resp.data.logged_user.username,\n                        name: resp.data.logged_user.name,\n                        email: resp.data.logged_user.email\n                    })\n                );\n\n                authoreizeAxios();\n\n                return {\n                    user: user.username,\n                    accessToken: resp.data.api_key\n                };\n            });\n    },\n\n    logout() {\n        localStorage.removeItem(\"user\");\n    },\n\n    register(user) {\n        return axios.post(BASE_URL + \"signup\", {\n            username: user.username,\n            email: user.email,\n            password: user.password\n        });\n    }\n};\n","import axios from \"axios\";\n\nexport async function getBornOptions() {\n    const { data } = await axios.get(\n        \"http://tablet.nlf.clinic:3280/wsl-cycles/born-options\"\n    );\n    return data;\n}\n","import * as utilService from \"@/service/utils\";\n\nconst state = () => ({\n    born: null,\n    complications: null,\n    treatmentOutcome: null,\n    typeOfPregnancy: null,\n    chorionicity: null,\n    electiveFetalReduction: null,\n    pregnancyBirthOutcome: null,\n    priorBirths: null,\n    priorFreshCyclesStarted: null,\n    priorETsOwnOocytes: null,\n    priorETsDonorOocytes: null,\n    typeOfFunding: null,\n    reasonsForTreatmentCycle: null,\n    reasonsForMaleFactor: null,\n    typeOfStimulationProtocol: null,\n    medicationForCOS: null,\n    triggerMedication: null,\n    reasonCancelled: null,\n    oocyteOrigin: null,\n    donorProviderstatus: null,\n    oocyteCryoMethod: null,\n    spermOrigin: null,\n    spermDonorStatus: null,\n    spermSource: null,\n    inseminationMethod: null,\n    reasonsForNoUse: null,\n    embryoStageFreezing: null,\n    reasonEmbryoCryopreservation: null,\n    embryoFreshCryoMethod: null,\n    embryoStageThawing: null,\n    reasonsNoET: null,\n    preparationUterineLining: null,\n    assistedZonaHatching: null,\n    sourceTransferredEmbryos: null,\n    transferInseminationMethod: null,\n    charTransferredEmbryo: null,\n    numberThaws: null,\n    sitePGTembryo: null\n});\n\nconst actions = {\n    async getBornOptions({ state, commit }) {\n        try {\n            const data = await utilService.getBornOptions();\n            commit(\"SET_BORN_OPTIONS\", data);\n            state.born = data;\n        } catch (err) {\n            console.log(\"born store\");\n        }\n    }\n};\n\nconst mutations = {\n    SET_BORN_OPTIONS(state, data) {\n        state.complications = data.complications;\n        state.treatmentOutcome = data.treatmentOutcome;\n        state.typeOfPregnancy = data.typeOfPregnancy;\n        state.chorionicity = data.chorionicity;\n        state.electiveFetalReduction = data.electiveFetalReduction;\n        state.pregnancyBirthOutcome = data.pregnancyBirthOutcome;\n        state.priorBirths = data.priorBirths;\n        state.priorFreshCyclesStarted = data.priorFreshCyclesStarted;\n        state.priorETsOwnOocytes = data.priorETsOwnOocytes;\n        state.priorETsDonorOocytes = data.priorETsDonorOocytes;\n        state.typeOfFunding = data.typeOfFunding;\n        state.reasonsForTreatmentCycle = data.reasonsForTreatmentCycle;\n        state.reasonsForMaleFactor = data.reasonsForMaleFactor;\n        state.typeOfStimulationProtocol = data.typeOfStimulationProtocol;\n        state.medicationForCOS = data.medicationForCOS;\n        state.triggerMedication = data.triggerMedication;\n        state.reasonCancelled = data.reasonCancelled;\n        state.oocyteOrigin = data.oocyteOrigin;\n        state.donorProviderstatus = data.donorProviderstatus;\n        state.oocyteCryoMethod = data.oocyteCryoMethod;\n        state.spermOrigin = data.spermOrigin;\n        state.spermDonorStatus = data.spermDonorStatus;\n        state.spermSource = data.spermSource;\n        state.inseminationMethod = data.inseminationMethod;\n        state.reasonsForNoUse = data.reasonsForNoUse;\n        state.embryoStageFreezing = data.embryoStageFreezing;\n        state.reasonEmbryoCryopreservation = data.reasonEmbryoCryopreservation;\n        state.embryoFreshCryoMethod = data.embryoFreshCryoMethod;\n        state.embryoStageThawing = data.embryoStageThawing;\n        state.reasonsNoET = data.reasonsNoET;\n        state.preparationUterineLining = data.preparationUterineLining;\n        state.assistedZonaHatching = data.assistedZonaHatching;\n        state.sourceTransferredEmbryos = data.sourceTransferredEmbryos;\n        state.transferInseminationMethod = data.transferInseminationMethod;\n        state.charTransferredEmbryo = data.charTransferredEmbryo;\n        state.numberThaws = data.numberThaws;\n        state.sitePGTembryo = data.sitePGTembryo;\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    actions,\n    mutations\n};\n","import * as artCycleService from \"@/service/art-cycle\";\nimport { emitter } from \"@/event-bus\";\nimport format from \"date-fns/format\";\nimport { DATE_FORMAT_STRING } from \"@/config\";\n\nconst CYCYLE_SUMMARY_KEY = \"CYCYLE_SUMMARY\";\nconst PATIENT_KEY = \"PATIENT\";\nconst SELECTED_CYCLE_KEY = \"SELECTED_CYCLE\";\nconst CYCLE_TYPE_OPTIONS_KEY = \"CYCLE_TYPE_OPTIONS\";\n\nconst state = () => {\n    const patient = localStorage.getItem(PATIENT_KEY)\n        ? JSON.parse(localStorage.getItem(PATIENT_KEY))\n        : null;\n\n    const cyclesSummary = localStorage.getItem(CYCYLE_SUMMARY_KEY)\n        ? JSON.parse(localStorage.getItem(CYCYLE_SUMMARY_KEY))\n        : [localStorage.getItem(CYCYLE_SUMMARY_KEY)];\n\n    const selectedCycle = localStorage.getItem(SELECTED_CYCLE_KEY)\n        ? JSON.parse(localStorage.getItem(SELECTED_CYCLE_KEY))\n        : null;\n\n    const cycleTypeOptions = localStorage.getItem(CYCLE_TYPE_OPTIONS_KEY)\n        ? JSON.parse(localStorage.getItem(CYCLE_TYPE_OPTIONS_KEY))\n        : null;\n\n    return {\n        cyclesSummary: cyclesSummary,\n        patient: patient,\n        partner: null,\n        cycleTypes: null,\n        selectedCycle: selectedCycle,\n        selectedCycleNo: null,\n        cycleTypeOptions: cycleTypeOptions,\n        spermSourceOptions: null,\n        eggSourceOptions: null\n    };\n};\n\nconst mutations = {\n    SET_SELECTED_CYCLE(state, payload) {\n        state.selectedCycle = payload;\n        localStorage.setItem(\n            SELECTED_CYCLE_KEY,\n            JSON.stringify({ ...payload })\n        );\n    },\n    SET_SELECTED_CYCLE_TO_FIRST(state) {\n        let index = state.cyclesSummary.findIndex(\n            (item) => item.cycleNo == state.cyclesSummary.length\n        );\n        state.selectedCycle = state.cyclesSummary[index];\n    },\n    SET_BORN_CYCLE(state, { cycleId, bornCycleId }) {\n        let index = state.cyclesSummary.findIndex(\n            (item) => item.cycleId == cycleId\n        );\n        state.cyclesSummary[index].bornCycleId = bornCycleId;\n    }\n};\n\nconst getters = {\n    getSelectedCycle: ({ cyclesSummary, selectedCycleNo }) => {\n        let index = cyclesSummary.findIndex(\n            (item) => item.cycleNo === selectedCycleNo\n        );\n        if (index != -1) {\n            return cyclesSummary[index];\n        } else {\n            return null;\n        }\n    },\n    isBornCycle({ selectedCycle }) {\n        if (selectedCycle) {\n            return !!selectedCycle.bornCycleId;\n        } else {\n            return false;\n        }\n    },\n    isCreateBornCycle({ selectedCycle }) {\n        if (selectedCycle) {\n            return (\n                selectedCycle.isBornCycle && selectedCycle.bornCycleId == null\n            );\n        } else {\n            return false;\n        }\n    },\n    getSelectedCycleAndPatientId(state) {\n        if (state.selectedCycle) {\n            return {\n                patientId: state.selectedCycle.patientId,\n                cycleId: state.selectedCycle.cycleId\n            };\n        } else {\n            return {\n                patientId: null,\n                cycleId: null\n            };\n        }\n    },\n    isIVFCycle({ selectedCycle }) {\n        return selectedCycle?.cycleType === \"IVF\";\n    },\n    isFETCycle({ selectedCycle }) {\n        return selectedCycle?.cycleType === \"FET\";\n    }\n};\n\nconst actions = {\n    async getCyclesDetails({ state }, demographicNo) {\n        try {\n            const {\n                petientDetails,\n                partnerDetails,\n                cyclesSummery,\n                cycleTypes\n            } = await artCycleService.getCycleSummaryDetail(demographicNo);\n\n            state.cyclesSummary = cyclesSummery.map((item) => ({\n                ...item,\n                eggDonor: item.eggDoner\n            }));\n            state.patient = petientDetails;\n            state.partner = partnerDetails;\n            state.cycleTypeOptions = cycleTypes;\n\n            localStorage.setItem(\n                PATIENT_KEY,\n                JSON.stringify({ ...state.patient })\n            );\n            localStorage.setItem(\n                CYCYLE_SUMMARY_KEY,\n                JSON.stringify([...state.cyclesSummary])\n            );\n            localStorage.setItem(\n                CYCLE_TYPE_OPTIONS_KEY,\n                JSON.stringify([...state.cycleTypeOptions])\n            );\n\n            if (cyclesSummery.length > 0) {\n                // emitter.emit(\"artCycleStore:detail-loaded\", cyclesSummery);\n                state.selectedCycle = cyclesSummery[0];\n                localStorage.setItem(\n                    SELECTED_CYCLE_KEY,\n                    JSON.stringify(cyclesSummery[0])\n                );\n            }\n\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    updateSelectedCycle({ state }, cycle) {\n        state.selectedCycle = cycle;\n    },\n    async updateCycle({ state }, cycle) {\n        try {\n            const data = await artCycleService.updateCycle(cycle);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    nextCycle({ state, commit }) {\n        let index = state.cyclesSummary.findIndex(\n            (item) => item.cycleNo === state.selectedCycle.cycleNo + 1\n        );\n        if (index != -1) {\n            commit(\"SET_SELECTED_CYCLE\", state.cyclesSummary[index]);\n        }\n    },\n    previsouCycle({ state, commit }) {\n        let index = state.cyclesSummary.findIndex(\n            (item) => item.cycleNo === state.selectedCycle.cycleNo - 1\n        );\n        if (index != -1) {\n            commit(\"SET_SELECTED_CYCLE\", state.cyclesSummary[index]);\n        }\n    },\n    async getCycleFormFieldOptions({ state }) {\n        if (\n            !state.cycleTypeOptions ||\n            !state.spermSourceOptions ||\n            !state.eggSourceOptions\n        ) {\n            const {\n                spermSources,\n                eggSource\n            } = await artCycleService.getFormFieldOptions();\n\n            state.spermSourceOptions = spermSources;\n            state.eggSourceOptions = eggSource;\n        }\n    },\n    async createNewCycle({ state }) {\n        const newCycle = {\n            patientId: state.patient.id,\n            cycleNo: state.cyclesSummary.length + 1,\n            cycleType: \"IVF\",\n            cycleNoType: 1,\n            spermSource: \"Parnter\",\n            eggSource: \"Own\",\n            cycleDate: format(new Date(), DATE_FORMAT_STRING),\n            cycleSucceeded: true,\n            cycleExpired: false,\n            eggDonor: true\n        };\n\n        try {\n            const { data } = await artCycleService.createNewCycle(newCycle);\n            const cycle = { ...newCycle, ...data };\n            state.cyclesSummary.push(cycle);\n            state.selectedCycle = cycle;\n            if (data) {\n                return Promise.resolve();\n            }\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async deleteCycle({ state, commit }, cycelId) {\n        try {\n            const {\n                data: { data }\n            } = await artCycleService.deleteCycle(cycelId);\n\n            if (data) {\n                let index = state.cyclesSummary.findIndex(\n                    (item) => item.cycleId === data.cycleId\n                );\n                state.cyclesSummary.splice(index);\n                commit(\"SET_SELECTED_CYCLE_TO_FIRST\");\n                return Promise.resolve();\n            }\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async createNewBornCycle({ commit }, born) {\n        try {\n            const data = await artCycleService.craetNewBorn(born);\n            return Promise.resolve(data);\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async mergeCycle({ state }, payload) {\n        try {\n            const data = await artCycleService.mergeCycle(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getCouplesReport({ state }) {\n        try {\n            const { reslult } = await artCycleService.getCouplesReport(\n                state.patient.id\n            );\n            return reslult;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nconst CYCLE_MONITORING_DETAIL_ENDPOINT = \"cycle/monitoring-details\";\nconst DRUG_1_OPTIONS_ENDPOINT = \"monitor/drug1-list\";\nconst DRUG_2_OPTIONS_ENDPOINT = \"monitor/drug2-list\";\nconst PROTOCOL_OPTIONS_ENDPOINT = \"monitor/protocol-list\";\nconst DIAGNOSIS_OPTIONS_ENDPOINT = \"monitor/diagnosis-list\";\nconst CREATE_NEW_MONITOR_LINE_ENDPOINT = \"monitor/create-line\";\nconst UPDATE_MONITOR_LINE_ENDPOINT = \"monitor/update-line\";\nconst UPDATE_COMMMENT_ENDPIONT = \"monitor/save-signed-comment\";\nconst SAVE_MONITORING_SUMMARY_ENDPOINT = \"monitor/save-summary\";\n\nexport async function getCycleMonitoringDetails(cycleId) {\n    const { data } = await $axios.get(CYCLE_MONITORING_DETAIL_ENDPOINT, {\n        params: {\n            cycleId\n        }\n    });\n\n    return data;\n}\n\nexport async function getDaignosisOptions() {\n    const {\n        data: { diagnosis }\n    } = await $axios.get(DIAGNOSIS_OPTIONS_ENDPOINT);\n    return diagnosis;\n}\n\nexport async function getProtocolOptions() {\n    const {\n        data: { protocols }\n    } = await $axios.get(PROTOCOL_OPTIONS_ENDPOINT);\n    return protocols;\n}\n\nexport async function getDrug1Options() {\n    const {\n        data: { drugs1 }\n    } = await $axios.get(DRUG_1_OPTIONS_ENDPOINT);\n    return drugs1;\n}\n\nexport async function getDrug2Options() {\n    const {\n        data: { drugs2 }\n    } = await $axios.get(DRUG_2_OPTIONS_ENDPOINT);\n    return drugs2;\n}\n\nexport async function createMonitorLine(formData) {\n    return await $axios.post(CREATE_NEW_MONITOR_LINE_ENDPOINT, formData);\n}\n\nexport async function updateMonitorLine(formData) {\n    return await $axios.post(UPDATE_MONITOR_LINE_ENDPOINT, formData);\n}\n\nexport async function updateComment(formData) {\n    return await $axios.post(UPDATE_COMMMENT_ENDPIONT, formData);\n}\n\nexport async function saveMonitoringSummary(formData) {\n    return await $axios.post(SAVE_MONITORING_SUMMARY_ENDPOINT, formData);\n}\n","import * as monitoringService from \"@/service/cycle-monitoring\";\n\nconst state = () => ({\n    diagnosisOptions: null,\n    protocolOptions: null,\n    drugs1Options: null,\n    drugs2Options: null,\n    details: null,\n    lines: null,\n    comments: null,\n    selectedMonitorLine: null,\n    bloodTests: {\n        fsh: null,\n        tsh: null,\n        prl: null,\n        bhcg: null,\n        testo: null,\n        dheas: null,\n        amh: null\n    },\n    selectedComment: null\n});\n\nconst mutations = {\n    SET_SELECTED_MONITOR_LINE(state, payload) {\n        state.selectedMonitorLine = payload;\n    },\n    SET_SELECTED_COMMMENT(state, payload) {\n        state.selectedComment = payload;\n    }\n};\n\nconst actions = {\n    async getCycleMonitoringDetails({ state }, cycleId) {\n        try {\n            const {\n                monitorDetails,\n                monitorLines,\n                monitorLineComments,\n                bloodTests\n            } = await monitoringService.getCycleMonitoringDetails(cycleId);\n\n            state.details = monitorDetails;\n            state.lines = monitorLines;\n            state.comments = monitorLineComments;\n            state.bloodTests = bloodTests;\n            state.selectedMonitorLine = null;\n            state.selectedComment = null;\n\n            if (monitorDetails) {\n                Promise.resolve();\n            }\n        } catch (error) {\n            Promise.reject();\n        }\n    },\n    async getFormFieldOptions({ state }) {\n        if (!state.diagnosisOptions) {\n            const diagnosis = await monitoringService.getDaignosisOptions();\n            state.diagnosisOptions = diagnosis;\n        }\n\n        if (!state.protocolOptions) {\n            const protocols = await monitoringService.getProtocolOptions();\n            state.protocolOptions = protocols;\n        }\n\n        if (!state.drugs1Options) {\n            const drugs1 = await monitoringService.getDrug1Options();\n            state.drugs1Options = drugs1;\n        }\n\n        if (!state.drugs2Options) {\n            const drugs2 = await monitoringService.getDrug2Options();\n            state.drugs2Options = drugs2;\n        }\n    },\n    async createMonitorLine({ state }, formData) {\n        try {\n            const data = await monitoringService.createMonitorLine({\n                ...formData,\n                curUser: \"lena\"\n            });\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async editMonitorLine({ state }, formData) {\n        try {\n            const data = await monitoringService.updateMonitorLine({\n                ...formData,\n                curUser: \"lena\"\n            });\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async updateComment({ state }) {\n        try {\n            const data = await monitoringService.updateComment({\n                ...state.selectedComment,\n                curUser: \"lena\"\n            });\n\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async saveMonitoringSummary({ state }, formData) {\n        try {\n            const { data } = await monitoringService.saveMonitoringSummary(\n                formData\n            );\n            return data;\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions\n};\n","import { $axios } from \"@/service/app-http\";\n\nconst OPU_ENDPOINT = \"opu/by-cycle-id\";\nconst SAVE_OPU_ENDPOINT = \"opu/save-opu\";\n\nexport async function getOPUSummary(cycleId) {\n    const {\n        data: { data }\n    } = await $axios.get(OPU_ENDPOINT, {\n        params: { cycleId }\n    });\n    return data;\n}\n\nexport async function saveOpuSummary(formData) {\n    const { data } = await $axios.post(SAVE_OPU_ENDPOINT, formData);\n    return data;\n}\n","import * as opuService from \"@/service/opu\";\n\nconst formatToLineObject = (lineStr) => {\n    if (!lineStr || lineStr == \"\") {\n        lineStr = \"~~|~~|~~|~~|~~|~~|~~\";\n    }\n\n    return lineStr\n        .split(\"|\")\n        .map((item) => item.split(\"~\"))\n        .map((item, index) => {\n            let obj = {};\n            obj[`dose${index + 1}`] = item[0];\n            obj[`time${index + 1}`] = item[1];\n            obj[`initial${index + 1}`] = item[2];\n            return obj;\n        })\n        .reduce((acc, item) => {\n            return Object.assign(acc, item);\n        }, {});\n};\n\nconst timeLineFormatter = (lineStr) => {\n    if (!lineStr || lineStr == \"\") {\n        lineStr = \"~|~|~|~|~|~|~|~|~|~|~|~|~|~|~|~|~\";\n    }\n\n    return lineStr\n        .split(\"|\")\n        .map((item) => item.split(\"~\"))\n        .map((item, index) => {\n            let obj = {};\n            obj[`timeInit${index + 1}`] = {\n                part1: item[0],\n                part2: item[1]\n            };\n            return obj;\n        })\n        .reduce((acc, item) => {\n            return Object.assign(acc, item);\n        }, {});\n};\n\nconst bpLineFormatter = (lineStr) => {\n    if (!lineStr || lineStr == \"\") {\n        lineStr = \"||||||||||||||||\";\n    }\n\n    return lineStr\n        .split(\"|\")\n        .map((item, index) => {\n            let obj = {};\n            obj[`timeInit${index + 1}`] = item;\n            return obj;\n        })\n        .reduce((acc, item) => {\n            return Object.assign(acc, item);\n        }, {});\n};\n\nconst o2LineFormatter = (lineStr) => {\n    if (!lineStr || lineStr == \"\") {\n        lineStr = \"||||||||||||||||\";\n    }\n    return lineStr\n        .split(\"|\")\n        .map((item, index) => {\n            let obj = {};\n            obj[`timeInit${index + 1}`] = item;\n            return obj;\n        })\n        .reduce((acc, item) => {\n            return Object.assign(acc, item);\n        }, {});\n};\n\nconst state = () => ({\n    opuId: null,\n    cycleId: null,\n    patientId: null,\n    docDate: null,\n    md: null,\n    ivStart: null,\n    ativanLine: null,\n    versedLine: null,\n    fentanylLine: null,\n    narcanLine: null,\n    atropineLine: null,\n    gravolLine: null,\n    xylocaineLine: null,\n    other1Line: null,\n    other2Line: null,\n    other3Line: null,\n    other4Line: null,\n    other5Line: null,\n    other6Line: null,\n    other1Name: null,\n    other2Name: null,\n    other3Name: null,\n    other4Name: null,\n    other5Name: null,\n    other6Name: null,\n    preTimeLine: null,\n    preBPLine: null,\n    preO2Line: null,\n    postTimeLine: null,\n    postBPLine: null,\n    postO2Line: null,\n    prePulseLine: null,\n    postPulseLine: null,\n    o2: null,\n    o2via: null,\n    comment: null,\n    eggsNum: null,\n    recovery: null,\n    bpSummary: null,\n    pulseSummary: null,\n    upToVoid: false,\n    fluidsPo: false,\n    cramps: false,\n    bleeding: false,\n    nausea: false,\n    discharged: false,\n    accompanied: false,\n    rnRpn: null,\n    mdSummary: null,\n    ivDisconnect: null,\n    fluidGiven: null\n});\n\nconst getters = {\n    getDrugChart(state) {\n        return [\n            { name: \"Ativan\", key: \"ativanLine\", ...state.ativanLine },\n            { name: \"Versed\", key: \"versedLine\", ...state.versedLine },\n            { name: \"Fentanyl\", key: \"fentanylLine\", ...state.fentanylLine },\n            { name: \"Narcan\", key: \"narcanLine\", ...state.narcanLine },\n            { name: \"Atropine\", key: \"atropineLine\", ...state.atropineLine },\n            { name: \"Gravol\", key: \"gravolLine\", ...state.gravolLine },\n            { name: \"Xylocaine\", key: \"xylocaineLine\", ...state.xylocaineLine },\n            { name: \"\", key: \"other1Line\", ...state.other1Line },\n            { name: \"\", key: \"other2Line\", ...state.other2Line },\n            { name: \"\", key: \"other3Line\", ...state.other3Line },\n            { name: \"\", key: \"other4Line\", ...state.other4Line },\n            { name: \"\", key: \"other5Line\", ...state.other5Line },\n            { name: \"\", key: \"other6Line\", ...state.other6Line }\n        ];\n    },\n    getPrePatientChart(state) {\n        return [\n            {\n                name: \"Time\",\n                key: \"preTimeLine\",\n                ...state.preTimeLine,\n                commnet: null\n            },\n            {\n                name: \"Bp\",\n                key: \"preBpLine\",\n                ...state.preBPLine,\n                commnet: null\n            },\n            {\n                name: \"Pulse\",\n                key: \"prePulseLine\",\n                ...state.prePulseLine,\n                commnet: null\n            },\n            {\n                name: \"O2\",\n                key: \"preO2Line\",\n                ...state.preO2Line,\n                commnet: null\n            }\n        ];\n    },\n    getPostPatientChart(state) {\n        return [\n            {\n                name: \"Time\",\n                key: \"postTimeLine\",\n                ...state.postTimeLine,\n                commnet: null\n            },\n            {\n                name: \"Bp\",\n                key: \"postBpLine\",\n                ...state.postBPLine,\n                commnet: null\n            },\n            {\n                name: \"Pulse\",\n                key: \"postPulseLine\",\n                ...state.postPulseLine,\n                commnet: null\n            },\n            {\n                name: \"O2\",\n                key: \"postO2Line\",\n                ...state.postO2Line,\n                commnet: null\n            }\n        ];\n    },\n    getBottomForm(state) {\n        return {\n            upToVoid: state.upToVoid,\n            fluidsPo: state.fluidsPo,\n            cramps: state.cramps,\n            bleeding: state.bleeding,\n            nausea: state.nausea,\n            discharged: state.discharged,\n            accompanied: state.accompanied,\n            rnRpn: state.rnRpn,\n            mdSummary: state.mdSummary,\n            ivDisconnect: state.ivDisconnect,\n            fluidGiven: state.fluidGiven\n        };\n    },\n    getMiddleForm(state) {\n        return {\n            o2: state.o2,\n            o2via: state.o2via,\n            comment: state.comment,\n            eggsNum: state.eggsNum,\n            recovery: state.recovery,\n            bpSummary: state.bpSummary,\n            pulseSummary: state.pulseSummary\n        };\n    },\n    getTopForm(state) {\n        return {\n            docDate: state.docDate,\n            ivStart: state.ivStart,\n            md: state.md,\n            by: null,\n            patientId: state.patientId,\n            cycleId: state.cycleId,\n            opuId: state.opuId\n        };\n    }\n};\n\nconst actions = {\n    async getOPUSummary({ state, commit, rootState }, _cycleId) {\n        try {\n            const data = await opuService.getOPUSummary(_cycleId);\n\n            commit(\"SET_OPU\", {\n                ...data,\n                preBPLine: data.preBpLine,\n                postBPLine: data.postBpLine,\n                prePulseLine: data.prePLine,\n                postPulseLine: data.postPLine\n            });\n\n            return Promise.resolve();\n        } catch (error) {\n            commit(\"SET_NEW_OPU\", {\n                cycleId: rootState.artCycle.selectedCycle.cycleId,\n                patientId: rootState.artCycle.patient.id\n            });\n            return Promise.reject();\n        }\n    },\n\n    async saveSummary({ commit }, formData) {\n        try {\n            const data = await opuService.saveOpuSummary({\n                ...formData,\n                mdSummary: formData.md,\n                rnRpn: formData.rnRna,\n                preBpLine: formData.preBPLine,\n                postBpLine: formData.postBPLine,\n                prePLine: formData.prePulseLine,\n                postPLine: formData.postPulseLine\n            });\n            return data;\n        } catch (error) {\n            return Promise.reject();\n        }\n    }\n};\n\nconst mutations = {\n    SET_NEW_OPU(state, { cycleId, patientId }) {\n        state.upToVoid = null;\n        state.fluidsPo = null;\n        state.cramps = null;\n        state.bleeding = null;\n        state.nausea = null;\n        state.discharged = null;\n        state.accompanied = null;\n        state.rnRpn = null;\n        state.mdSummary = null;\n        state.ivDisconnect = null;\n        state.fluidGiven = null;\n        state.o2 = null;\n        state.o2via = null;\n        state.comment = null;\n        state.eggsNum = null;\n        state.recovery = null;\n        state.bpSummary = null;\n        state.pulseSummary = null;\n        state.opuId = 0;\n        state.docDate = null;\n        state.cycleId = cycleId;\n        state.patientId = patientId;\n        state.ativanLine = formatToLineObject(null);\n        state.versedLine = formatToLineObject(null);\n        state.fentanylLine = formatToLineObject(null);\n        state.narcanLine = formatToLineObject(null);\n        state.atropineLine = formatToLineObject(null);\n        state.gravolLine = formatToLineObject(null);\n        state.xylocaineLine = formatToLineObject(null);\n        state.other1Line = formatToLineObject(null);\n        state.other2Line = formatToLineObject(null);\n        state.other3Line = formatToLineObject(null);\n        state.other4Line = formatToLineObject(null);\n        state.other5Line = formatToLineObject(null);\n        state.other6Line = formatToLineObject(null);\n        state.preTimeLine = timeLineFormatter(null);\n        state.postTimeLine = timeLineFormatter(null);\n        state.postBPLine = bpLineFormatter(null);\n        state.preBPLine = bpLineFormatter(null);\n        state.preO2Line = o2LineFormatter(null);\n        state.postO2Line = o2LineFormatter(null);\n        state.postPulseLine = o2LineFormatter(null);\n        state.prePulseLine = o2LineFormatter(null);\n    },\n    SET_OPU(\n        state,\n        {\n            opuId,\n            cycleId,\n            patientId,\n            docDate,\n            md,\n            ivStart,\n            ativanLine,\n            versedLine,\n            fentanylLine,\n            narcanLine,\n            atropineLine,\n            gravolLine,\n            xylocaineLine,\n            other1Line,\n            other2Line,\n            other3Line,\n            other4Line,\n            other5Line,\n            other6Line,\n            other1Name,\n            other2Name,\n            other3Name,\n            other4Name,\n            other5Name,\n            other6Name,\n            preTimeLine,\n            preBPLine,\n            preO2Line,\n            postTimeLine,\n            postBPLine,\n            postO2Line,\n            prePulseLine,\n            postPulseLine,\n            upToVoid,\n            fluidsPo,\n            cramps,\n            bleeding,\n            nausea,\n            discharged,\n            accompanied,\n            rnRpn,\n            mdSummary,\n            ivDisconnect,\n            fluidGiven,\n            o2,\n            o2via,\n            comment,\n            eggsNum,\n            recovery,\n            bpSummary,\n            pulseSummary\n        }\n    ) {\n        state.opuId = opuId;\n        state.cycleId = cycleId;\n        state.patientId = patientId;\n        state.docDate = docDate;\n        state.md = md;\n        state.ivStart = ivStart;\n        state.ativanLine = formatToLineObject(ativanLine);\n        state.versedLine = formatToLineObject(versedLine);\n        state.fentanylLine = formatToLineObject(fentanylLine);\n        state.narcanLine = formatToLineObject(narcanLine);\n        state.atropineLine = formatToLineObject(atropineLine);\n        state.gravolLine = formatToLineObject(gravolLine);\n        state.xylocaineLine = formatToLineObject(xylocaineLine);\n        state.other1Line = formatToLineObject(other1Line);\n        state.other2Line = formatToLineObject(other2Line);\n        state.other3Line = formatToLineObject(other3Line);\n        state.other4Line = formatToLineObject(other4Line);\n        state.other5Line = formatToLineObject(other5Line);\n        state.other6Line = formatToLineObject(other6Line);\n        state.preTimeLine = timeLineFormatter(preTimeLine);\n        state.postTimeLine = timeLineFormatter(postTimeLine);\n        state.postBPLine = bpLineFormatter(postBPLine);\n        state.preBPLine = bpLineFormatter(preBPLine);\n        state.preO2Line = o2LineFormatter(preO2Line);\n        state.postO2Line = o2LineFormatter(postO2Line);\n        state.postPulseLine = o2LineFormatter(postPulseLine);\n        state.prePulseLine = o2LineFormatter(prePulseLine);\n        state.upToVoid = upToVoid == 1 ? true : false;\n        state.fluidsPo = fluidsPo == 1 ? true : false;\n        state.cramps = cramps == 1 ? true : false;\n        state.bleeding = bleeding == 1 ? true : false;\n        state.nausea = nausea == 1 ? true : false;\n        state.discharged = discharged == 1 ? true : false;\n        state.accompanied = accompanied == 1 ? true : false;\n        state.rnRpn = rnRpn;\n        state.mdSummary = mdSummary;\n        state.ivDisconnect = ivDisconnect;\n        state.fluidGiven = fluidGiven;\n        state.o2 = o2;\n        state.o2via = o2via;\n        state.comment = comment;\n        state.eggsNum = eggsNum;\n        state.recovery = recovery;\n        state.bpSummary = bpSummary;\n        state.pulseSummary = pulseSummary;\n        state.other1Name = other1Name;\n        state.other2Name = other2Name;\n        state.other3Name = other3Name;\n        state.other4Name = other4Name;\n        state.other5Name = other5Name;\n        state.other6Name = other6Name;\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nconst SEMEN_LIST_ENDPOINT = \"semen/list\";\nconst SEMEN_UPDATE_ENDPOINT = \"semen/update-semen\";\nconst SEMEN_CREATE_ENDPOINT = \"semen/create-semen\";\nconst SEMEN_DELETE_ENDPOINT = \"semen/delete-semen\";\n\nexport async function getSemenList(patientId) {\n    const { data } = await $axios.get(SEMEN_LIST_ENDPOINT, {\n        params: { patientId }\n    });\n\n    return data;\n}\n\nexport async function updateSemen(semen) {\n    const { data } = await $axios.post(SEMEN_UPDATE_ENDPOINT, semen);\n    return data;\n}\n\nexport async function createSemen(semen) {\n    const { data } = await $axios.post(SEMEN_CREATE_ENDPOINT, semen);\n    return data;\n}\n\nexport async function delteSemen(semen) {\n    const { data } = await $axios.post(SEMEN_DELETE_ENDPOINT, semen);\n    return data;\n}\n","import * as semenService from \"@/service/semen\";\n\nconst state = () => ({\n    semenList: null,\n    selectedSemen: null\n});\n\nconst actions = {\n    async getSemenList({ commit }, patientId) {\n        try {\n            const { semenList } = await semenService.getSemenList(patientId);\n            commit(\"SET_SEMEN_LIST\", semenList);\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error.response.data);\n        }\n    },\n    async updateSemen({ state }, semen) {\n        try {\n            const data = await semenService.updateSemen(semen);\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async createSemen({ state }, semen) {\n        try {\n            const data = await semenService.createSemen(semen);\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    },\n    async deleteSemen({ state }, semen) {\n        try {\n            const data = await semenService.delteSemen(semen);\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n};\n\nconst mutations = {\n    SET_SEMEN_LIST(state, list) {\n        state.semenList = list;\n    },\n    SET_SELECTED_SEMEN(state, semen) {\n        state.selectedSemen = semen;\n    }\n};\n\nconst getters = {\n    getPatient: (state, getters, rootState) => {\n        let person = rootState.artCycle.patient;\n        return person\n            ? {\n                  id: person.id,\n                  name: `${person.firstName} ${person.lastName}`,\n                  dateOfBirth: `${person.year}-${person.month}-${person.day}`\n              }\n            : { id: null, name: null, dateOfBirth: null };\n    },\n    getPartner: (state, getters, rootState) => {\n        let person = rootState.artCycle.partner;\n        return person\n            ? {\n                  id: person.id,\n                  name: `${person.firstName} ${person.lastName}`,\n                  dateOfBirth: `${person.year}-${person.month}-${person.day}`\n              }\n            : { id: null, name: null, dateOfBirth: null };\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nconst GET_PREGNANCY_DETAILS_EDNPOINT = \"pregnancy/get-details\";\nconst CREATE_NEW_ENDPOINT = \"pregnancy/create-pregnancy\";\nconst SAVE_PREGNANCY_ENDPOINT = \"pregnancy/save-pregnancy\";\nconst CRATE_FETUS_HISTORY_ENDPOINT = \"pregnancy/create-fetus-history\";\nconst GET_FETUS_HISTORY_ENDPOINT = \"pregnancy/get-fetus-list\";\nconst DELETE_FETUS_HISTORY_ENDPOINT = \"pregnancy/delete-fetus\";\nconst UPDATE_FETUS_HISTORY_ENPOINT = \"pregnancy/save-fetus\";\nconst GET_LIVE_BIRTH_HISTORY_ENDPOINT = \"pregnancy/get-births-list\";\nconst CREATE_LIVE_BIRTH_ENDPOINT = \"pregnancy/create-birth\";\nconst DELETE_LIVE_BIRTH_ENPOINT = \"pregnancy/delete-birth\";\nconst UPDATE_LIVE_BIRTH_ENDPOINT = \"pregnancy/edit-birth\";\n\nexport async function getPregnancyDetails(cycleId) {\n    const { data } = await $axios.get(GET_PREGNANCY_DETAILS_EDNPOINT, {\n        params: { cycleId }\n    });\n    return data;\n}\n\nexport async function createNew({ cycleId, patientId }) {\n    const { data } = await $axios.post(CREATE_NEW_ENDPOINT, {\n        cycleId,\n        patientId\n    });\n    return data;\n}\n\nexport async function savePregnancyOutcome(formData) {\n    const { data } = await $axios.post(SAVE_PREGNANCY_ENDPOINT, formData);\n    return data;\n}\n\nexport async function createNewFetusHistory(formData) {\n    const { data } = await $axios.post(CRATE_FETUS_HISTORY_ENDPOINT, formData);\n    return data;\n}\n\nexport async function getFetusHistory(pregnancyId) {\n    const {\n        data: { fetusesList }\n    } = await $axios.get(GET_FETUS_HISTORY_ENDPOINT, {\n        params: { pregnancyId }\n    });\n    return fetusesList;\n}\n\nexport async function deleteFetus(fetusHistoryId) {\n    const { data } = await $axios.post(DELETE_FETUS_HISTORY_ENDPOINT, {\n        fetusHistoryId\n    });\n    return data;\n}\n\nexport async function updateFetus(formData) {\n    const { data } = await $axios.post(UPDATE_FETUS_HISTORY_ENPOINT, formData);\n    return data;\n}\n\nexport async function getLiveBirthHisory(pregnancyId) {\n    const {\n        data: { birthsList }\n    } = await $axios.get(GET_LIVE_BIRTH_HISTORY_ENDPOINT, {\n        params: { pregnancyId }\n    });\n    return birthsList;\n}\n\nexport async function createLiveBirth(formData) {\n    const { data } = await $axios.post(CREATE_LIVE_BIRTH_ENDPOINT, formData);\n    return data;\n}\n\nexport async function deletLiveBirthHistory(liveBirthHistoryId) {\n    const { data } = await $axios.post(DELETE_LIVE_BIRTH_ENPOINT, {\n        liveBirthHistoryId\n    });\n    return data;\n}\n\nexport async function updateLiveBirth(formData) {\n    const { data } = await $axios.post(UPDATE_LIVE_BIRTH_ENDPOINT, formData);\n    return data;\n}\n","import * as pregnancyService from \"@/service/pregnancy\";\n\nconst state = () => ({\n    pregnancyDetails: null,\n    fetusHistories: null,\n    pregnancyTests: null,\n    liveBirthHisotory: null\n});\n\nconst actions = {\n    async getPregnancyDetails({ commit }, cycleId) {\n        try {\n            const data = await pregnancyService.getPregnancyDetails(cycleId);\n            commit(\"SET_PREGNANCY_DETAILS\", data);\n\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    },\n    async createNewPregnancy({ commit }, { cycleId, patientId }) {\n        try {\n            const data = await pregnancyService.createNew({\n                cycleId,\n                patientId\n            });\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    },\n    async savePregnancyOutcome({ commit }, formData) {\n        try {\n            const data = await pregnancyService.savePregnancyOutcome(formData);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async createNewFetusHistory({ dispatch, state }, formData) {\n        try {\n            const data = await pregnancyService.createNewFetusHistory(formData);\n            return dispatch(\n                \"getFetusHistory\",\n                state.pregnancyDetails.pregnancyId\n            );\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getFetusHistory({ commit }, pregnancyId) {\n        try {\n            const data = await pregnancyService.getFetusHistory(pregnancyId);\n            commit(\"SET_FETUS_HISTORIES\", data);\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async deleteFetus({ commit }, fetusHistoryId) {\n        try {\n            const data = await pregnancyService.deleteFetus(fetusHistoryId);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async updateFetus({ commit }, formData) {\n        try {\n            const data = await pregnancyService.updateFetus(formData);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getLiveBirthHistory({ commit }, pregnancyId) {\n        try {\n            const data = await pregnancyService.getLiveBirthHisory(pregnancyId);\n            commit(\"SET_LIVE_BIRTH_HISTORY\", data);\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async createLiveBirth({ dispatch, state }, formData) {\n        try {\n            const data = await pregnancyService.createLiveBirth(formData);\n            return dispatch(\n                \"getLiveBirthHistory\",\n                state.pregnancyDetails.pregnancyId\n            );\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async deletLiveBirthHistory({ commit }, liveBirthId) {\n        try {\n            const data = await pregnancyService.deletLiveBirthHistory(\n                liveBirthId\n            );\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async updateLiveBirth({ commit }, formData) {\n        try {\n            const data = await pregnancyService.updateLiveBirth(formData);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nconst getters = {};\n\nconst mutations = {\n    SET_PREGNANCY_DETAILS(\n        state,\n        { pregnancyDetails, fetusHistories, pregnancyTests, liveBirthHisotory }\n    ) {\n        state.pregnancyDetails = pregnancyDetails;\n        state.fetusHistories = fetusHistories;\n        state.pregnancyTests = pregnancyTests;\n        state.liveBirthHisotory = liveBirthHisotory;\n    },\n    SET_FETUS_HISTORIES(state, fetusHistories) {\n        state.fetusHistories = fetusHistories;\n    },\n    SET_LIVE_BIRTH_HISTORY(state, liveBirthHisotory) {\n        state.liveBirthHisotory = liveBirthHisotory;\n    },\n    UPDATE_FETUS(state, { index, data }) {\n        state.fetusHistories[index] = data;\n    },\n    CANCEL_FETUS_UPDATE(state, { index, data }) {\n        state.fetusHistories[index] = data;\n    },\n    CANCEL_LIVE_BIRTH_UPDATE(state, { index, data }) {\n        state.liveBirthHisotory[index] = data;\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    actions,\n    getters,\n    mutations\n};\n","import { $axios } from \"@/service/app-http\";\n\nconst GET_BORN_ENPOINT = \"born/get-born-data-separeted\";\nconst UPDATE_COMPLICATION_ENDPOINT = \"born/update-complications\";\nconst UPDATE_OOCYTE_COLLECTION_ENDPOINT = \"born/update-oocyte-collections\";\nconst UPDATE_OBSTETRICAL_HISTORY_ENDPOINT = \"born/update-obstetrical-history\";\nconst UPDATE_EMBRYOLOGY = \"born/update-embryology\";\n\nexport async function getBorn({ patientId, cycleId }) {\n    const { data } = await $axios.get(GET_BORN_ENPOINT, {\n        params: { patientId, cycleId }\n    });\n    return data;\n}\n\nexport async function updateComplication(payload) {\n    const { data } = await $axios.post(UPDATE_COMPLICATION_ENDPOINT, payload);\n    return data;\n}\n\nexport async function updatePregnancyOutcome(payload) {\n    const { data } = await $axios.post(\n        \"born/update-pregnancy-outcome\",\n        payload\n    );\n    return data;\n}\n\nexport async function updateOocyteCollection(payload) {\n    const { data } = await $axios.post(\n        UPDATE_OOCYTE_COLLECTION_ENDPOINT,\n        payload\n    );\n    return data;\n}\n\nexport async function updateObstetricalHistory(payload) {\n    const { data } = await $axios.post(\n        UPDATE_OBSTETRICAL_HISTORY_ENDPOINT,\n        payload\n    );\n    return data;\n}\n\nexport async function updateEmbryology(payload) {\n    const { data } = await $axios.post(UPDATE_EMBRYOLOGY, payload);\n    return data;\n}\n\nexport async function updateFreshEmbryo(payload) {\n    const { data } = await $axios.post(\"born/update-fresh-embryos\", payload);\n    return data;\n}\n\nexport async function updateFrozenEmbryo(payload) {\n    const { data } = await $axios.post(\"born/update-frozen-embryos\", payload);\n    return data;\n}\n\nexport async function updateEmbryoTransfer(payload) {\n    const { data } = await $axios.post(\"born/update-embryo-transfer\", payload);\n    return data;\n}\n\nexport async function updateObstetricalHistoryV2(payload) {\n    const { data } = await $axios.post(\n        \"born/update-obstetrical-history\",\n        payload\n    );\n    return data;\n}\n\nexport async function updateOvarian(payload) {\n    const { data } = await $axios.post(\"born/update-ovarian\", payload);\n    return data;\n}\n","import * as bornService from \"@/service/born\";\n\nconst state = () => ({\n    complications: null,\n    obstetricalHistory: null,\n    ovarian: null,\n    oocyteCollections: null,\n    pregnancyOutcome: null,\n    freshEmbryos: null,\n    frozenEmbryos: null,\n    embryoTransfer: null\n});\n\nconst actions = {\n    async getBorn({ commit }, { patientId, cycleId }) {\n        try {\n            const data = await bornService.getBorn({ patientId, cycleId });\n            commit(\"SET_BORN\", data);\n            return Promise.resolve();\n        } catch (err) {\n            commit(\"SET_EMPTY_BORN\");\n        }\n    },\n    async getBronV2(\n        { state, commit },\n        { patientId, cycleId, isBornCycle, bornCycleId }\n    ) {\n        if (!isBornCycle) {\n            return;\n        }\n        try {\n            const {\n                complications,\n                obstetricalHistory,\n                oocyteCollections,\n                pregnancyOutcome,\n                freshEmbryos,\n                frozenEmbryos,\n                embryoTransfer,\n                ovarian\n            } = await bornService.getBorn({ patientId, cycleId });\n\n            state.complications = complications;\n            state.obstetricalHistory = obstetricalHistory;\n            state.oocyteCollections = oocyteCollections;\n            state.pregnancyOutcome = pregnancyOutcome;\n            state.freshEmbryos = freshEmbryos;\n            state.frozenEmbryos = frozenEmbryos;\n            state.embryoTransfer = embryoTransfer;\n            state.ovarian = ovarian;\n        } catch (err) {\n            console.log(\"born error\");\n            commit(\"SET_EMPTY_BORN\");\n        }\n    },\n    async updateComplication({ commit }, payload) {\n        try {\n            const data = await bornService.updateComplication(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async updatePregnancyOutcome({ state }, payload) {\n        try {\n            const data = await bornService.updatePregnancyOutcome(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async updateOocyteCollection({ commit }, payload) {\n        try {\n            const data = await bornService.updateOocyteCollection(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async updateObstetricalHistory({ commit }, payload) {\n        try {\n            const data = await bornService.updateObstetricalHistory(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async updateEmbryology({ commit }, payload) {\n        try {\n            const data = await bornService.updateEmbryology(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(data);\n        }\n    },\n    async updateFreshEmbryo({ commit }, payload) {\n        try {\n            const data = await bornService.updateFreshEmbryo(payload);\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async updateFrozenEmbryo({ commit }, payload) {\n        try {\n            const data = await bornService.updateFrozenEmbryo(payload);\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async updateEmbryoTransfer({ commit }, payload) {\n        try {\n            const data = await bornService.updateEmbryoTransfer(payload);\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async updateObstetricalHistory({ commit }, payload) {\n        try {\n            const data = await bornService.updateObstetricalHistoryV2(payload);\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async updateOvarian({ commit }, payload) {\n        try {\n            const data = await bornService.updateOvarian(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nconst mutations = {\n    SET_BORN(\n        state,\n        { complications, obstetricalHistory, oocyteCollections, embryology }\n    ) {\n        state.complications = complications;\n        state.obstetricalHistory = obstetricalHistory;\n        state.oocyteCollections = oocyteCollections;\n        state.embryology = embryology;\n    },\n    SET_EMPTY_BORN(state) {\n        state.complications = null;\n        state.obstetricalHistory = null;\n        state.oocyteCollections = null;\n        state.pregnancyOutcome = null;\n        state.freshEmbryos = null;\n        state.frozenEmbryos = null;\n        state.embryoTransfer = null;\n    }\n};\n\nconst getters = {};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import * as utilService from \"@/service/utils\";\n\nconst state = () => ({\n    bornOptions: null,\n    complications: null,\n    treatmentOutcome: null,\n    typeOfPregnancy: null,\n    chorionicity: null,\n    electiveFetalReduction: null,\n    pregnancyBirthOutcome: null,\n    priorBirths: null,\n    priorFreshCyclesStarted: null,\n    priorETsOwnOocytes: null,\n    priorETsDonorOocytes: null,\n    typeOfFunding: null,\n    reasonsForTreatmentCycle: null,\n    reasonsForMaleFactor: null,\n    typeOfStimulationProtocol: null,\n    medicationForCOS: null,\n    triggerMedication: null,\n    reasonCancelled: null,\n    oocyteOrigin: null,\n    donorProviderstatus: null,\n    oocyteCryoMethod: null,\n    spermOrigin: null,\n    spermDonorStatus: null,\n    spermSource: null,\n    inseminationMethod: null,\n    reasonsForNoUse: null,\n    embryoStageFreezing: null,\n    reasonEmbryoCryopreservation: null,\n    embryoFreshCryoMethod: null,\n    embryoStageThawing: null,\n    reasonsNoET: null,\n    preparationUterineLining: null,\n    assistedZonaHatching: null,\n    sourceTransferredEmbryos: null,\n    transferInseminationMethod: null,\n    charTransferredEmbryo: null,\n    numberThaws: null,\n    sitePGTembryo: null\n});\n\nconst actions = {\n    async getBornOptions({ state }) {\n        try {\n            const data = await utilService.getBornOptions();\n            state.complications = data.complications;\n            state.treatmentOutcome = data.treatmentOutcome;\n            state.typeOfPregnancy = data.typeOfPregnancy;\n            state.chorionicity = data.chorionicity;\n            state.electiveFetalReduction = data.electiveFetalReduction;\n            state.pregnancyBirthOutcome = data.pregnancyBirthOutcome;\n            state.priorBirths = data.priorBirths;\n            state.priorFreshCyclesStarted = data.priorFreshCyclesStarted;\n            state.priorETsOwnOocytes = data.priorETsOwnOocytes;\n            state.priorETsDonorOocytes = data.priorETsDonorOocytes;\n            state.typeOfFunding = data.typeOfFunding;\n            state.reasonsForTreatmentCycle = data.reasonsForTreatmentCycle;\n            state.reasonsForMaleFactor = data.reasonsForMaleFactor;\n            state.typeOfStimulationProtocol = data.typeOfStimulationProtocol;\n            state.medicationForCOS = data.medicationForCOS;\n            state.triggerMedication = data.triggerMedication;\n            state.reasonCancelled = data.reasonCancelled;\n            state.oocyteOrigin = data.oocyteOrigin;\n            state.donorProviderstatus = data.donorProviderstatus;\n            state.oocyteCryoMethod = data.oocyteCryoMethod;\n            state.spermOrigin = data.spermOrigin;\n            state.spermDonorStatus = data.spermDonorStatus;\n            state.spermSource = data.spermSource;\n            state.inseminationMethod = data.inseminationMethod;\n            state.reasonsForNoUse = data.reasonsForNoUse;\n            state.embryoStageFreezing = data.embryoStageFreezing;\n            state.reasonEmbryoCryopreservation =\n                data.reasonEmbryoCryopreservation;\n            state.embryoFreshCryoMethod = data.embryoFreshCryoMethod;\n            state.embryoStageThawing = data.embryoStageThawing;\n            state.reasonsNoET = data.reasonsNoET;\n            state.preparationUterineLining = data.preparationUterineLining;\n            state.assistedZonaHatching = data.assistedZonaHatching;\n            state.sourceTransferredEmbryos = data.sourceTransferredEmbryos;\n            state.transferInseminationMethod = data.transferInseminationMethod;\n            state.charTransferredEmbryo = data.charTransferredEmbryo;\n            state.numberThaws = data.numberThaws;\n            state.sitePGTembryo = data.sitePGTembryo;\n        } catch (err) {\n            console.log(\"born store\")\n        }\n    }\n};\n\nconst getters = {\n    getComplicationsOptions(state) {\n        return state.complications;\n    },\n    getTreatmentOutcomeOptions(state) {\n        return state.treatmentOutcome;\n    },\n    getTypeOfPregnancyOptions(state) {\n        return state.typeOfPregnancy;\n    },\n    getChorionicityOptions(state) {\n        return state.chorionicity;\n    },\n    getElectiveFetalReductionOptions(state) {\n        return state.electiveFetalReduction;\n    },\n    getPregnancyBirthOutcomeOptions(state) {\n        return state.pregnancyBirthOutcome;\n    },\n    getPriorBirthsOptions(state) {\n        return state.priorBirths;\n    },\n    getPriorFreshCyclesStartedOptions(state) {\n        return state.priorFreshCyclesStarted;\n    },\n    getPriorETsOwnOocytesOptions(state) {\n        return state.priorETsOwnOocytes;\n    },\n    getPriorETsDonorOocytesOptions(state) {\n        return state.priorETsDonorOocytes;\n    },\n    getTypeOfFundingOptions(state) {\n        return state.typeOfFunding;\n    },\n    getReasonsForTreatmentCycleOptions(state) {\n        return state.reasonsForTreatmentCycle;\n    },\n    getReasonsForMaleFactorOptions(state) {\n        return state.reasonsForMaleFactor;\n    },\n    getTypeOfStimulationProtocolOptions(state) {\n        return state.typeOfStimulationProtocol;\n    },\n    getMedicationForCosOptions(state) {\n        return state.medicationForCOS;\n    },\n    getTriggerMedicationOptions(state) {\n        return state.triggerMedication;\n    },\n    getReasonCancelledOptions(state) {\n        return state.reasonCancelled;\n    },\n    getOocyteOriginOptions(state) {\n        return state.oocyteOrigin;\n    },\n    getDonorProviderstatusOptions(state) {\n        return state.donorProviderstatus;\n    },\n    getOocyteCryoMethodOptions(state) {\n        return state.oocyteCryoMethod;\n    },\n    getSpermOriginOptions(state) {\n        return state.spermOrigin;\n    },\n    getSpermDonorStatusOptions(state) {\n        return state.spermDonorStatus;\n    },\n    getSpermSourceOptions(state) {\n        return state.spermSource;\n    },\n    getInseminationMethodOptions(state) {\n        return state.inseminationMethod;\n    },\n    getReasonsForNoUseOptions(state) {\n        return state.reasonsForNoUse;\n    },\n    getEmbryoStageFreezingOptions(state) {\n        return state.embryoStageFreezing;\n    },\n    getReasonEmbryoCryopreservationOptions(state) {\n        return state.reasonEmbryoCryopreservation;\n    },\n    getEmbryoFreshCryoMethodOptions(state) {\n        return state.embryoFreshCryoMethod;\n    },\n    getEmbryoStageThawingOptions(state) {\n        return state.embryoStageThawing;\n    },\n    getReasonsNoEtOptions(state) {\n        return state.reasonsNoET;\n    },\n    getPreparationUterineLiningOptions(state) {\n        return state.preparationUterineLining;\n    },\n    getAssistedZonaHatchingOptions(state) {\n        return state.assistedZonaHatching;\n    },\n    getSourceTransferredEmbryosOptions(state) {\n        return state.sourceTransferredEmbryos;\n    },\n    getTransferInseminationMethodOptions(state) {\n        return state.transferInseminationMethod;\n    },\n    getCharTransferredEmbryoOptions(state) {\n        return state.charTransferredEmbryo;\n    },\n    getNumberThawsOptions(state) {\n        return state.numberThaws;\n    },\n    getSitePgTembryoOptions(state) {\n        return state.sitePGTembryo;\n    }\n};\n\nconst mutations = {};\n\nexport default {\n    namespaced: true,\n    state,\n    actions,\n    getters,\n    mutations\n};\n","import { $axios } from \"./app-http\";\n\nconst GET_PROVIDERS_ENDPOINT = \"provider/list\";\nconst GET_SEMEN_CRYO_STORAGE_ENDPOINT = \"semen-cryo-storage/get-header\";\nconst SAVE_SEMEN_CRYO_STORAGE_ENDPOINT = \"semen-cryo-storage/save-header\";\n\nexport async function getProviders() {\n    const {\n        data: { data }\n    } = await $axios.get(GET_PROVIDERS_ENDPOINT);\n    return data;\n}\n\nexport async function getSemenCryoStorage(cycleId) {\n    const {\n        data: { semenCryoStorageHeader }\n    } = await $axios.get(GET_SEMEN_CRYO_STORAGE_ENDPOINT, {\n        params: { cycleId }\n    });\n    return semenCryoStorageHeader;\n}\n\nexport async function save(payload) {\n    const { data } = await $axios.post(\n        SAVE_SEMEN_CRYO_STORAGE_ENDPOINT,\n        payload\n    );\n    return data;\n}\n\nexport async function deleteSemenCryoStorage(ecId) {\n    const { data } = await $axios.post(\"semen-cryo-storage/delete-header\", {\n        ecId\n    });\n    return data;\n}\n","import * as semenCryoStorageService from \"@/service/semen-cryo-storage\";\n\nconst state = () => ({\n    providers: null,\n    semenCryoStorage: null\n});\n\nconst actions = {\n    async getProviders({ state, commit }) {\n        try {\n            if (!state.providers) {\n                const data = await semenCryoStorageService.getProviders();\n                commit(\"SET_PROVIDERS\", data);\n                return data;\n            }\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getSemenCryoStorage({ commit }, cycleId) {\n        try {\n            const data = await semenCryoStorageService.getSemenCryoStorage(\n                cycleId\n            );\n            commit(\"SET_SEMEN_CYRO_STORAGE\", data);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async saveSemenCryoStorage({ commit }, payload) {\n        try {\n            const data = semenCryoStorageService.save(payload);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async deleteSemenCryoStorage({ commit }, id) {\n        try {\n            const data = semenCryoStorageService.deleteSemenCryoStorage(id);\n            commit(\"SET_SEMEN_CYRO_STORAGE\", null);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    }\n};\n\nconst mutations = {\n    SET_SEMEN_CYRO_STORAGE(state, semenCryoStorage) {\n        state.semenCryoStorage = semenCryoStorage;\n    },\n    SET_PROVIDERS(state, providers) {\n        state.providers = providers;\n    }\n};\n\nconst getters = {};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nexport async function getAllCycleType() {\n    const {\n        data: { allCycleTypes }\n    } = await $axios.get(\"cycle-report/get-all-cycle-types\");\n    return allCycleTypes;\n}\n\nexport async function getCycleRport(payload) {\n    const {\n        data: { cycleRecords }\n    } = await $axios.post(\"cycle-report/get-cycle-records\", {\n        ...payload\n    });\n    return cycleRecords;\n}\n\nexport async function getLocationOption() {\n    const {\n        data: { data }\n    } = await $axios.get(\"provider/site-list\");\n    return data;\n}\n\nexport async function getCycleReportExcel(payload) {\n    const {\n        data: { cycleRecords }\n    } = await $axios.post(\"cycle-report/get-cycle-records-xls-link\", {\n        ...payload\n    });\n    return cycleRecords;\n}\n","import * as cycleReportService from \"@/service/cycle-report\";\n\nconst state = () => ({\n    cycleTypes: null,\n    report: null,\n    locationOptions: [\n        { id: -1, name: \"All\" },\n        { id: 0, name: \"None\" }\n    ]\n});\n\nconst actions = {\n    async getAllCycleTypes({ state }) {\n        try {\n            const cycleTypes = await cycleReportService.getAllCycleType();\n            state.cycleTypes = cycleTypes;\n        } catch (err) {\n            console.log(err);\n        }\n    },\n    async getCycleReport({ state }, payload) {\n        try {\n            const data = await cycleReportService.getCycleRport(payload);\n            state.report = data;\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getLocationOption({ state }) {\n        try {\n            if (state.locationOptions.lenght <= 2) {\n                const data = await cycleReportService.getLocationOption();\n                state.locationOptions.push(...data);\n            }\n        } catch (err) {}\n    },\n    async getCycleReportExcel({ state }, payload) {\n        try {\n            const data = await cycleReportService.getCycleReportExcel(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject();\n        }\n    }\n};\n\nconst mutations = {};\nconst getters = {};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nexport async function getFertilizationByCycleId(cycleId) {\n    const {\n        data: { fertilization }\n    } = await $axios.get(\"fertilization/by-cycle-id\", { params: { cycleId } });\n\n    return fertilization;\n}\n\nexport async function createFertlization(payload) {\n    const { data } = await $axios.post(\n        \"fertilization/create-fertilization\",\n        payload\n    );\n    return data;\n}\n\nexport async function updateFertlization(payload) {\n    const { data } = await $axios.post(\n        \"fertilization/save-fertilization\",\n        payload\n    );\n    return data;\n}\n\nexport async function getFertilizationLine(fertId) {\n    const {\n        data: { fertilizationLines }\n    } = await $axios.get(\"fertilization/fertilization-lines\", {\n        params: { fertId }\n    });\n    return fertilizationLines;\n}\n\nexport async function createFertilizationLine(payload) {\n    const {\n        data: { fertLine }\n    } = await $axios.post(\"fertilization-embryo-details/save-embryo\", {\n        ...payload\n    });\n    return fertLine;\n}\n\nexport async function getOocyteEmbryoOptions() {\n    const {\n        data: { maturityList }\n    } = await $axios.get(\"fertilization/maturity-list\");\n\n    const {\n        data: { stageList }\n    } = await $axios.get(\"fertilization/stage-list\");\n\n    const {\n        data: { gradeList }\n    } = await $axios.get(\"fertilization/grade-list\");\n\n    return { maturityList, stageList, gradeList };\n}\n\nexport async function saveFertlizationEmbryoDetail(payload) {\n    const { data } = await $axios.post(\n        \"fertilization-embryo-details/save-details\",\n        {\n            ...payload\n        }\n    );\n\n    return data;\n}\n\nexport async function getFertlizationEmbryoDetail(oocId) {\n    const {\n        data: { fertilizationEmbryoDetails }\n    } = await $axios.get(\"fertilization-embryo-details/get-details\", {\n        params: {\n            oocId\n        }\n    });\n    return fertilizationEmbryoDetails;\n}\n","import * as fertilizationService from \"@/service/fertilization\";\n\nconst state = () => ({\n    fertilization: null,\n    fertilizationLines: [],\n    maturityList: [],\n    stageList: [],\n    gradeList: []\n});\n\nconst actions = {\n    async getFertilization({ commit, state }, cycleId) {\n        try {\n            const data = await fertilizationService.getFertilizationByCycleId(\n                cycleId\n            );\n            commit(\"SET_FERTILIZATION\", data);\n            return Promise.resolve(data);\n        } catch (err) {\n            state.fertilizationLines = [];\n            return Promise.reject();\n        }\n    },\n    async createFertlization({ state }, payload) {\n        try {\n            const data = await fertilizationService.createFertlization(payload);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async updateFertlization({ dispatch, state }, payload) {\n        try {\n            const data = await fertilizationService.updateFertlization(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getFertilizationLines({ state }, fertId) {\n        try {\n            const data = await fertilizationService.getFertilizationLine(\n                fertId\n            );\n            state.fertilizationLines = data;\n            return Promise.resolve();\n        } catch (err) {\n            state.fertilizationLines = [];\n            return Promise.reject();\n        }\n    },\n    async createFertilizationLine({ state, dispatch }, payload) {\n        try {\n            const data = await fertilizationService.createFertilizationLine(\n                payload\n            );\n            return dispatch(\n                \"getFertilizationLines\",\n                state.fertilization.fertId\n            );\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getOccyteEmbryoDialogOptions({ state }) {\n        try {\n            const {\n                maturityList,\n                stageList,\n                gradeList\n            } = await fertilizationService.getOocyteEmbryoOptions();\n            state.maturityList = maturityList;\n            state.stageList = stageList;\n            state.gradeList = gradeList;\n        } catch (err) {}\n    },\n    async saveFertlizationEmbryoDetail({ state, dispatch }, payload) {\n        try {\n            const data = await fertilizationService.saveFertlizationEmbryoDetail(\n                payload\n            );\n            return dispatch(\n                \"getFertilizationLines\",\n                state.fertilization.fertId\n            );\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getFertlizationEmbryoDetail({ state }, oocId) {\n        try {\n            const data = await fertilizationService.getFertlizationEmbryoDetail(\n                oocId\n            );\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nconst mutations = {\n    SET_FERTILIZATION(state, payload) {\n        state.fertilization = payload;\n    },\n    EMPTY_FERTILIZAION_LINE(state) {\n        state.fertilizationLines = [];\n    }\n};\nconst getters = {};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nexport async function getDoctors() {\n    const {\n        data: { data }\n    } = await $axios.get(\"doctor/list?activeOnly=false\");\n    return data;\n}\n","import * as doctorService from \"@/service/doctor\";\n\nconst state = () => ({\n    doctors: []\n});\n\nconst actions = {\n    async getDoctorList({ state }) {\n        try {\n            if (state.doctors.length == 0) {\n                const data = await doctorService.getDoctors();\n                state.doctors = data;\n            }\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nexport async function getEmbryoTranasfer(cycleId) {\n    const {\n        data: { embryoTransfer }\n    } = await $axios.get(\"embryo-transfer/get-embryo-transfer\", {\n        params: { cycleId }\n    });\n\n    return embryoTransfer;\n}\n\nexport async function updateEmbryoTrasfer(payload) {\n    const { data } = await $axios.post(\"embryo-transfer/save-embryo-transfer\", {\n        ...payload\n    });\n    return data;\n}\n\nexport async function createEmbryoTransfer(payload) {\n    const { data } = await $axios.post(\n        \"embryo-transfer/create-embryo-transfer\",\n        { ...payload }\n    );\n    return data;\n}\n\nexport async function getDaysPostORList() {\n    const {\n        data: { daysPostORList }\n    } = await $axios.get(\"embryo-transfer/get-days-post-or-list\");\n\n    return daysPostORList;\n}\n\nexport async function getCatheterList() {\n    const {\n        data: { catheterList }\n    } = await $axios.get(\"embryo-transfer/get-catheter-list\");\n    return catheterList;\n}\n","import * as embryoTransferService from \"@/service/embryo-transfer\";\n\nconst state = () => ({\n    daysPostORList: [],\n    catheterList: []\n});\n\nconst actions = {\n    async getEmbryoTranasfer({ state }, cycleId) {\n        try {\n            const data = await embryoTransferService.getEmbryoTranasfer(\n                cycleId\n            );\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getFeildOptions({ state }) {\n        try {\n            if (state.daysPostORList.length == 0) {\n                const daysPostORList = await embryoTransferService.getDaysPostORList();\n                state.daysPostORList = daysPostORList;\n            }\n            if (state.catheterList.length == 0) {\n                const catheterList = await embryoTransferService.getCatheterList();\n                state.catheterList = catheterList;\n            }\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async updateEmbryoTransfer({ state }, payload) {\n        try {\n            const data = embryoTransferService.updateEmbryoTrasfer(payload);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async createEmbryoTransfer({ state }, payload) {\n        try {\n            const data = embryoTransferService.createEmbryoTransfer(payload);\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nconst GET_PROVIDERS_ENDPOINT = \"provider/list\";\n\nexport async function getProviders() {\n    const {\n        data: { data }\n    } = await $axios.get(GET_PROVIDERS_ENDPOINT);\n    return data;\n}\n\nexport async function getLocationOption() {\n    const {\n        data: { data }\n    } = await $axios.get(\"provider/site-list\");\n    return data;\n}\n","import * as providerServcie from \"@/service/provider\";\n\nconst state = () => ({\n    providers: [],\n    locations: [\n        { id: -1, name: \"All\" },\n        { id: 0, name: \"None\" }\n    ]\n});\n\nconst actions = {\n    async getProviders({ state }) {\n        try {\n            if (state.providers.length === 0) {\n                const data = await providerServcie.getProviders();\n                state.providers = data;\n            }\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getProviderLocations({ state }) {\n        try {\n            if (state.locations.length <= 2) {\n                const data = await providerServcie.getLocationOption();\n                state.locations.push(...data);\n            }\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nexport async function getCryoStorageList(cycleId) {\n    const {\n        data: { data }\n    } = await $axios.get(\"embryo-storage/list\", { params: { cycleId } });\n    return data;\n}\n\nexport async function getCyroStorageByPatient(patientId) {\n    const {\n        data: { data }\n    } = await $axios.get(\"embryo-storage/list-by-patient-id\", {\n        params: { patientId }\n    });\n    return data;\n}\n\nexport async function getFertilizationLineByCycle(cycleId) {\n    const {\n        data: { fertilizationLines }\n    } = await $axios.get(\"fertilization/fertilization-lines-by-cycle\", {\n        params: { cycleId }\n    });\n    return fertilizationLines;\n}\n\nexport async function saveFreezingLine(payload) {\n    const { data } = await $axios.post(\n        \"embryo-storage/save-freezing-line\",\n        payload\n    );\n    return data;\n}\n\nexport async function getCryoStorageOptions() {\n    const {\n        data: { pugColorList }\n    } = await $axios.get(\"semen-cryo-storage/plug-color-list\");\n    const {\n        data: { cassetteTypeList }\n    } = await $axios.get(\"semen-cryo-storage/cassette-type-list\");\n    const {\n        data: { cassetteColorList }\n    } = await $axios.get(\"semen-cryo-storage/cassette-color-list\");\n\n    const {\n        data: { dewarList }\n    } = await $axios.get(\"embryo-storage/get-dewar-list\");\n\n    return {\n        pugColorList,\n        cassetteTypeList,\n        cassetteColorList,\n        dewarList\n    };\n}\n\nexport async function getCryoStorageListFiltered(queryParams) {\n    const {\n        data: { embryoStorageList }\n    } = await $axios.get(\"embryo-storage/list-filter\", {\n        params: queryParams\n    });\n    return embryoStorageList;\n}\n","import * as cryoStorageService from \"@/service/cyro-storage\";\n\nconst state = () => ({\n    list: [],\n    receivedEmbryos: [],\n    fertilizationLines: [],\n    pugColorList: null,\n    cassetteTypeList: null,\n    cassetteColorList: null,\n    dewarList: null\n});\nconst actions = {\n    async getCryoStorageList({ state }, cycleId) {\n        try {\n            const data = await cryoStorageService.getCryoStorageList(cycleId);\n            state.receivedEmbryos = data;\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getCyroStorageByPatient({ state }, patientId) {\n        try {\n            const data = await cryoStorageService.getCyroStorageByPatient(\n                patientId\n            );\n            state.list = data;\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getFertilizationLineByCycle({ state }, cycleId) {\n        try {\n            const data = await cryoStorageService.getFertilizationLineByCycle(\n                cycleId\n            );\n            state.fertilizationLines = data;\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async saveFreezingLine({ dispatch, rootState }, payload) {\n        try {\n            const data = await cryoStorageService.saveFreezingLine(payload);\n            dispatch(\n                \"getCyroStorageByPatient\",\n                rootState.artCycle.selectedCycle.patientId\n            );\n            dispatch(\n                \"getCryoStorageList\",\n                rootState.artCycle.selectedCycle.cycleId\n            );\n            return data;\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getCryoStorageOptions({ state }) {\n        if (\n            state.pugColorList ||\n            state.cassetteTypeList ||\n            state.cassetteColorList ||\n            state.dewarList\n        ) {\n            return;\n        }\n\n        try {\n            const {\n                pugColorList,\n                cassetteTypeList,\n                cassetteColorList,\n                dewarList\n            } = await cryoStorageService.getCryoStorageOptions();\n\n            state.pugColorList = pugColorList.map((item) => ({\n                value: item.plugColor,\n                label: item.plugColor\n            }));\n            state.cassetteTypeList = cassetteTypeList.map((item) => ({\n                value: item.cassetteType,\n                label: item.cassetteType\n            }));\n            state.cassetteColorList = cassetteColorList.map((item) => ({\n                value: item.cassetteColor,\n                label: item.cassetteColor\n            }));\n            state.dewarList = dewarList;\n        } catch (err) {}\n    },\n    async getCryoStorageListFiltered({ state }, params) {\n        try {\n            const data = await cryoStorageService.getCryoStorageListFiltered(\n                params\n            );\n            return data;\n        } catch (err) {\n            return Promise.reject();\n        }\n    }\n};\nconst getters = {};\nconst mutations = {};\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    mutations,\n    actions\n};\n","import { $axios } from \"./app-http\";\n\nexport async function getTotalPatient(fromDate, toDate) {\n    const {\n        data: { totalPatients }\n    } = await $axios.get(\"daily-report/get-total-patients\", {\n        params: { fromDate, toDate }\n    });\n    return { totalPatients };\n}\n\nexport async function getTotalOrders(fromDate, toDate) {\n    const {\n        data: { totalOrders }\n    } = await $axios.get(\"daily-report/get-total-orders\", {\n        params: { fromDate, toDate }\n    });\n    return { totalOrders };\n}\n\nexport async function getCycleData(autoTestOrderId) {\n    const { data } = await $axios.get(\n        \"daily-report/get-cycle-data-by-blood-test-id\",\n        {\n            params: { autoTestOrderId }\n        }\n    );\n    return data;\n}\n\nexport async function getPersonalCycle(testId) {\n    const { data } = await $axios.get(\"daily-report/get-personal-cycles\", {\n        params: { testId }\n    });\n    return data;\n}\n\nexport async function getOrderList(fromDate, toDate, providerNo) {\n    const {\n        data: { ordersList }\n    } = await $axios.get(\"daily-report/get-orders-list\", {\n        params: { fromDate, toDate, providerNo }\n    });\n    return ordersList;\n}\n\nexport async function getPendingOrderList(fromDate, toDate, providerNo) {\n    const { data } = await $axios.get(\"daily-report/get-pending-orders-list\", {\n        params: { fromDate, toDate, providerNo }\n    });\n    return data;\n}\n\nexport async function assignCycleToBloodTest(payload) {\n    const { data } = await $axios.post(\n        \"daily-report/assign-cycle-to-blood-test\",\n        payload\n    );\n    return data;\n}\n\nexport async function saveCheckedSigleRecord(payload) {\n    const { data } = await $axios.post(\n        \"daily-report/save-checked-single-records\",\n        payload\n    );\n\n    return data;\n}\n\nexport async function getFundedBloodBillingList(params) {\n    const {\n        data: { fundedBloodBilling }\n    } = await $axios.get(\"blood-billing/list-funded-blood-billing\", {\n        params: { ...params }\n    });\n\n    return fundedBloodBilling;\n}\n\nexport async function getBloodBillingList(params) {\n    const {\n        data: { bloodBillingList }\n    } = await $axios.get(\"blood-billing/list-blood-billing\", {\n        params: { ...params }\n    });\n\n    return bloodBillingList;\n}\n","import * as dailyReportService from \"@/service/daily-report\";\n\nconst state = () => ({\n    form: { fromDate: null, toDate: null },\n    reportList: [],\n    selectedReport: null,\n    billingList: []\n});\n\nconst actions = {\n    async getTotalPatient(context, fromDate, toDate) {\n        try {\n            const data = await dailyReportService.getTotalPatient(\n                fromDate,\n                toDate\n            );\n            return data;\n        } catch (err) {\n            Promise.reject();\n        }\n    },\n    async getTotalOrders(context, fromDate, toDate) {\n        try {\n            const data = await dailyReportService.getTotalOrders(\n                fromDate,\n                toDate\n            );\n            return data;\n        } catch (err) {\n            Promise.reject();\n        }\n    },\n    async getCycleData(context, autoTestOrderId) {\n        try {\n            const { data } = await dailyReportService.getCycleData(\n                autoTestOrderId\n            );\n            return data;\n        } catch (err) {\n            Promise.reject();\n        }\n    },\n    async getOrderList({ state }, { fromDate, toDate, providerNo }) {\n        try {\n            const data = await dailyReportService.getOrderList(\n                fromDate,\n                toDate,\n                providerNo\n            );\n            state.reportList = data;\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async getPendingOrderList(context, fromDate, toDate, providerNo) {\n        const data = await dailyReportService.getOrderList(\n            fromDate,\n            toDate,\n            providerNo\n        );\n        return data;\n    },\n    async assignCycleToBloodTest({ state }, id) {\n        try {\n            const data = await dailyReportService.assignCycleToBloodTest({\n                cycleId: id,\n                testId: state.selectedReport.autoTestOrderId\n            });\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getPersonalCycles({ state }) {\n        try {\n            const {\n                personalCycles\n            } = await dailyReportService.getPersonalCycle(\n                state.selectedReport.autoTestOrderId\n            );\n            return personalCycles;\n        } catch (error) {\n            return Promise.reject();\n        }\n    },\n    async saveCheckedSigleRecord({ state }, payload) {\n        try {\n            const data = await dailyReportService.saveCheckedSigleRecord(\n                payload\n            );\n            return data;\n        } catch (err) {\n            Promise.reject(err);\n        }\n    },\n    async getFundedBloodBillingList({ state }, params) {\n        try {\n            const data = await dailyReportService.getFundedBloodBillingList(\n                params\n            );\n            state.billingList = data;\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getBloodBillingList({ state }, params) {\n        try {\n            const data = await dailyReportService.getBloodBillingList(\n                params\n            );\n            state.billingList = data;\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nconst mutations = {\n    SET_SELECTED_REPORT(state, payload) {\n        state.selectedReport = payload;\n    }\n};\n\nconst getters = {\n    isAnyReportSelected(state) {\n        return state.selectedReport != null ? true : false;\n    }\n};\n\nexport default {\n    namespaced: true,\n    actions,\n    state,\n    mutations,\n    getters\n};\n","import axios from \"axios\";\nimport { $axios } from \"./app-http\";\n\nexport async function getBloodTestResults(patientId) {\n    const {\n        data: { btdisplay }\n    } = await $axios.get(\"blood-test/display-blood-tests-list\", {\n        params: { patientId }\n    });\n    return btdisplay;\n}\n\nexport async function getBloodGroupTests() {\n    const {\n        data: { bloodGroups }\n    } = await $axios.get(\"blood-test/get-blood-groups\");\n    return bloodGroups;\n}\n\nexport async function addBloodTestOrderItems(payload) {\n    const { data } = await $axios.post(\n        \"blood-test/add-blood-test-order-items\",\n        payload\n    );\n    return data;\n}\n\nexport async function getBloodTest(testOrderId) {\n    const {\n        data: { btdisplay }\n    } = await $axios.get(\"blood-test/display-blood-tests\", {\n        params: { testOrderId }\n    });\n    return btdisplay;\n}\n\nexport async function saveAllBloodTest(payload) {\n    const { data } = await $axios.post(\n        \"blood-test/update-blood-tests\",\n        payload\n    );\n\n    return data;\n}\n\nexport async function printBarcodePDF(id) {\n    let url = `http://tablet.nlf.clinic:3280/nlforms/gnpdf/?landscape=1&ps=B10&m0=1&m1=1&htmurl=http://tablet.nlf.clinic:3280/cycles-reports/print-barcode-pdf.php?testOrderId=${id}`;\n\n    const {\n        data: { pdf }\n    } = await axios.get(url);\n\n    return pdf;\n}\n","import {\n    getBloodGroupTests,\n    getBloodTestResults,\n    addBloodTestOrderItems,\n    getBloodTest,\n    saveAllBloodTest,\n    printBarcodePDF\n} from \"@/service/blood-test\";\n\nconst state = () => ({\n    bloodGroups: []\n});\n\nconst actions = {\n    async getBloodTestResults({ rootState }) {\n        try {\n            const data = getBloodTestResults(rootState.artCycle.patient.id);\n            return data;\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async getBloodGroupTests({ state }) {\n        try {\n            if (state.bloodGroups.length == 0) {\n                state.bloodGroups = await getBloodGroupTests();\n            }\n            return Promise.resolve();\n        } catch (err) {\n            return Promise.reject();\n        }\n    },\n    async addBloodTestOrderItems({ state }, reqBody) {\n        try {\n            const data = await addBloodTestOrderItems(reqBody);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async getBloodTest({ state }, testOrderId) {\n        try {\n            const data = await getBloodTest(testOrderId);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async saveAllBloodTest({ dispatch }, payload) {\n        try {\n            const data = await saveAllBloodTest(payload);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    },\n    async printBarcodePDF({ state }, id) {\n        try {\n            const data = await printBarcodePDF(id);\n            return data;\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\n\nconst getters = {\n    getBloodGroups(state) {\n        return [\n            ...state.bloodGroups.map((item) => ({\n                groupName: item.groupName,\n                curGroup: item.curGroup\n            }))\n        ];\n    },\n    getAllBloodTest({ bloodGroups }) {\n        const booodTests = [];\n        for (const group of bloodGroups) {\n            booodTests.push(...group.testItems);\n        }\n        return [\n            ...new Map(\n                booodTests.map((item) => [item[\"testId\"], item])\n            ).values()\n        ];\n    }\n};\n\nexport default {\n    namespaced: true,\n    state,\n    actions,\n    getters\n};\n","import { createStore } from \"vuex\";\n\nimport AuthService from \"../service/auth.js\";\nimport options from \"@/store/options.js\";\nimport artCycle from \"@/store/art-cycle\";\nimport cycleMonitoring from \"@/store/cyccle-monitoring\";\nimport opu from \"@/store/opu\";\nimport semen from \"@/store/semen\";\nimport pregnancy from \"@/store/pregnancy\";\nimport born from \"@/store/born\";\nimport utils from \"@/store/utils\";\nimport semenCryoStorage from \"@/store/semen-cryo-storage\";\nimport cycleReport from \"@/store/cycle-report\";\nimport fertilization from \"@/store/fertilization\";\nimport doctor from \"@/store/doctor\";\nimport embryoTransfer from \"@/store/embryo-transfer\";\nimport provider from \"@/store/provider\";\nimport cryoStorage from \"@/store/cryo-storage.js\";\nimport dailyReport from \"@/store/daily-report\";\nimport bloodTest from \"@/store/blood-test\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = user\n    ? { status: { loggedIn: true }, user }\n    : { status: { loggedIn: false }, user: null };\n\nexport default createStore({\n    state: initialState,\n    actions: {\n        login({ commit }, user) {\n            return AuthService.login(user).then(\n                (user) => {\n                    commit(\"loginSuccess\", user);\n                    return Promise.resolve(user);\n                },\n                (error) => {\n                    commit(\"loginFailure\");\n                    return Promise.reject(error);\n                }\n            );\n        },\n        logout({ commit }) {\n            AuthService.logout();\n            commit(\"logout\");\n        },\n        register({ commit }, user) {\n            return AuthService.register(user).then(\n                (response) => {\n                    commit(\"registerSuccess\");\n                    return Promise.resolve(response.data);\n                },\n                (error) => {\n                    commit(\"registerFailure\");\n                    return Promise.reject(error);\n                }\n            );\n        }\n    },\n    mutations: {\n        loginSuccess(state, user) {\n            state.status.loggedIn = true;\n            state.user = user;\n        },\n        loginFailure(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n        logout(state) {\n            state.status.loggedIn = false;\n            state.user = null;\n        },\n        registerSuccess(state) {\n            state.status.loggedIn = false;\n        },\n        registerFailure(state) {\n            state.status.loggedIn = false;\n        }\n    },\n    modules: {\n        artCycle,\n        options,\n        cycleMonitoring,\n        opu,\n        semen,\n        pregnancy,\n        born,\n        utils,\n        semenCryoStorage,\n        cycleReport,\n        fertilization,\n        embryoTransfer,\n        doctor,\n        provider,\n        cryoStorage,\n        dailyReport,\n        bloodTest\n    }\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport { artCycleService } from \"./service\";\n\n// css\nimport \"primevue/resources/themes/saga-blue/theme.css\";\nimport \"primevue/resources/primevue.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"primeflex/primeflex.css\";\nimport \"./style.css\";\n\nimport PrimeVue from \"primevue/config\";\n\n// form imports\nimport AutoComplete from \"primevue/autocomplete\";\nimport Calendar from \"primevue/calendar\";\nimport Checkbox from \"primevue/checkbox\";\nimport Dropdown from \"primevue/dropdown\";\nimport InputMask from \"primevue/inputmask\";\nimport InputNumber from \"primevue/inputnumber\";\nimport InputText from \"primevue/inputtext\";\nimport Listbox from \"primevue/listbox\";\nimport MultiSelect from \"primevue/multiselect\";\nimport Password from \"primevue/password\";\nimport RadioButton from \"primevue/radiobutton\";\nimport Textarea from \"primevue/textarea\";\nimport ToggleButton from \"primevue/togglebutton\";\n\n// button imports\nimport Button from \"primevue/button\";\n\n// data imports\nimport DataTable from \"primevue/datatable\";\nimport Column from \"primevue/column\";\nimport ColumnGroup from \"primevue/columngroup\";\nimport Row from \"primevue/row\";\nimport TreeTable from \"primevue/treetable\";\n\n// panel imports\nimport Card from \"primevue/card\";\nimport Divider from \"primevue/divider\";\nimport Fieldset from \"primevue/fieldset\";\nimport Panel from \"primevue/panel\";\nimport ScrollPanel from \"primevue/scrollpanel\";\nimport Splitter from \"primevue/splitter\";\nimport SplitterPanel from \"primevue/splitterpanel\";\nimport TabView from \"primevue/tabview\";\nimport TabPanel from \"primevue/tabpanel\";\nimport Toolbar from \"primevue/toolbar\";\n\n// overlay imports\nimport ConfirmDialog from \"primevue/confirmdialog\";\nimport ConfirmationService from \"primevue/confirmationservice\";\nimport Dialog from \"primevue/dialog\";\nimport OverlayPanel from \"primevue/overlaypanel\";\n\n// menu imports\nimport TabMenu from \"primevue/tabmenu\";\n\n// message imports\nimport InlineMessage from \"primevue/inlinemessage\";\nimport Message from \"primevue/message\";\nimport Toast from \"primevue/toast\";\nimport ToastService from \"primevue/toastservice\";\n\n// misc imports\nimport Avatar from \"primevue/avatar\";\nimport Badge from \"primevue/badge\";\nimport BlockUI from \"primevue/blockui\";\nimport Chip from \"primevue/chip\";\nimport ProgressBar from \"primevue/progressbar\";\nimport ProgressSpinner from \"primevue/progressspinner\";\n\nconst app = createApp(App);\napp.use(store)\n    .use(router)\n    .use(PrimeVue)\n    .use(ConfirmationService)\n    .use(ToastService)\n    .mount(\"#app\");\n\n// Register service provide\n\napp.provide(\"artCycleService\", artCycleService);\n\n// register form components\napp.component(\"PAutoComplete\", AutoComplete);\napp.component(\"PCalendar\", Calendar);\napp.component(\"PCheckbox\", Checkbox);\napp.component(\"PDropdown\", Dropdown);\napp.component(\"PInputMask\", InputMask);\napp.component(\"PInputNumber\", InputNumber);\napp.component(\"PInputText\", InputText);\napp.component(\"PMultiSelect\", MultiSelect);\napp.component(\"PListbox\", Listbox);\napp.component(\"PPassword\", Password);\napp.component(\"PRadioButton\", RadioButton);\napp.component(\"PTextarea\", Textarea);\napp.component(\"PToggleButton\", ToggleButton);\n\n// Register button components\napp.component(\"PButton\", Button);\n\n// Register data components\napp.component(\"PDataTable\", DataTable);\napp.component(\"PColumn\", Column);\napp.component(\"PColumnGroup\", ColumnGroup);\napp.component(\"PRow\", Row);\napp.component(\"PTreeTable\", TreeTable);\n\n// Register panel components\napp.component(\"PCard\", Card);\napp.component(\"PDivider\", Divider);\napp.component(\"PFieldset\", Fieldset);\napp.component(\"PPanel\", Panel);\napp.component(\"PScrollPanel\", ScrollPanel);\napp.component(\"PSplitter\", Splitter);\napp.component(\"PSplitterPanel\", SplitterPanel);\napp.component(\"PTabPanel\", TabPanel);\napp.component(\"PTabView\", TabView);\napp.component(\"PToolbar\", Toolbar);\n\n// Register overlay components\napp.component(\"PConfirmDialog\", ConfirmDialog);\napp.component(\"PDialog\", Dialog);\napp.component(\"POverlayPanel\", OverlayPanel);\n\n// Register menu components\napp.component(\"PTabMenu\", TabMenu);\n\n// Register message compontest\napp.component(\"PInlineMessage\", InlineMessage);\napp.component(\"PMessage\", Message);\napp.component(\"PToast\", Toast);\n\n// Register misc components\napp.component(\"PAvatar\", Avatar);\napp.component(\"PBadge\", Badge);\napp.component(\"PChip\", Chip);\napp.component(\"PProgressSpinner\", ProgressSpinner);\napp.component(\"PProgressBar\", ProgressBar);\napp.component(\"PBlockUi\", BlockUI);\n","import { $axios } from \"./app-http\";\n\nconst DEMOGRAPHIC_SEARCH_ENDPOINT = \"demographics/search\";\nconst FORM_FIELD_OPTIONS_ENDOINT = \"art-cycle/field-options\";\nconst PATIENT_CYCLES_ENDPOINT = \"art-cycle/cycles\";\nconst CYCLE_SUMMARY_DETAIL = \"cycles/summary-details\";\nconst CYCLE_CREATE_ENDPOINT = \"cycle/create-new\";\nconst CYCLE_DELETE_ENDPOINT = \"cycle/delete-cycle\";\nconst CYCLE_UPDATE_ENDPOINT = \"cycle/save-cycle\";\nconst BORN_CYCLE_CREATE = \"born/save-cycle-info\";\n\nexport default {\n    async searchDemographic({ term, sex }) {\n        let limit = 10;\n        return await $axios.get(DEMOGRAPHIC_SEARCH_ENDPOINT, {\n            params: {\n                term: term,\n                sex: sex\n            }\n        });\n    },\n    async getFormFieldOptions() {\n        return await $axios.get(FORM_FIELD_OPTIONS_ENDOINT);\n    },\n    async getCycles(patientId) {\n        return await $axios.get(PATIENT_CYCLES_ENDPOINT, {\n            params: {\n                \"patient-id\": patientId\n            }\n        });\n    },\n    async getCycleSummaryDetail(patientId) {\n        return await $axios.get(CYCLE_SUMMARY_DETAIL, {\n            params: {\n                patientId\n            }\n        });\n    }\n};\n\nexport async function searchDemographic({ term, sex }) {\n    const data = await $axios.get(DEMOGRAPHIC_SEARCH_ENDPOINT, {\n        params: {\n            term: term,\n            sex: sex\n        }\n    });\n\n    return data;\n}\n\nexport async function getFormFieldOptions() {\n    const { data } = await $axios.get(FORM_FIELD_OPTIONS_ENDOINT);\n    return data;\n}\n\nexport async function getCycleSummaryDetail(patientId) {\n    const {\n        data: { data }\n    } = await $axios.get(CYCLE_SUMMARY_DETAIL, {\n        params: {\n            patientId\n        }\n    });\n\n    return data;\n}\n\nexport async function createNewCycle(cycle) {\n    const { data } = await $axios.post(CYCLE_CREATE_ENDPOINT, cycle);\n    return data;\n}\n\nexport async function deleteCycle(cycleId) {\n    return await $axios.post(CYCLE_DELETE_ENDPOINT, {\n        cycleId: parseInt(cycleId)\n    });\n}\n\nexport async function updateCycle(cycle) {\n    const { data } = await $axios.post(CYCLE_UPDATE_ENDPOINT, cycle);\n    return data;\n}\n\nexport async function craetNewBorn(formData) {\n    const { data } = await $axios.post(BORN_CYCLE_CREATE, formData);\n    return data;\n}\n\nexport async function mergeCycle({ cycle1, cycle2, dryRun }) {\n    const {\n        data: { cycleMergeResult }\n    } = await $axios.post(\"cycle/merge-cycle\", {\n        cycleId1: cycle1,\n        cycleId2: cycle2,\n        isDryRun: dryRun\n    });\n\n    return cycleMergeResult;\n}\n\nexport async function getCouplesReport(patientId) {\n    const { data } = await $axios.get(\"embryo-storage/couples-report\", {\n        params: { patientId }\n    });\n    return data;\n}\n","import mitt from 'mitt';\n\nconst emitter = mitt();\n\nconst EVENT_STRINGS = {\n    LOGOUT: \"LOGOUT\"\n}\n\nexport {\n    emitter,\n    EVENT_STRINGS\n}","<template>\n    <p-block-ui :blocked=\"loading\" :fullScreen=\"true\">\n        <p-progress-spinner v-show=\"loading\" />\n    </p-block-ui>\n\n    <p-toast />\n    <p-confirm-dialog />\n\n    <p-toolbar class=\"p-text-bold\">\n        <template #left>\n            <header-info />\n        </template>\n\n        <template #right>\n            <p-button\n                icon=\"pi pi-user\"\n                class=\"p-mr-2\"\n                @click=\"showUserOverlay\"\n            />\n        </template>\n    </p-toolbar>\n\n    <p-tab-menu :model=\"menu\" />\n\n    <div id=\"main\" class=\"p-input-filled\">\n        <router-view />\n    </div>\n\n    <p-overlay-panel ref=\"userOverlay\" style=\"width: 250px\">\n        <div class=\"p-mb-3\">\n            <p-avatar icon=\"pi pi-user\" />\n            {{ user.name }}\n        </div>\n        <p-button label=\"Log Out\" @click=\"logout()\" />\n    </p-overlay-panel>\n</template>\n\n<script>\nimport { computed, onMounted, ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { emitter, EVENT_STRINGS } from \"@/event-bus\";\n\nimport router from \"@/router\";\n\nimport HeaderInfo from \"@/components/shared/header-info.vue\";\n\nexport default {\n    components: {\n        HeaderInfo\n    },\n    setup() {\n        const store = useStore();\n        const loading = ref(false);\n\n        const menu = ref([\n            { to: \"/art-cycle\", label: \"ART Cycle\" },\n            { to: \"/cycle-monitoring\", label: \"Cycle Monitoring\" },\n            { to: \"/opu\", label: \"OPU\" },\n            { to: \"/semen\", label: \"Semen\" },\n            { to: \"/semen-cryo-storage\", label: \"Semen Cryo Storage\" },\n            { to: \"/pregnancy\", label: \"Pregnancy\" },\n            { to: \"/fertilization\", label: \"Fertilization\" },\n            { to: \"/embryo-transfer\", label: \"Embryo Transfer\" },\n            { to: \"/cryo-storage\", label: \"Cryo Storage\" },\n            { to: \"/blood-tests\", label: \"Blood Tests\" },\n            { to: \"/daily-report\", label: \"Daily Report\" },\n            { to: \"/cycle-report\", label: \"Cycle Report\" },\n            { to: \"/patient-mas-log\", label: \"Patient Mas Log\" },\n            { to: \"/message-inbox\", label: \"Message Inbox\" },\n            { to: \"/born\", label: \"Born\", visible: false },\n            { to: \"/test\", label: \"Test\", visible: false }\n        ]);\n\n        const userOverlay = ref();\n        const showUserOverlay = (event) => {\n            userOverlay.value.toggle(event);\n        };\n\n        const user = computed(() => store.state.user);\n\n        const logout = () => {\n            store.dispatch(\"logout\").then(() => {\n                router.push({ name: \"Login\" });\n            });\n        };\n\n        emitter.on(EVENT_STRINGS.LOGOUT, (data) => {\n            console.log(\"logout from defalut\");\n        });\n\n        emitter.on(\"app:show-page-loading\", (val) => {\n            loading.value = val;\n        });\n\n        onMounted(() => {\n            store.dispatch(\"options/getBornOptions\");\n        });\n\n        return {\n            menu,\n            loading,\n            userOverlay,\n            showUserOverlay,\n            logout,\n            user\n        };\n    }\n};\n</script>\n\n<style scoped>\n.p-toolbar {\n    margin: -8px;\n    margin-top: 0;\n    padding: 2px;\n    background-color: white;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 1000;\n}\n\n.p-tabmenu {\n    margin: 0 -8px 0 -8px;\n    width: 100%;\n    position: fixed;\n    top: 34px;\n    background-color: white;\n    z-index: 1000;\n}\n\n.p-progress-spinner {\n    position: absolute;\n    top: 300px;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n}\n\n@media only screen and (max-width: 600px) {\n    #main {\n        background-color: 150px;\n    }\n}\n\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    #main {\n        margin-top: 115px;\n    }\n}\n\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    #main {\n        margin-top: 115px;\n    }\n}\n\n/* Large devices (laptops/desktops, 992px and up) */\n/* 1378px */\n@media only screen and (min-width: 992px) {\n    #main {\n        margin-top: 115px;\n    }\n}\n\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1435px) {\n    #main {\n        margin-top: 80px;\n    }\n}\n</style>\n","<template>\n    <span class=\"p-ml-2 p-mr-2\"> Cycle: </span>\n    <span style=\"color: #f44336\">{{ cycle ? cycle.cycleId : \"--------\" }}</span>\n    <p-divider layout=\"vertical\" />\n    <span style=\"color: #f44336\">{{ cycle ? cycle.cycleType : \"-----\" }}</span>\n    <p-divider layout=\"vertical\" />\n    <span class=\"p-mr-2\"> Patient: </span>\n    <span style=\"color: #f44336\">\n        {{\n            patient ? patient.firstName + \" \" + patient.lastName : \"----------\"\n        }}\n    </span>\n    <p-divider layout=\"vertical\" />\n    <span class=\"p-mr-2\">Demographic No: </span>\n    <span style=\"color: #f44336\">\n        {{ patient ? patient.chart : \"--------\" }}\n    </span>\n    <p-divider layout=\"vertical\" />\n    <span style=\"color: #f44336\">\n        {{\n            patient\n                ? patient.year + \"-\" + patient.month + \"-\" + patient.day\n                : \"----/--/--\"\n        }}\n    </span>\n    <p-divider layout=\"vertical\" />\n    <span style=\"color: #f44336\">({{ patient ? patient.age : \"--\" }} yrs)</span>\n    <p-divider layout=\"vertical\" />\n    <span style=\"color: #f44336\">{{ patient ? patient.doctor : \"--\" }}</span>\n    <p-divider layout=\"vertical\" />\n    <span style=\"color: #2196F3\" v-if=\"isBornCycle\">Born</span>\n</template>\n\n<script>\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n    setup() {\n        const store = useStore();\n\n        const cycle = computed(() => store.state.artCycle.selectedCycle);\n        const patient = computed(() => store.state.artCycle.patient);\n        const isBornCycle = computed(\n            () => store.getters[\"artCycle/isBornCycle\"]\n        );\n\n        onMounted(() => {\n            // store.dispatch(\"artCycle/getCyclesDetails\", patient.value.id);\n        });\n\n        return {\n            cycle,\n            patient,\n            isBornCycle\n        };\n    }\n};\n</script>\n","import { render } from \"./header-info.vue?vue&type=template&id=a2263678\"\nimport script from \"./header-info.vue?vue&type=script&lang=js\"\nexport * from \"./header-info.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./defalut.vue?vue&type=template&id=574d640e&scoped=true\"\nimport script from \"./defalut.vue?vue&type=script&lang=js\"\nexport * from \"./defalut.vue?vue&type=script&lang=js\"\n\nimport \"./defalut.vue?vue&type=style&index=0&id=574d640e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-574d640e\"\n\nexport default script","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport DefaultLayout from \"@/components/layouts/defalut.vue\";\n\nconst routes = [\n    {\n        path: \"/\",\n        component: DefaultLayout,\n        children: [\n            {\n                path: \"\",\n                redirect: \"/login\"\n            },\n            {\n                path: \"art-cycle\",\n                name: \"ArtCycle\",\n                component: () => import(\"@/views/art-cycle.vue\")\n            },\n            {\n                path: \"fertilization\",\n                name: \"Fertilization\",\n                component: () => import(\"@/views/fertilization.vue\")\n            },\n            {\n                path: \"fertilization/create\",\n                name: \"FertilizationCreate\",\n                component: () =>\n                    import(\"@/components/fertilization/create-form.vue\")\n            },\n            {\n                path: \"cycle-monitoring\",\n                name: \"CycleMonitoring\",\n                component: () => import(\"@/views/cyccle-monitoring.vue\")\n            },\n            {\n                path: \"opu\",\n                name: \"OPU\",\n                component: () => import(\"@/views/opu.vue\")\n            },\n            {\n                path: \"semen\",\n                name: \"Semen\",\n                component: () => import(\"@/views/semen.vue\")\n            },\n            {\n                path: \"semen-cryo-storage\",\n                name: \"SemenCryoStorage\",\n                component: () => import(\"@/views/semen-cryo-storage.vue\")\n            },\n            {\n                path: \"pregnancy\",\n                name: \"Pregnancy\",\n                component: () => import(\"@/views/pregnancy.vue\")\n            },\n            {\n                path: \"embryo-transfer\",\n                name: \"EmbryoTransfer\",\n                component: () => import(\"@/views/embryo-transfer.vue\")\n            },\n            {\n                path: \"cryo-storage\",\n                name: \"CryoStorage\",\n                component: () => import(\"@/views/cryo-storage.vue\")\n            },\n            {\n                path: \"blood-tests\",\n                name: \"BloddTests\",\n                component: () => import(\"@/views/blood-tests.vue\")\n            },\n            {\n                path: \"daily-report\",\n                name: \"DailyReport\",\n                component: () => import(\"@/views/daily-report.vue\")\n            },\n            {\n                path: \"cycle-report\",\n                name: \"CycleReport\",\n                component: () => import(\"@/views/cycle-report.vue\")\n            },\n            {\n                path: \"patient-message-log\",\n                name: \"PatientMessageLog\",\n                component: () => import(\"@/views/patient-message-log.vue\")\n            },\n            {\n                path: \"message-inbox\",\n                name: \"MessageInbox\",\n                component: () => import(\"@/views/message-inbox.vue\")\n            },\n            {\n                path: \"born\",\n                name: \"Born\",\n                component: () => import(\"@/views/born.vue\")\n            },\n            {\n                path: \"test\",\n                name: \"test\",\n                component: () => import(\"@/views/test.vue\")\n            }\n        ]\n    },\n    {\n        path: \"/login\",\n        component: () => import(\"@/views/login.vue\"),\n        name: \"Login\"\n    },\n    {\n        path: \"/:catchAll(.*)\",\n        component: () => import(\"@/views/not-found.vue\")\n    }\n];\n\nconst router = createRouter({\n    history: createWebHashHistory(process.env.BASE_URL),\n    routes\n});\n\nrouter.beforeEach((to, from, next) => {\n    const isAuthenticated = localStorage.getItem(\"user\");\n\n    if (to.name !== \"Login\" && !isAuthenticated) next({ name: \"Login\" });\n    else next();\n});\n\nexport default router;\n","import { BASE_URL } from \"../config.js\";\nimport axios from \"axios\";\n\nconst $axios = axios.create({\n    baseURL: BASE_URL\n});\n\nconst authoreizeAxios = () => {\n    const auth = JSON.parse(localStorage.getItem(\"user\"));\n    if (auth) {\n        $axios.defaults.headers.common = {\n            Authorization: `Bearer ${auth.accessToken}`,\n        };\n    }\n};\n\nauthoreizeAxios();\n\nexport { $axios, authoreizeAxios };\n","const PatientType = {\n    FEMALE: \"female\",\n    MALE: \"male\"\n};\n\nconst BASE_URL = \"http://tablet.nlf.clinic:3280/wsl-cycles\"; // prod dev\n// const BASE_URL = \"http://localhost:8000\"; // dev env\nconst DATE_FORMAT_STRING = \"yyyy-MM-dd\";\n\nexport { PatientType, BASE_URL, DATE_FORMAT_STRING };\n"],"sourceRoot":""}