{"version":3,"sources":["webpack:///./src/assets/women.png","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/views/barcodes/scan.vue","webpack:///./src/components/test/patient-scan-history.vue","webpack:///./src/components/test/patient-scan-history.vue?1005","webpack:///./src/views/barcodes/scan.vue?133f","webpack:///./src/assets/men.png","webpack:///./node_modules/vue-demi/lib/index.mjs","webpack:///./src/views/barcodes/scan.vue?a0a3"],"names":["module","exports","_arrayWithHoles","r","Array","isArray","_iterableToArrayLimit","l","t","Symbol","iterator","e","n","i","u","a","f","o","call","next","Object","done","push","value","length","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","style","class","for","src","label","goToBarcodePage","sessionId","type","scannedBarcode","placeholder","id","handleBarcodeScan","ref","fopcusOut","scan_person","key","index","patientPicture","gender","patientId","patientFirstName","patientLastName","patientDOB","showHistoryDialog","scannedAT","partnerId","partnerFirstName","partnerLastName","partnerDOB","partnerGender","partnerPicture","scan_items","item","title","firstName","lastName","dob","scannedAt","icon","closeBlockItem","resetScanItems","personId","showScanBarcodeDataPage","selectedOption","options","actionOptions","optionLabel","optionValue","showClear","saveScanItems","header","visible","historyDialogVisible","closeHistoryDialog","invalidBarcodeDialogVisible","modal","closable","warningMessages","msg","store","state","user","username","currentTime","currentDate","barcodeReason","showValidation","handleCloseWarningDialog","historyData","field","props","Number","setup","fetchData","patient_id","get","params","data","__exports__","components","PatientScanHistory","inputRef","loading","focusing","toast","personId2","patient","partner","updateDateTime","now","Date","toLocaleTimeString","toLocaleDateString","addScannedItem","barcodeExists","some","existingItem","savedBarcode","processBarcodeData","barcode","isNaN","toString","getProfilePictures","patientPartner","response","person","labPatient","itemData","labBarcode","scannedItem","containerName","logo","sex","payload","time","date","reason","post","Promise","all","resolve","photo","content_type","patientRes","partnerRes","splice","action","scannedItems","add","severity","summary","detail","life","router","focusInput","focus","path","url","window","open","render"],"mappings":"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","file":"js/chunk-7a75274e.54080376.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/women.f05f7bfb.png\";","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","<template>\r\n    <div>\r\n        <div\r\n            style=\"display:flex; justify-content: space-between; background-color: #e8d8a7; padding: 10px; margin-bottom: 10px\"\r\n        >\r\n            <div class=\"title-and-input\" style=\"margin-bottom:5px;\">\r\n                <div style=\"display: flex; gap: 10px;\">\r\n                    <p-button\r\n                        label=\"Back\"\r\n                        class=\"p-button-sm\"\r\n                        style=\"margin-bottom: 10px;\"\r\n                        @click=\"goToBarcodePage\"\r\n                    />\r\n                    <label>{{ sessionId }}</label>\r\n                </div>\r\n                <label for=\"barcode-scanner\">Please scan barcode here</label>\r\n                <input\r\n                    type=\"text\"\r\n                    class=\"p-inputtext\"\r\n                    v-model=\"scannedBarcode\"\r\n                    placeholder=\"Scan Barcode\"\r\n                    id=\"barcode-scanner\"\r\n                    @keyup.enter=\"handleBarcodeScan\"\r\n                    ref=\"inputRef\"\r\n                    v-on:blur=\"fopcusOut\"\r\n                    style=\"width:250px;\"\r\n                />\r\n            </div>\r\n            <div class=\"section\">\r\n                <div>\r\n                    <div\r\n                        style=\"display: inline-block;\"\r\n                        v-if=\"scan_person !== null\"\r\n                        :key=\"index\"\r\n                    >\r\n                        <div\r\n                            class=\"block-item1\"\r\n                            style=\"background-color:#FFFFFF;\"\r\n                        >\r\n                            <div style=\"margin-right: 15px; \">\r\n                                <img\r\n                                    v-if=\"patientPicture\"\r\n                                    style=\"height: 100px;\"\r\n                                    :src=\"patientPicture\"\r\n                                />\r\n                                <img\r\n                                    v-else-if=\"scan_person.gender == 'F'\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                                <img\r\n                                    v-else\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                class=\"inner-block\"\r\n                                style=\"background-color:#d3D3D3;\"\r\n                            >\r\n                                <div\r\n                                    style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                                >\r\n                                    <div\r\n                                        style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                    >\r\n                                        <span\r\n                                            >{{ scan_person.patientId }}\r\n                                            {{ scan_person.patientFirstName }}\r\n                                            {{\r\n                                                scan_person.patientLastName\r\n                                            }}</span\r\n                                        >\r\n                                        <span\r\n                                            >{{ scan_person.patientDOB }}\r\n                                            {{ scan_person.gender }}</span\r\n                                        >\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        label=\"Show History\"\r\n                                        :style=\"{\r\n                                            width: 200 + 'px'\r\n                                        }\"\r\n                                        @click=\"showHistoryDialog\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                style=\"width: 100px; font-style: italic; display:flex; justify-items:center; align-items:center;\"\r\n                            >\r\n                                <center>{{ scan_person.scannedAT }}</center>\r\n                            </div>\r\n                            <div\r\n                                class=\"inner-block\"\r\n                                style=\"background-color:#d3D3D3;\"\r\n                                v-if=\"scan_person.partnerId !== null\"\r\n                            >\r\n                                <div\r\n                                    style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                                >\r\n                                    <div\r\n                                        style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                    >\r\n                                        <span\r\n                                            >{{ scan_person.partnerId }}\r\n                                            {{ scan_person.partnerFirstName }}\r\n                                            {{\r\n                                                scan_person.partnerLastName\r\n                                            }}</span\r\n                                        >\r\n                                        <span\r\n                                            >{{ scan_person.partnerDOB }}\r\n                                            {{\r\n                                                scan_person.partnerGender\r\n                                            }}</span\r\n                                        >\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        label=\"Show History\"\r\n                                        :style=\"{\r\n                                            width: 200 + 'px'\r\n                                        }\"\r\n                                        @click=\"showHistoryDialog\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"margin-left: 15px; \">\r\n                                <img\r\n                                    v-if=\"partnerPicture\"\r\n                                    style=\"height: 100px;\"\r\n                                    :src=\"partnerPicture\"\r\n                                />\r\n                                <img\r\n                                    v-else-if=\"scan_person.partnerGender == 'F'\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                                <img\r\n                                    v-else\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/men.png\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div class=\"section\">\r\n                <div>\r\n                    <div\r\n                        style=\"display: inline-block;\"\r\n                        v-for=\"(item, index) in scan_items\"\r\n                        :key=\"index\"\r\n                    >\r\n                        <div\r\n                            class=\"block-item\"\r\n                            :style=\"{\r\n                                'background-color':\r\n                                    item.type !== 'person'\r\n                                        ? '#FC94AF'\r\n                                        : '#FFFFFF'\r\n                            }\"\r\n                        >\r\n                            <div style=\"margin-right: 15px; \">\r\n                                <p>{{ item.title }}</p>\r\n                                <img\r\n                                    v-if=\"item.type === 'person'\"\r\n                                    style=\"width: 100px; height: 100px;\"\r\n                                    src=\"../../assets/women.png\"\r\n                                />\r\n                                <p\r\n                                    v-else\r\n                                    style=\"width: 100px; height: 100px; ;\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                class=\"inner-block\"\r\n                                :style=\"{\r\n                                    'background-color':\r\n                                        item.type !== 'person'\r\n                                            ? '#D4A373'\r\n                                            : '#d3D3D3'\r\n                                }\"\r\n                            >\r\n                                <div\r\n                                    style=\"margin-bottom: 10px; display: flex; justify-content: space-between;\"\r\n                                >\r\n                                    <div\r\n                                        style=\"display: flex; flex-direction: column; gap: 2px;\"\r\n                                    >\r\n                                        <span>{{ item.id }}</span>\r\n                                        <span>{{ item.firstName }}</span>\r\n                                        <span>{{ item.lastName }}</span>\r\n                                        <span>{{ item.dob }}</span>\r\n                                        <span>{{ item.gender }}</span>\r\n                                        <span>{{ item.scannedAt }}</span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p-button\r\n                                            icon=\"pi pi-times\"\r\n                                            class=\"p-button-sm\"\r\n                                            @click=\"closeBlockItem(item, index)\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <p-button\r\n                                        label=\"Show History\"\r\n                                        :style=\"{\r\n                                            width: 200 + 'px'\r\n                                        }\"\r\n                                        @click=\"showHistoryDialog\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style=\"display: flex; justify-content: space-between;\">\r\n            <div style=\"display: flex; gap: 10px;\">\r\n                <div>\r\n                    <p-button\r\n                        label=\"Reset\"\r\n                        class=\"p-button-lg p-button-danger\"\r\n                        @click=\"resetScanItems\"\r\n                    />\r\n                </div>\r\n                <div v-if=\"personId\">\r\n                    <p-button\r\n                        label=\"Report\"\r\n                        class=\"p-button-lg\"\r\n                        @click=\"showScanBarcodeDataPage\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p-dropdown\r\n                    v-model=\"selectedOption\"\r\n                    id=\"selectedOption\"\r\n                    :options=\"actionOptions\"\r\n                    optionLabel=\"label\"\r\n                    optionValue=\"value\"\r\n                    :showClear=\"true\"\r\n                    style=\"min-width: 400px; background-color: #e8d8a7; min-height: 38px;\"\r\n                />\r\n                <p-button\r\n                    label=\"Save\"\r\n                    class=\"p-button-lg\"\r\n                    style=\"margin-left: 10px;\"\r\n                    @click=\"saveScanItems\"\r\n                />\r\n            </div>\r\n        </div>\r\n        <p-dialog\r\n            header=\"Scanned History\"\r\n            v-model:visible=\"historyDialogVisible\"\r\n            @onHide=\"closeHistoryDialog\"\r\n            style=\"width: 1000px;\"\r\n        >\r\n            <patient-scan-history :patientId=\"personId\" />\r\n        </p-dialog>\r\n        <p-dialog\r\n            v-model:visible=\"invalidBarcodeDialogVisible\"\r\n            :modal=\"true\"\r\n            :closable=\"false\"\r\n            style=\"width: 1400px;\"\r\n        >\r\n            <div\r\n                v-for=\"(msg, index) in warningMessages\"\r\n                :key=\"index\"\r\n                class=\"flex p-mt-6\"\r\n                style=\"display: flex; justify-content: center;\"\r\n            >\r\n                <i\r\n                    class=\"pi pi-exclamation-triangle\"\r\n                    style=\"font-size: 160px; color: red; margin-right: 20px;\"\r\n                ></i>\r\n                <strong\r\n                    class=\"p-text-bold\"\r\n                    :style=\"{ fontSize: '150px', color: 'red' }\"\r\n                    >{{ msg.title }}</strong\r\n                >\r\n            </div>\r\n            <div>\r\n                <p\r\n                    style=\"font-size: 80px; color: red; display: flex; justify-content: center; font-weight: bold;\"\r\n                >\r\n                    INVALID BARCODE\r\n                </p>\r\n            </div>\r\n            <div class=\"p-field p-mt-6\">\r\n                <label\r\n                    for=\"reason\"\r\n                    class=\"p-mr-2 font-medium\"\r\n                    style=\"width: 100px;\"\r\n                    >Username</label\r\n                >\r\n                <label for=\"reason\" class=\"p-mr-2 font-medium\">{{\r\n                    store.state.user.username\r\n                }}</label>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label\r\n                    for=\"reason\"\r\n                    class=\"p-mr-2 font-medium\"\r\n                    style=\"width: 100px;\"\r\n                    >Time</label\r\n                >\r\n                <label for=\"reason\" class=\"p-mr-2 font-medium\">{{\r\n                    currentTime\r\n                }}</label>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label\r\n                    for=\"reason\"\r\n                    class=\"p-mr-2 font-medium\"\r\n                    style=\"width: 100px;\"\r\n                    >Date</label\r\n                >\r\n                <label for=\"reason\" class=\"p-mr-2 font-medium\">{{\r\n                    currentDate\r\n                }}</label>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"reason\" class=\"block p-mr-2 font-medium\"\r\n                    >Reason<span class=\"text-red-500\">*</span></label\r\n                >\r\n                <p-input-text\r\n                    id=\"reason\"\r\n                    v-model=\"barcodeReason\"\r\n                    style=\"width: 750px;\"\r\n                    :class=\"{ 'p-invalid': showValidation && !barcodeReason }\"\r\n                />\r\n                <small\r\n                    v-if=\"showValidation && !barcodeReason\"\r\n                    class=\"p-error p-ml-2\"\r\n                    >Reason is required.</small\r\n                >\r\n            </div>\r\n            <div class=\"p-mt-4\">\r\n                <p-button\r\n                    label=\"Close\"\r\n                    icon=\"pi pi-times\"\r\n                    @click=\"handleCloseWarningDialog\"\r\n                />\r\n            </div>\r\n        </p-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { $axios } from \"@/service/app-http\";\r\nimport { onMounted, ref, watch, onBeforeUnmount } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { serialize } from \"php-serialize\";\r\nimport { ZEBRA_PRING_URL, NL_FORM_BASE } from \"@/constants\";\r\nimport { ORIGIN } from \"./../../config\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { Dialog } from \"primevue/dialog\";\r\nimport PatientScanHistory from \"@/components/test/patient-scan-history.vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n    components: {\r\n        PatientScanHistory\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n        const inputRef = ref(null);\r\n        const loading = ref(false);\r\n        const patientPicture = ref(null);\r\n        const partnerPicture = ref(null);\r\n\r\n        const scannedBarcode = ref(null);\r\n        let focusing = false; // A flag to track if focusing is in progress\r\n        const toast = useToast();\r\n        const personId = ref(null);\r\n        const personId2 = ref(null);\r\n        const sessionId = ref(null);\r\n        const selectedOption = ref(null);\r\n        const patient = ref({});\r\n        const partner = ref({});\r\n        const historyDialogVisible = ref(false);\r\n        const historyData = ref([]);\r\n        const scan_items = ref([]);\r\n        const scan_person = ref(null);\r\n        const actionOptions = ref([\r\n            {\r\n                label: \"ICSI\",\r\n                value: \"ICSI\"\r\n            },\r\n            {\r\n                label: \"stripping\",\r\n                value: \"stripping\"\r\n            },\r\n            {\r\n                label: \"Ca++\",\r\n                value: \"Ca++\"\r\n            },\r\n            {\r\n                label: \"IVF\",\r\n                value: \"IVF\"\r\n            },\r\n            {\r\n                label: \"transfer to ET dish\",\r\n                value: \"transfer to ET dish\"\r\n            },\r\n            {\r\n                label: \"fertilization check\",\r\n                value: \"fertilization check\"\r\n            },\r\n            {\r\n                label: \"day 3\",\r\n                value: \"day 3\"\r\n            },\r\n            {\r\n                label: \"day 5\",\r\n                value: \"day 5\"\r\n            },\r\n            {\r\n                label: \"OPU\",\r\n                value: \"OPU\"\r\n            },\r\n            {\r\n                label: \"ET\",\r\n                value: \"ET\"\r\n            },\r\n            {\r\n                label: \"embryo glue\",\r\n                value: \"embryo glue\"\r\n            },\r\n            {\r\n                label: \"vitrify\",\r\n                value: \"vitrify\"\r\n            },\r\n            {\r\n                label: \"insemination\",\r\n                value: \"insemination\"\r\n            }\r\n        ]);\r\n\r\n        const currentTime = ref(\"\");\r\n        const currentDate = ref(\"\");\r\n\r\n        const updateDateTime = () => {\r\n            const now = new Date();\r\n            currentTime.value = now.toLocaleTimeString();\r\n            currentDate.value = now.toLocaleDateString();\r\n        };\r\n\r\n        const invalidBarcodeDialogVisible = ref(false);\r\n        const warningMessages = ref([]);\r\n        const barcodeReason = ref(\"\");\r\n\r\n        const showHistoryDialog = () => {\r\n            historyDialogVisible.value = true;\r\n        };\r\n\r\n        const closeHistoryDialog = () => {\r\n            historyDialogVisible.value = false;\r\n        };\r\n        // Function to add a scanned item to scan_items if it's not already present\r\n        const addScannedItem = (item) => {\r\n            const barcodeExists = scan_items.value.some(\r\n                (existingItem) => existingItem.id === item.id\r\n            );\r\n            if (!barcodeExists) {\r\n                scan_items.value.push(item);\r\n            }\r\n        };\r\n\r\n        let savedBarcode = \"\";\r\n        // Function to handle barcode scanning\r\n        const handleBarcodeScan = () => {\r\n            // Process barcode data and create the item object\r\n            // Replace the following line with your barcode data processing logic\r\n            // console.log(\"Barcode scanned:\", scannedBarcode.value);\r\n            savedBarcode = scannedBarcode.value;\r\n            processBarcodeData(scannedBarcode.value);\r\n            scannedBarcode.value = \"\";\r\n        };\r\n\r\n        const scannedAT = ref(null); \r\n\r\n        const processBarcodeData = async (barcode) => {\r\n            if (!barcode) return;\r\n            try {\r\n                if (!isNaN(barcode)) {\r\n                    // If barcode is a number: get person data\r\n                    if (scan_person.value === null) {\r\n                        const { data } = await $axios.get(\r\n                            `lab-barcode/get-person-data/${barcode}`\r\n                        );\r\n\r\n                        personId.value = data.patientId;\r\n                        personId2.value = data.partnerId;\r\n                        sessionId.value =\r\n                            store.state.user.id + Date.now().toString(36);\r\n                        scan_person.value = data;\r\n\r\n                        getProfilePictures(data.patientId, data.partnerId);\r\n                    }\r\n                } else {\r\n                    // Barcode is a container\r\n                    let data;\r\n\r\n                    if (personId.value !== null) {\r\n                        let patientPartner = personId.value;\r\n\r\n                        if (personId2.value !== null) {\r\n                            patientPartner += \".\" + personId2.value;\r\n                        }\r\n\r\n                        const response = await $axios.get(\r\n                            `lab-barcode/get-patient-barcode-data/${patientPartner}/${barcode}`\r\n                        );\r\n                        data = response.data;\r\n                    } else {\r\n                        const response = await $axios.get(\r\n                            `lab-barcode/get-barcode-data/${barcode}`\r\n                        );\r\n                        data = response.data;\r\n\r\n                        const person = data.labPatient;\r\n                        personId.value = person.patientId;\r\n                        personId2.value = person.partnerId;\r\n                        sessionId.value =\r\n                            store.state.user.id + Date.now().toString(36);\r\n                        scan_person.value = person;\r\n\r\n                        getProfilePictures(person.patientId, person.partnerId);\r\n                    }\r\n\r\n                    const itemData = data.labBarcode || data;\r\n\r\n                    const scannedItem = {\r\n                        id: itemData.barcode,\r\n                        type: \"container\",\r\n                        title: itemData.containerName,\r\n                        logo: \"logo1\",\r\n                        firstName: itemData.patientFirstName,\r\n                        lastName: itemData.patientLastName,\r\n                        dob: itemData.patientDOB,\r\n                        gender: itemData.sex,\r\n                        scannedAt: itemData.scannedAT\r\n                    };\r\n\r\n                    addScannedItem(scannedItem);\r\n                }\r\n            } catch (err) {\r\n                // console.log(err.response.data.scannedAT);\r\n                scannedAT.value = err.response.data.scannedAT;\r\n                warningMessages.value = [{ title: \"WARNING !\" }];\r\n                invalidBarcodeDialogVisible.value = true;\r\n            }\r\n        };\r\n\r\n        const showValidation = ref(false);\r\n\r\n        const handleCloseWarningDialog = async (barcode) => {\r\n            showValidation.value = true;\r\n\r\n            if (!barcodeReason.value) {\r\n                return;\r\n            }\r\n\r\n            const payload = {\r\n                username: store.state.user.username,\r\n                time: currentTime.value,\r\n                date: currentDate.value,\r\n                reason: barcodeReason.value,\r\n                barcode: savedBarcode,\r\n                personId: personId.value,\r\n                personId2: personId2.value,\r\n                scannedAT: scannedAT.value, \r\n            };\r\n\r\n            try {\r\n                await $axios.post(\"lab-test/post-invalid-barcode\", payload);\r\n                barcodeReason.value = \"\";\r\n                showValidation.value = false;\r\n                invalidBarcodeDialogVisible.value = false;\r\n            } catch (error) {\r\n                // console.error('Failed to submit barcode error:', error)\r\n            }\r\n        };\r\n\r\n        const getProfilePictures = async (patientId, partnerId) => {\r\n            if (patientId) {\r\n                try {\r\n                    const [patientRes, partnerRes] = await Promise.all([\r\n                        $axios.get(`photo/by-patient/${patientId}`),\r\n                        partnerId\r\n                            ? $axios.get(`photo/by-patient/${partnerId}`)\r\n                            : Promise.resolve({\r\n                                  data: { photo: null, content_type: null }\r\n                              })\r\n                    ]);\r\n\r\n                    patientPicture.value = patientRes.data?.photo\r\n                        ? `data:${patientRes.data.content_type};base64,${patientRes.data.photo}`\r\n                        : null;\r\n\r\n                    partnerPicture.value = partnerRes.data?.photo\r\n                        ? `data:${partnerRes.data.content_type};base64,${partnerRes.data.photo}`\r\n                        : null;\r\n                    //console.log(data);\r\n                } catch (err) {}\r\n            }\r\n\r\n            // if (partnerId) {\r\n            //     try {\r\n            //         const { data } = await $axios.get(\r\n            //             `photo/by-patient/${partnerId}`\r\n            //         );\r\n\r\n            //         partnerPicture.value = partnerRes.data?.photo\r\n            //             ? `data:${partnerRes.data.content_type};base64,${partnerRes.data.photo}`\r\n            //             : null;\r\n            //     } catch (err) {}\r\n            // }\r\n        };\r\n\r\n        const closeBlockItem = (item, index) => {\r\n            // Use splice to remove the item from scan_items by index\r\n\r\n            if (item.type === \"person\") scan_items.value = [];\r\n            else scan_items.value.splice(index, 1);\r\n        };\r\n\r\n        const saveScanItems = async () => {\r\n            if (selectedOption !== null || selectedOption !== \"\") {\r\n                const payload = {\r\n                    action: selectedOption.value,\r\n                    patientId: personId.value,\r\n                    partnerId: personId2.value,\r\n                    sessionId: sessionId.value,\r\n                    scannedItems: scan_items.value\r\n                };\r\n\r\n                try {\r\n                    const { data } = await $axios.post(\r\n                        `lab-barcode/save-scans`,\r\n                        payload\r\n                    );\r\n                    // console.log(data);\r\n\r\n                    toast.add({\r\n                        severity: \"success\",\r\n                        summary: \"Success\",\r\n                        detail: \"Scan items saved successfully\",\r\n                        life: 5000 // Adjust this value as needed\r\n                    });\r\n                } catch (err) {}\r\n            }\r\n        };\r\n\r\n        const resetScanItems = () => {\r\n            scan_items.value = [];\r\n            scan_person.value = null;\r\n            personId.value = null;\r\n            personId2.value = null;\r\n            sessionId.value = store.state.user.id + Date.now().toString(36);\r\n        };\r\n\r\n        const router = useRouter();\r\n        onMounted(() => {\r\n            updateDateTime();\r\n            focusInput();\r\n        });\r\n\r\n        watch(scannedBarcode, () => {\r\n            if (!focusing && !invalidBarcodeDialogVisible.value) {\r\n                focusInput();\r\n            }\r\n        });\r\n        const focusInput = () => {\r\n            focusing = true;\r\n            if (inputRef.value) {\r\n                inputRef.value.focus();\r\n            }\r\n            focusing = false;\r\n        };\r\n\r\n        const fopcusOut = () => {\r\n            if (!invalidBarcodeDialogVisible.value) {\r\n                focusing = false;\r\n                focusInput();\r\n            }\r\n        };\r\n\r\n        return {\r\n            loading,\r\n            patient,\r\n            partner,\r\n            partnerPicture,\r\n            patientPicture,\r\n            personId,\r\n            personId2,\r\n            sessionId,\r\n            store,\r\n            scan_items,\r\n            scannedBarcode,\r\n            handleBarcodeScan,\r\n            closeBlockItem,\r\n            saveScanItems,\r\n            selectedOption,\r\n            toast,\r\n            inputRef,\r\n            fopcusOut,\r\n            historyDialogVisible,\r\n            historyData,\r\n            showHistoryDialog,\r\n            closeHistoryDialog,\r\n            scan_person,\r\n            actionOptions,\r\n            resetScanItems,\r\n            goToBarcodePage: () => {\r\n                router.push({ path: \"/barcodes\" });\r\n            },\r\n            invalidBarcodeDialogVisible,\r\n            warningMessages,\r\n            barcodeReason,\r\n            handleCloseWarningDialog,\r\n            showValidation,\r\n            currentTime,\r\n            currentDate,\r\n            showScanBarcodeDataPage: () => {\r\n                const url =\r\n                    NL_FORM_BASE +\r\n                    \"/cycles-reports/print-scan-barcode-data.php?patientId=\" +\r\n                    personId.value;\r\n                window.open(url);\r\n            }\r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.p-card .p-card-content {\r\n    padding: 0;\r\n}\r\n\r\n.block-item1 {\r\n    display: flex;\r\n    border: 1px solid #8cb3d9;\r\n    padding: 10px;\r\n}\r\n\r\n.block-item {\r\n    display: flex;\r\n    border: 1px solid #8cb3d9;\r\n    padding: 10px;\r\n    margin-right: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.title-and-input {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    margin-left: 10px;\r\n    margin-top: 35px;\r\n}\r\n\r\n.inner-block {\r\n    padding: 10px;\r\n}\r\n\r\n.separator {\r\n    width: 1px;\r\n    background-color: #000; /* Set the color of the separator */\r\n    margin: 0 10px; /* Adjust the margin to control the spacing */\r\n}\r\n</style>\r\n","<template>\r\n     <div class=\"p-grid\">\r\n        <p-data-table :value=\"historyData\">\r\n            <p-column field=\"patiendId\" header=\"ID\" />\r\n            <p-column field=\"containerId\" header=\"Container Id\" />\r\n            <p-column field=\"containerName\" header=\"Container Name\" />\r\n            <p-column field=\"barcode\" header=\"Barcode\" />\r\n            <p-column field=\"generatedAt\" header=\"Generated At\" />\r\n            <p-column field=\"patientFirstName\" header=\"Patient First Name\" />\r\n            <p-column field=\"patientLastName\" header=\"Patient Last Name\" />\r\n            <p-column field=\"gender\" header=\"gender\" />\r\n            <p-column field=\"savedBy\" header=\"Saved By\" />\r\n        </p-data-table>                         \r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { ref, onMounted } from \"vue\";\r\nimport { toRefs } from \"vue-demi\";\r\nimport { $axios } from \"@/service/app-http\";\r\n\r\nexport default {\r\n    props: {\r\n        patientId: Number\r\n    },\r\n    setup(props) {\r\n        const historyData = ref([]);\r\n        const { patientId } = toRefs(props);\r\n\r\n        const fetchData = async (patient_id) => {\r\n       \r\n           // try {\r\n                const { data } = await $axios.get(`lab-barcode/list-scan-items/${patient_id}`, {\r\n                    params: {}\r\n                });\r\n                                              \r\n                historyData.value = data.data;                 \r\n\r\n           // } catch (err) {}\r\n        }\r\n\r\n        // Call fetchData when the component is created\r\n        onMounted(() => {\r\n            fetchData(patientId.value);\r\n        });\r\n\r\n        return {\r\n            historyData \r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import { render } from \"./patient-scan-history.vue?vue&type=template&id=4a7940fa&scoped=true\"\nimport script from \"./patient-scan-history.vue?vue&type=script&lang=js\"\nexport * from \"./patient-scan-history.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a7940fa\"]])\n\nexport default __exports__","import { render } from \"./scan.vue?vue&type=template&id=371dc9dc&scoped=true\"\nimport script from \"./scan.vue?vue&type=script&lang=js\"\nexport * from \"./scan.vue?vue&type=script&lang=js\"\n\nimport \"./scan.vue?vue&type=style&index=0&id=371dc9dc&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-371dc9dc\"]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/men.a5e81f19.png\";","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./scan.vue?vue&type=style&index=0&id=371dc9dc&scoped=true&lang=css\""],"sourceRoot":""}