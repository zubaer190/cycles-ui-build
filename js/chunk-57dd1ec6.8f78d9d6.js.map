{"version":3,"sources":["webpack:///./src/views/message-inbox.vue","webpack:///./src/views/message-inbox.vue?0841","webpack:///./src/service/patient-message-log.js"],"names":["class","for","label","legend","value","messages","responsiveLayout","showGridlines","loading","header","field","style","body","data","openReplyDialog","visible","replyDialog","closable","footer","closeReplyDialog","send","isMessageThred","relatedMessages","disabled","rows","showMessageThread","replyTo","form","subject","message","setup","store","sendTo","sentBy","state","user","providerNo","senderType","parent","sendBy","pid","relatedMsg","websocket","sendLoading","newMessage","JSON","stringify","sender_id","id","receiver_id","artCycle","patient","terminal","getMessages","messageRecords","setupWebsocket","onmessage","event","parse","onerror","toast","add","severity","summary","detail","life","__exports__","render","registerPatient","payload","$axios","post","getPatientInformation","get","patientDetails","searchAllPatient","term","params","getPatient","getAllMessages","getPatientMessage","name","patientId","composeMessage","getRelatedMessges","parentMsgId"],"mappings":"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","file":"js/chunk-57dd1ec6.8f78d9d6.js","sourcesContent":["<template>\n    <div class=\"p-d-flex p-jc-end\">\n        <div class=\"p-field-checkbox p-mr-2 p-mt-2\">\n            <p-checkbox />\n            <label for=\"\">Select All</label>\n        </div>\n        <p-button label=\"Archive\" class=\"p-mr-2\" />\n        <p-button label=\"Appointment Stat\" />\n    </div>\n\n    <p-fieldset legend=\"All Messages\">\n        <p-data-table\n            :value=\"messages\"\n            responsiveLayout=\"scroll\"\n            showGridlines\n            class=\"p-datatable-sm p-mb-1\"\n            :loading=\"loading\"\n        >\n            <p-column header=\"Date\" field=\"sentdate\" style=\"width: 150px\" />\n            <p-column header=\"Subject\" field=\"subject\" />\n            <p-column header=\"From\" field=\"sendBy\" />\n            <p-column header=\"Message\" field=\"message\" />\n            <p-column header=\"Action\" field=\"action\" style=\"width: 150px\">\n                <template #body=\"{data}\">\n                    <p-button\n                        label=\"Reply\"\n                        class=\"p-button-sm p-mr-1\"\n                        @click=\"openReplyDialog(data)\"\n                    />\n                    <p-button label=\"ENG\" class=\"p-button-sm\" />\n                </template>\n            </p-column>\n        </p-data-table>\n    </p-fieldset>\n\n    <p-dialog\n        v-model:visible=\"replyDialog\"\n        :closable=\"false\"\n        style=\"width: 600px\"\n    >\n        <p-fieldset legend=\"Previous Conversation\">\n            <p-textarea\n                v-model=\"relatedMessages\"\n                disabled\n                rows=\"10\"\n                class=\"p-mt-1\"\n                style=\"width: 100%\"\n                v-if=\"isMessageThred\"\n            />\n            <p-button\n                label=\"Show Message Thread\"\n                v-else\n                @click=\"showMessageThread\"\n            />\n        </p-fieldset>\n        <p-fieldset :legend=\"replyTo\" class=\"p-mt-2\">\n            <div class=\"p-field\">\n                <label>Subject - {{ form.subject }}</label>\n                <p-textarea\n                    v-model=\"form.message\"\n                    rows=\"4\"\n                    class=\"p-mt-1\"\n                    style=\"width: 100%\"\n                />\n            </div>\n        </p-fieldset>\n\n        <template #footer>\n            <p-button label=\"Cancel\" @click=\"closeReplyDialog\" />\n            <p-button label=\"Send\" @click=\"send\" :loading=\"loading\" />\n        </template>\n    </p-dialog>\n</template>\n\n<script>\nimport { inject, onMounted, reactive, ref } from \"vue\";\nimport {\n    getAllMessages,\n    composeMessage,\n    getRelatedMessges\n} from \"@/service/patient-message-log\";\nimport { useStore } from \"vuex\";\nexport default {\n    setup() {\n        const store = useStore();\n        const messages = ref([]);\n        const loading = ref(false);\n        const replyDialog = ref(false);\n\n        const form = reactive({\n            subject: null,\n            message: null,\n            sendTo: null,\n            sentBy: store.state.user.providerNo,\n            senderType: 1,\n            parent: null\n        });\n\n        const replyTo = ref();\n\n        const openReplyDialog = (data) => {\n            replyTo.value = `Reply To ${data.sendBy}`;\n\n            form.subject = data.subject;\n            form.sendTo = data.pid;\n            form.parent = data.parent;\n\n            replyDialog.value = true;\n            relatedMessages.value = null;\n            isMessageThred.value = false;\n        };\n\n        const isMessageThred = ref(false);\n\n        const relatedMessages = ref();\n        const showMessageThread = async () => {\n            isMessageThred.value = true;\n            const { relatedMsg } = await getRelatedMessges(form.parent);\n            relatedMessages.value = relatedMsg;\n        };\n\n        const websocket = inject(\"websocket\");\n        const sendLoading = ref(false);\n        const send = async () => {\n            sendLoading.value = true;\n            const { newMessage } = await composeMessage({\n                ...form\n            });\n\n            websocket.send(\n                JSON.stringify({\n                    sender_id: store.state.user.id,\n                    receiver_id: store.state.artCycle.patient.id,\n                    terminal: \"cycle\",\n                })\n            );\n\n            form.subject = null;\n            form.message = null;\n            replyDialog.value = false;\n            sendLoading.value = false;\n        };\n\n        const getMessages = async () => {\n            loading.value = true;\n            try {\n                const { messageRecords } = await getAllMessages();\n                messages.value = messageRecords;\n            } catch (err) {\n                messages.value = [];\n            } finally {\n                loading.value = false;\n            }\n        };\n\n        const setupWebsocket = () => {\n            const websocket = inject(\"websocket\");\n            websocket.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n                if (typeof data.data == \"string\") {\n                    const message = JSON.parse(data.data);\n                    if (message.terminal == \"nlp\") {\n                        getMessages();\n                    }\n                }\n            };\n\n            websocket.onerror = () => {\n                toast.add({\n                    severity: \"warn\",\n                    summary: \"Server Down\",\n                    detail: \"Instant chat is off at the moment\",\n                    life: 3000\n                });\n            };\n        };\n\n        onMounted(() => {\n            getMessages();\n            setupWebsocket();\n        });\n\n        return {\n            messages,\n            loading,\n            replyDialog,\n            openReplyDialog,\n            replyTo,\n            isMessageThred,\n            relatedMessages,\n            showMessageThread,\n            form,\n            send,\n            sendLoading,\n            closeReplyDialog: () => {\n                replyDialog.value = false;\n            }\n        };\n    }\n};\n</script>\n","import { render } from \"./message-inbox.vue?vue&type=template&id=0ea4acb0\"\nimport script from \"./message-inbox.vue?vue&type=script&lang=js\"\nexport * from \"./message-inbox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/saif/Projects/vue-cycle-ui/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { $axios } from \"./app-http\";\n\nexport async function registerPatient(payload) {\n    const { data } = await $axios.post(\n        \"patient-msg-log/register-patient\",\n        payload\n    );\n    return data;\n}\n\nexport async function getIsPatientRegistered(id) {\n    const { data } = await $axios.get(\n        `patient-msg-log/is-patient-registered/${id}`\n    );\n    return data;\n}\n\nexport async function getPatientInformation(id) {\n    const {\n        data: { patientDetails }\n    } = await $axios.get(`patient-msg-log/patient-data/${id}`);\n    return patientDetails;\n}\n\nexport async function searchAllPatient(term) {\n    const { data } = await $axios.get(\"demographics/search-all\", {\n        params: {\n            term\n        }\n    });\n    return data;\n}\n\nexport async function getPatient(id) {\n    const { data } = await $axios.get(`demographics/${id}`);\n    return data;\n}\n\nexport async function getAllMessages() {\n    const { data } = await $axios.get(\"patient-msg-log/all-messages\");\n    return data;\n}\n\nexport async function getPatientMessage(id, name) {\n    const { data } = await $axios.get(\"patient-msg-log/patient-messages\", {\n        params: {\n            patientId: id,\n            name: name\n        }\n    });\n    return data;\n}\n\nexport async function composeMessage(payload) {\n    const { data } = await $axios.post(\"patient-msg-log/compose-sms\", payload);\n    return data;\n}\n\nexport async function getRelatedMessges(id) {\n    const { data } = await $axios.get(\"patient-msg-log/related-msg\", {\n        params: { parentMsgId: id }\n    });\n    return data;\n}\n"],"sourceRoot":""}