{"version":3,"sources":["webpack:///./src/views/message-inbox.vue?aa4f","webpack:///./src/views/message-inbox.vue","webpack:///./src/views/message-inbox.vue?0841","webpack:///./src/service/patient-message-log.js"],"names":["class","for","selectAll","binary","selectAllChangeHandler","label","archiveMessageHandler","value","messages","responsiveLayout","showGridlines","loading","dataKey","selectionMode","selection","selectedMessages","redirectToMessage","rowClass","getRowClass","headerStyle","header","field","style","body","data","unRead","openReplyDialog","visible","replyDialog","closable","footer","closeReplyDialog","sendSMS","markReadSMS","replyAsSMS","send","legend","isMessageThred","relatedMessages","disabled","rows","showMessageThread","replyTo","form","subject","message","setup","store","router","sendTo","sentBy","state","user","providerNo","senderType","parent","mId","sendBy","pid","id","relatedMsg","newVal","websocket","sendLoading","payload","msgId","post","then","response","toast","add","severity","summary","detail","life","getMessages","catch","error","newMessage","JSON","stringify","sender_id","receiver_id","artCycle","patient","terminal","messageRecords","emit","setupWebsocket","onmessage","event","parse","onerror","ids","filter","item","map","length","status","status2","queryParam","patientId","to","push","name","query","resp","__exports__","render","registerPatient","$axios","getPatientInformation","get","patientDetails","searchAllPatient","term","params","getPatient","getAllMessages","getPatientMessage","limit","getPatientSMSList","isSMS","composeMessage","composeMessageV2","getRelatedMessges","parentMsgId","archiveMesage","archiveList","STATSUS","ok","archiveSMS"],"mappings":"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","file":"js/chunk-6ba46096.bee2307b.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./message-inbox.vue?vue&type=style&index=0&id=73d591cc&scoped=true&lang=css\"","<template>\r\n    <div class=\"container1\">\r\n        <div class=\"p-d-flex p-jc-end\">\r\n            <div class=\"p-field-checkbox p-mr-2 p-mt-2\">\r\n                <p-checkbox\r\n                    v-model=\"selectAll\"\r\n                    :binary=\"true\"\r\n                    @change=\"selectAllChangeHandler\"\r\n                />\r\n                <label for=\"\">Select All</label>\r\n            </div>\r\n            <p-button\r\n                label=\"Archive\"\r\n                class=\"p-mr-2\"\r\n                @click=\"archiveMessageHandler\"\r\n            />\r\n            <p-button label=\"Appointment Stat\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"container2\">\r\n        <div class=\"legend\">All Messages</div>\r\n            <p-data-table\r\n                :value=\"messages\"\r\n                responsiveLayout=\"scroll\"\r\n                showGridlines\r\n                class=\"p-datatable-sm p-mb-1 message-table\"\r\n                :loading=\"loading\"\r\n                dataKey=\"id\"\r\n                selectionMode=\"single\"\r\n                v-model:selection=\"selectedMessages\"\r\n                @row-dblclick=\"redirectToMessage\"\r\n                :rowClass=\"getRowClass\"\r\n            >\r\n                <p-column\r\n                    selectionMode=\"multiple\"\r\n                    headerStyle=\"width: 3em\"\r\n                ></p-column>\r\n                <p-column header=\"Date\" field=\"sentdate\" style=\"width: 150px\" />\r\n                <p-column header=\"Subject\" field=\"subject\" />\r\n                <p-column header=\"Sent by\" field=\"user_name\" />\r\n                <p-column header=\"From\" field=\"sendBy\" />\r\n                <p-column header=\"Message\" field=\"message\" />\r\n                <p-column header=\"#\">\r\n                    <template #body=\"{data}\">\r\n                        <p-badge v-if=\"data.unRead == 1\" />\r\n                    </template>\r\n                </p-column>\r\n                <p-column header=\"Action\" field=\"action\" style=\"width: 150px\">\r\n                    <template #body=\"{data}\">\r\n                        <p-button\r\n                            label=\"Reply\"\r\n                            class=\"p-button-sm p-mr-1\"\r\n                            @click=\"openReplyDialog(data)\"\r\n                        />\r\n                        <!-- <p-button label=\"ENG\" class=\"p-button-sm\" /> -->\r\n                    </template>\r\n                </p-column>\r\n            </p-data-table>\r\n    </div>\r\n\r\n    <p-dialog\r\n        v-model:visible=\"replyDialog\"\r\n        :closable=\"false\"\r\n        style=\"width: 600px\"\r\n    >\r\n        <p-fieldset legend=\"Previous Conversation\">\r\n            <p-textarea\r\n                v-model=\"relatedMessages\"\r\n                disabled\r\n                rows=\"10\"\r\n                class=\"p-mt-1\"\r\n                style=\"width: 100%\"\r\n                v-if=\"isMessageThred\"\r\n            />\r\n            <p-button\r\n                label=\"Show Message Thread\"\r\n                v-else\r\n                @click=\"showMessageThread\"\r\n            />\r\n        </p-fieldset>\r\n        <p-fieldset :legend=\"replyTo\" class=\"p-mt-2\">\r\n            <div class=\"p-field\">\r\n                <label>Subject - {{ form.subject }}</label>\r\n                <p-textarea\r\n                    v-model=\"form.message\"\r\n                    rows=\"4\"\r\n                    class=\"p-mt-1\"\r\n                    style=\"width: 100%\"\r\n                />\r\n            </div>\r\n        </p-fieldset>\r\n\r\n        <template #footer>\r\n            <p-button label=\"Cancel\" @click=\"closeReplyDialog\" />\r\n            <p-button\r\n                v-if=\"sendSMS\"\r\n                label=\"Mark as Read\"\r\n                @click=\"markReadSMS\"\r\n                :loading=\"loading\"\r\n            />\r\n            <p-button\r\n                v-if=\"!sendSMS\"\r\n                label=\"Send\"\r\n                @click=\"send\"\r\n                :loading=\"loading\"\r\n            />\r\n            <p-button\r\n                v-else\r\n                label=\"Send SMS\"\r\n                @click=\"replyAsSMS\"\r\n                :loading=\"loading\"\r\n            />\r\n        </template>\r\n    </p-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { inject, onMounted, reactive, ref, watch } from \"vue\";\r\nimport {\r\n    getAllMessages,\r\n    composeMessageV2,\r\n    getRelatedMessges,\r\n    archiveMesage,\r\n    archiveSMS\r\n} from \"@/service/patient-message-log\";\r\nimport { useStore } from \"vuex\";\r\nimport { emitter } from \"@/event-bus\";\r\nimport { useToast } from \"primevue/usetoast\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { STATSUS } from \"@/constants\";\r\n\r\nimport { $axios } from \"@/service/app-http\";\r\n\r\nexport default {\r\n    setup() {\r\n        const store = useStore();\r\n        const router = useRouter();\r\n        const messages = ref([]);\r\n        const selectedMessages = ref([]);\r\n        const loading = ref(false);\r\n        const replyDialog = ref(false);\r\n        const selectAll = ref(false);\r\n        const sendSMS = ref(false);\r\n\r\n        const form = reactive({\r\n            subject: null,\r\n            message: null,\r\n            sendTo: null,\r\n            sentBy: store.state.user.providerNo,\r\n            senderType: 1,\r\n            parent: null,\r\n            mId: null\r\n        });\r\n\r\n        const replyTo = ref();\r\n\r\n        const openReplyDialog = (data) => {\r\n            replyTo.value = `Reply To ${data.sendBy}`;\r\n\r\n            form.subject = data.subject;\r\n            form.sendTo = data.pid;\r\n            form.parent = data.parent;\r\n            form.mId = data.id;\r\n\r\n            replyDialog.value = true;\r\n            relatedMessages.value = data.message;\r\n            isMessageThred.value = false;\r\n        };\r\n\r\n        const isMessageThred = ref(false);\r\n\r\n        const relatedMessages = ref();\r\n        const showMessageThread = async () => {\r\n            if (form.subject == \"Recevied-SMS\" && form.parent == 0) {\r\n                isMessageThred.value = true;\r\n                sendSMS.value = true;\r\n            } else {\r\n                isMessageThred.value = true;\r\n                const { relatedMsg } = await getRelatedMessges(form.parent);\r\n                relatedMessages.value = relatedMsg;\r\n                sendSMS.value = false;\r\n            }\r\n        };\r\n\r\n        watch(replyDialog, (newVal) => {\r\n            showMessageThread();\r\n        });\r\n\r\n        const websocket = inject(\"websocket\");\r\n        const sendLoading = ref(false);\r\n\r\n        const replyAsSMS = () => {\r\n            const payload = {\r\n                message: form.message,\r\n                msgId: form.mId\r\n            };\r\n\r\n            $axios\r\n                .post(\"patient/reply-sms\", payload)\r\n                .then((response) => {\r\n                    toast.add({\r\n                        severity: \"success\",\r\n                        summary: \"SMS Sent\",\r\n                        detail: \"SMS sent successfully\",\r\n                        life: 3000\r\n                    });\r\n\r\n                    getMessages();\r\n\r\n                    form.subject = null;\r\n                    form.message = null;\r\n                    replyDialog.value = false;\r\n                    sendLoading.value = false;\r\n                })\r\n                .catch((error) => {\r\n                    toast.add({\r\n                        severity: \"error\",\r\n                        summary: \"Error\",\r\n                        detail: \"Failed to send SMS\",\r\n                        life: 3000\r\n                    });\r\n                });\r\n        };\r\n\r\n        const markReadSMS = () => {\r\n            const payload = {\r\n                msgId: form.mId\r\n            };\r\n\r\n            $axios\r\n                .post(\"patient/read-sms\", payload)\r\n                .then((response) => {\r\n                    toast.add({\r\n                        severity: \"success\",\r\n                        summary: \"SMS Sent\",\r\n                        detail: \"SMS marked as read\",\r\n                        life: 3000\r\n                    });\r\n\r\n                    getMessages();\r\n\r\n                    form.subject = null;\r\n                    form.message = null;\r\n                    replyDialog.value = false;\r\n                    sendLoading.value = false;\r\n                })\r\n                .catch((error) => {});\r\n        };\r\n\r\n        const send = async () => {\r\n            sendLoading.value = true;\r\n            const { newMessage } = await composeMessageV2({\r\n                ...form\r\n            });\r\n\r\n            websocket.send(\r\n                JSON.stringify({\r\n                    sender_id: store.state.user.id,\r\n                    receiver_id: store.state.artCycle.patient.id,\r\n                    terminal: \"cycle\"\r\n                })\r\n            );\r\n\r\n            form.subject = null;\r\n            form.message = null;\r\n            replyDialog.value = false;\r\n            sendLoading.value = false;\r\n            getMessages();\r\n        };\r\n\r\n        const getMessages = async () => {\r\n            loading.value = true;\r\n            try {\r\n                const { messageRecords } = await getAllMessages();\r\n                messages.value = messageRecords;\r\n                emitter.emit(\"message-inbox:get-all-messgae\");\r\n                loading.value = false;\r\n            } catch (err) {\r\n                messages.value = [];\r\n                loading.value = false;\r\n            } finally {\r\n                loading.value = false;\r\n            }\r\n        };\r\n\r\n        const toast = useToast();\r\n\r\n        const setupWebsocket = () => {\r\n            const websocket = inject(\"websocket\");\r\n            websocket.onmessage = (event) => {\r\n                const data = JSON.parse(event.data);\r\n                if (typeof data.data == \"string\") {\r\n                    const message = JSON.parse(data.data);\r\n                    if (message.terminal == \"nlp\") {\r\n                        getMessages();\r\n                    }\r\n                }\r\n            };\r\n\r\n            websocket.onerror = () => {\r\n                toast.add({\r\n                    severity: \"warn\",\r\n                    summary: \"Chat Server Down\",\r\n                    detail: \"Instant chat is off at the moment\",\r\n                    life: 3000\r\n                });\r\n            };\r\n        };\r\n\r\n        const archiveMessageHandler = async () => {\r\n            loading.value = true;\r\n            let ids = selectedMessages.value\r\n                .filter((item) => item.subject !== \"Recevied-SMS\")\r\n                .map((item) => item.id);\r\n\r\n            if (ids.length > 0) {\r\n                let { status } = await archiveMesage(ids);\r\n                getMessages();\r\n            }\r\n\r\n            loading.value = true;\r\n            ids = selectedMessages.value\r\n                .filter((item) => item.subject === \"Recevied-SMS\")\r\n                .map((item) => item.id);\r\n            if (ids.length > 0) {\r\n                let { status2 } = await archiveSMS(ids);\r\n                getMessages();\r\n            }\r\n        };\r\n\r\n        const redirectToMessage = (data) => {  \r\n            \r\n            //console.log(data);\r\n            let queryParam = null;\r\n\r\n            queryParam = {\r\n                patientId: data.data.pid,\r\n                to: \"patient-message-log\"\r\n            };\r\n\r\n            if (queryParam != null) {\r\n                router.push({\r\n                    name: \"redirect\",\r\n                    query: queryParam\r\n                });\r\n            }\r\n        };\r\n\r\n        onMounted(() => {\r\n            getMessages();\r\n            setupWebsocket();\r\n            emitter.emit(\"message-nofication:has-seen\");\r\n        });\r\n\r\n        return {\r\n            messages,\r\n            selectedMessages,\r\n            loading,\r\n            sendSMS,\r\n            replyAsSMS,\r\n            markReadSMS,\r\n            selectAll,\r\n            replyDialog,\r\n            openReplyDialog,\r\n            replyTo,\r\n            isMessageThred,\r\n            relatedMessages,\r\n            showMessageThread,\r\n            form,\r\n            send,\r\n            sendLoading,\r\n            archiveMessageHandler,\r\n            closeReplyDialog: () => {\r\n                replyDialog.value = false;\r\n            },\r\n            selectAllChangeHandler: (event) => {\r\n                if (selectAll.value) {\r\n                    selectedMessages.value = [...messages.value];\r\n                } else {\r\n                    selectedMessages.value = [];\r\n                }\r\n            },\r\n            redirectToMessage,\r\n            getRowClass(data) {\r\n                let resp = {\r\n                    \"row-green\": data.subject === \"Recevied-SMS\"\r\n                };\r\n\r\n                return resp;\r\n            },        \r\n        };\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n:deep() .row-green {\r\n    background-color: #bff1b0 !important;\r\n}\r\n\r\n.container2 {\r\n    margin-top: 20px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    border: 1px solid #ccc;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n}\r\n\r\n.legend {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n    color: #333;\r\n    padding: 5px 10px;\r\n    background-color: #f7f7f7;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    display: inline-block;\r\n    margin-bottom: 10px;\r\n    margin-top: 5px;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.5px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .container1 {\r\n        margin-top: 45px;\r\n    }\r\n}\r\n</style>\r\n","import { render } from \"./message-inbox.vue?vue&type=template&id=73d591cc&scoped=true\"\nimport script from \"./message-inbox.vue?vue&type=script&lang=js\"\nexport * from \"./message-inbox.vue?vue&type=script&lang=js\"\n\nimport \"./message-inbox.vue?vue&type=style&index=0&id=73d591cc&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Workspace\\\\newlife\\\\vue-cycle-ui\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73d591cc\"]])\n\nexport default __exports__","import { STATSUS } from \"@/constants\";\r\nimport axios from \"axios\";\r\nimport { $axios } from \"./app-http\";\r\n\r\nexport async function registerPatient(payload) {\r\n    const { data } = await $axios.post(\r\n        \"patient-msg-log/register-patient\",\r\n        payload\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function getIsPatientRegistered(id) {\r\n    const { data } = await $axios.get(\r\n        `patient-msg-log/is-patient-registered/${id}`\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function getPatientInformation(id) {\r\n    const {\r\n        data: { patientDetails }\r\n    } = await $axios.get(`patient-msg-log/patient-data/${id}`);\r\n    return patientDetails;\r\n}\r\n\r\nexport async function searchAllPatient(term) {\r\n    const { data } = await $axios.get(\"demographics/search-all\", {\r\n        params: {\r\n            term\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function getPatient(id) {\r\n    const { data } = await $axios.get(`demographics/${id}`);\r\n    return data;\r\n}\r\n\r\nexport async function getAllMessages() {\r\n    const { data } = await $axios.get(\"patient-msg-log/all-messages\");\r\n    return data;\r\n}\r\n\r\nexport async function getPatientMessage(id, name, limit = 50) {\r\n    const { data } = await $axios.get(\"patient-msg-log/patient-messages\", {\r\n        params: {\r\n            patientId: id,\r\n            name: name,\r\n            limit\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function getPatientSMSList(id, name, limit = 50) {\r\n    const { data } = await $axios.get(\"patient-msg-log/patient-messages\", {\r\n        params: {\r\n            patientId: id,\r\n            name: name,\r\n            isSMS: true,\r\n            limit\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function composeMessage(payload) {\r\n    const { data } = await $axios.post(\"patient-msg-log/compose-sms\", payload);\r\n    return data;\r\n}\r\n\r\nexport async function composeMessageV2(payload) {\r\n    const { data } = await $axios.post(\r\n        \"patient-msg-log/compose-sms-v2\",\r\n        payload\r\n    );\r\n    return data;\r\n}\r\n\r\nexport async function getRelatedMessges(id) {\r\n    const { data } = await $axios.get(\"patient-msg-log/related-msg\", {\r\n        params: { parentMsgId: id }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport async function archiveMesage(archiveList) {\r\n    try {\r\n        const { data } = await $axios.post(\r\n            \"patient-msg-log/archive-message-for-staff\",\r\n            {\r\n                archiveList\r\n            }\r\n        );\r\n        return {\r\n            status: STATSUS.ok\r\n        };\r\n    } catch (err) {\r\n        return {\r\n            status: STATSUS.error\r\n        };\r\n    }\r\n}\r\n\r\nexport async function archiveSMS(archiveList) {\r\n    try {\r\n        const { data } = await $axios.post(\r\n            \"patient-msg-log/archive-sms-for-staff\",\r\n            {\r\n                archiveList\r\n            }\r\n        );\r\n        return {\r\n            status: STATSUS.ok\r\n        };\r\n    } catch (err) {\r\n        return {\r\n            status: STATSUS.error\r\n        };\r\n    }\r\n}\r\n"],"sourceRoot":""}